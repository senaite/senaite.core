<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="senaite.core">

  <include package="plone.behavior" file="meta.zcml"/>

  <!-- Auto-Generate ID Behavior for Dexterity based contents -->
  <plone:behavior
      title="Auto-Generate ID Behavior for Dexterity Contents"
      description="Generates an ID with the IDServer"
      provides="senaite.core.interfaces.IAutoGenerateID"
      />
  <!-- BBB: Auto-Generate ID Behavior for Dexterity based contents -->
  <plone:behavior
      title="Auto-Generate ID Behavior for Dexterity Contents"
      description="Generates an ID with the IDServer"
      provides="bika.lims.interfaces.IAutoGenerateID"
      />

  <!-- Multicatalog Behavior for Dexterity based contents -->
  <plone:behavior
      title="Multi Catalog Behavior for Dexterity Contents"
      description="Catalog Dexterity contents in multiple catalogs"
      provides="senaite.core.interfaces.IMultiCatalogBehavior"
      />
  <!-- BBB: Multicatalog Behavior for Dexterity based contents -->
  <plone:behavior
      title="Multi Catalog Behavior for Dexterity Contents"
      description="Catalog Dexterity contents in multiple catalogs"
      provides="bika.lims.interfaces.IMultiCatalogBehavior"
      />

  <!-- See https://pypi.org/project/plone.behavior/#zcml-examples -->

  <!--
  ClientShareableBehavior
  - with `behavior = IClientShareableBehavior(context)` a ClientShareableFactory is returned
  - `context` provides IClientShareableMarker
  - `ClientShareableFactory` provides `IClientShareableBehavior`
  -->
  <plone:behavior
      title="ClientShareableBehavior"
      description="Adds the ability to share a content across clients"
      name="senaite.core.behavior.clientshareable"
      provides=".IClientShareableBehavior"
      marker=".IClientShareableMarker"
      factory=".clientshareable.ClientShareableFactory"
      for=".IClientShareable"/>

  <!-- Extended schema fields for labels on dexterity based contents -->
  <plone:behavior
      title="Label schema extender"
      description="Adds the ability to add/remove labels"
      name="senaite.core.interfaces.ICanHaveLabels"
      provides=".label.ILabelSchema"
      marker="senaite.core.interfaces.ICanHaveLabels"
      factory=".label.LabelSchema"
      for="plone.dexterity.interfaces.IDexterityContent"
      />

  <!-- Adapter to dynamically extend the label schema fields for dexterity contents

       Usually the behavior needs to be registered for the FTI of each type to
       make it work for *all* contents of this type.

       Since we want to enable/disable the extended fields based on the marker
       interface `ICanHaveLabels`, we want provide the behavior dynamically for
       each object individually.

       This makes it behave the same way as for AT schema extender.
  -->
  <adapter factory=".label.LabelBehaviorAssignable" />

</configure>
