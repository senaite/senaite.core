/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./components/editform.js":
/*!********************************!*\
  !*** ./components/editform.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nvar _excluded = [\"name\", \"error\"],\n  _excluded2 = [\"message\", \"level\"],\n  _excluded3 = [\"title\", \"message\"],\n  _excluded4 = [\"name\"],\n  _excluded5 = [\"name\"],\n  _excluded6 = [\"name\", \"message\"],\n  _excluded7 = [\"name\", \"message\"],\n  _excluded8 = [\"name\", \"value\"],\n  _excluded9 = [\"selector\", \"html\"],\n  _excluded10 = [\"selector\", \"name\", \"value\"],\n  _excluded11 = [\"selector\", \"event\", \"name\"];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* SENAITE Edit Form Handler\n *\n * This code handles field changes in edit forms and updates others according to\n * the changes with the help of adapters.\n *\n */\n\n// needed for Bootstrap toasts\n\nvar EditForm = /*#__PURE__*/function () {\n  function EditForm(config) {\n    _classCallCheck(this, EditForm);\n    this.config = Object.assign({\n      \"form_selectors\": [],\n      \"field_selectors\": []\n    }, config);\n    this.hooked_fields = [];\n\n    // bind event handlers\n    this.on_mutated = this.on_mutated.bind(this);\n    this.on_modified = this.on_modified.bind(this);\n    this.on_submit = this.on_submit.bind(this);\n    this.on_blur = this.on_blur.bind(this);\n    this.on_click = this.on_click.bind(this);\n    this.on_change = this.on_change.bind(this);\n    this.on_reference_select = this.on_reference_select.bind(this);\n    this.on_reference_deselect = this.on_reference_deselect.bind(this);\n    this.init_forms();\n  }\n\n  /**\n   * Initialize all form elements given by the config\n   */\n  _createClass(EditForm, [{\n    key: \"init_forms\",\n    value: function init_forms() {\n      var selectors = this.config.form_selectors;\n      var _iterator = _createForOfIteratorHelper(selectors),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var selector = _step.value;\n          var form = document.querySelector(selector);\n          if (form && form.tagName === \"FORM\") {\n            this.setup_form(form);\n            this.watch_form(form);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    /**\n     * Trigger `initialized` event on the form element\n     */\n  }, {\n    key: \"setup_form\",\n    value: function setup_form(form) {\n      console.debug(\"EditForm::setup_form(\".concat(form, \")\"));\n      this.ajax_send(form, {}, \"initialized\");\n    }\n\n    /**\n     * Bind event handlers on form fields to monitor changes\n     */\n  }, {\n    key: \"watch_form\",\n    value: function watch_form(form) {\n      console.debug(\"EditForm::watch_form(\".concat(form, \")\"));\n      var fields = this.get_form_fields(form);\n      var _iterator2 = _createForOfIteratorHelper(fields),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var field = _step2.value;\n          this.hook_field(field);\n        }\n        // observe DOM mutations in form\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this.observe_mutations(form);\n      // bind custom form event handlers\n      form.addEventListener(\"modified\", this.on_modified);\n      form.addEventListener(\"mutated\", this.on_mutated);\n      if (form.hasAttribute(\"ajax-submit\")) {\n        form.addEventListener(\"submit\", this.on_submit);\n      }\n    }\n\n    /**\n     * Bind event handlers to field\n     */\n  }, {\n    key: \"hook_field\",\n    value: function hook_field(field) {\n      // return immediately if the fields is already hooked\n      if (this.hooked_fields.indexOf(field) !== -1) {\n        // console.debug(`Field '${field.name}' is already hooked`);\n        return;\n      }\n      if (this.is_button(field) || this.is_input_button(field)) {\n        // bind click event\n        field.addEventListener(\"click\", this.on_click);\n      } else if (this.is_reference(field)) {\n        // bind custom events from the ReactJS queryselect widget\n        field.addEventListener(\"select\", this.on_reference_select);\n        field.addEventListener(\"deselect\", this.on_reference_deselect);\n      } else if (this.is_text(field) || this.is_textarea(field)) {\n        // bind change event\n        field.addEventListener(\"change\", this.on_change);\n      } else if (this.is_select(field)) {\n        // bind events for select field\n        field.addEventListener(\"click\", this.on_click);\n        field.addEventListener(\"change\", this.on_change);\n      } else if (this.is_radio(field) || this.is_checkbox(field)) {\n        // bind click event\n        field.addEventListener(\"click\", this.on_click);\n      } else {\n        // bind blur event\n        field.addEventListener(\"blur\", this.on_blur);\n      }\n      // console.debug(`Hooked field '${field.name}'`);\n      // remember hooked fields\n      this.hooked_fields = this.hooked_fields.concat(field);\n    }\n\n    /**\n     * Initialize a DOM mutation observer to rebind dynamic added fields,\n     * e.g. for records field etc.\n     */\n  }, {\n    key: \"observe_mutations\",\n    value: function observe_mutations(form) {\n      var observer = new MutationObserver(function (mutations) {\n        var event = new CustomEvent(\"mutated\", {\n          detail: {\n            form: form,\n            mutations: mutations\n          }\n        });\n        form.dispatchEvent(event);\n      });\n      // observe the form with all contained elements\n      observer.observe(form, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * Handle a single DOM mutation\n     */\n  }, {\n    key: \"handle_mutation\",\n    value: function handle_mutation(form, mutation) {\n      var target = mutation.target;\n      var parent = target.closest(\".field\");\n      var added = mutation.addedNodes;\n      var removed = mutation.removedNodes;\n      var selectors = this.config.field_selectors;\n      // handle picklist widget\n      if (this.is_multiple_select(target)) {\n        return this.notify(form, target, \"modified\");\n      }\n      // hook new fields, e.g. when the records field \"More\" button was clicked\n      if (added && target.ELEMENT_NODE) {\n        var _iterator3 = _createForOfIteratorHelper(target.querySelectorAll(selectors)),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var field = _step3.value;\n            this.hook_field(field);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n      // notify new added elements, e.g. when a category was expanded or the\n      // \"show more\" button was clicked in listings\n      if (added.length > 0) {\n        return this.notify_added(form, added, \"added\");\n      }\n    }\n\n    /**\n     * toggles the submit button\n     */\n  }, {\n    key: \"toggle_submit\",\n    value: function toggle_submit(form, toggle) {\n      var btn = form.querySelector(\"input[type='submit']\");\n      btn.disabled = !toggle;\n    }\n\n    /**\n     * toggles the display of the field with the `d-none` class\n     */\n  }, {\n    key: \"toggle_field_visibility\",\n    value: function toggle_field_visibility(field) {\n      var toggle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var parent = field.closest(\".field\");\n      var css_class = \"d-none\";\n      if (toggle === false) {\n        parent.classList.add(css_class);\n      } else {\n        parent.classList.remove(css_class);\n      }\n    }\n\n    /**\n     * check if fields have errors\n     */\n  }, {\n    key: \"has_field_errors\",\n    value: function has_field_errors(form) {\n      var fields_with_errors = form.querySelectorAll(\".is-invalid\");\n      if (fields_with_errors.length > 0) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * set field readonly\n     */\n  }, {\n    key: \"set_field_readonly\",\n    value: function set_field_readonly(field) {\n      var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      field.setAttribute(\"readonly\", \"\");\n      var existing_message = field.parentElement.querySelector(\"div.message\");\n      if (existing_message) {\n        existing_message.innerHTML = _t(message);\n      } else {\n        var div = document.createElement(\"div\");\n        div.className = \"message text-secondary small\";\n        div.innerHTML = _t(message);\n        field.parentElement.appendChild(div);\n      }\n    }\n\n    /**\n     * set field editable\n     */\n  }, {\n    key: \"set_field_editable\",\n    value: function set_field_editable(field) {\n      var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      field.removeAttribute(\"readonly\");\n      var existing_message = field.parentElement.querySelector(\"div.message\");\n      if (existing_message) {\n        existing_message.innerHTML = _t(message);\n      } else {\n        var div = document.createElement(\"div\");\n        div.className = \"message text-secondary small\";\n        div.innerHTML = _t(message);\n        field.parentElement.appendChild(div);\n      }\n    }\n\n    /**\n     * set field error\n     */\n  }, {\n    key: \"set_field_error\",\n    value: function set_field_error(field, message) {\n      field.classList.add(\"is-invalid\");\n      var existing_message = field.parentElement.querySelector(\"div.invalid-feedback\");\n      if (existing_message) {\n        existing_message.innerHTML = _t(message);\n      } else {\n        var div = document.createElement(\"div\");\n        div.className = \"invalid-feedback\";\n        div.innerHTML = _t(message);\n        field.parentElement.appendChild(div);\n      }\n    }\n\n    /**\n     * remove field error\n     */\n  }, {\n    key: \"remove_field_error\",\n    value: function remove_field_error(field) {\n      field.classList.remove(\"is-invalid\");\n      var msg = field.parentElement.querySelector(\".invalid-feedback\");\n      if (msg) {\n        msg.remove();\n      }\n    }\n\n    /**\n     * add a status message\n     * @param {string} message the message to display in the alert\n     * @param {string} level   one of \"info\", \"success\", \"warning\", \"danger\"\n     * @param {object} options additional options to control the behavior\n     *                 - option {string} title: alert title in bold\n     *                 - option {string} flush: remove previous alerts\n     */\n  }, {\n    key: \"add_statusmessage\",\n    value: function add_statusmessage(message) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n      var options = arguments.length > 2 ? arguments[2] : undefined;\n      options = options || {};\n      var el = document.createElement(\"div\");\n      var title = options.title || \"\".concat(level.charAt(0).toUpperCase() + level.slice(1));\n      el.innerHTML = \"\\n      <div class=\\\"alert alert-\".concat(level, \" alert-dismissible fade show\\\" role=\\\"alert\\\">\\n        <strong>\").concat(title, \"</strong>\\n        \").concat(_t(message), \"\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    \");\n      el = el.firstElementChild;\n      var parent = document.getElementById(\"viewlet-above-content\");\n\n      // clear put previous alerts\n      if (options.flush) {\n        var _iterator4 = _createForOfIteratorHelper(parent.querySelectorAll(\".alert\")),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _el = _step4.value;\n            _el.remove();\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n      parent.appendChild(el);\n      return el;\n    }\n\n    /**\n     * add a notification message\n     */\n  }, {\n    key: \"add_notification\",\n    value: function add_notification(title, message, options) {\n      options = options || {};\n      options = Object.assign({\n        animation: true,\n        autohide: true,\n        delay: 5000\n      }, options);\n      var el = document.createElement(\"div\");\n      el.innerHTML = \"\\n      <div class=\\\"toast\\\" style=\\\"width:300px\\\" role=\\\"alert\\\"\\n           data-animation=\\\"\".concat(options.animation, \"\\\"\\n           data-autohide=\\\"\").concat(options.autohide, \"\\\"\\n           data-delay=\\\"\").concat(options.delay, \"\\\">\\n        <div class=\\\"toast-header\\\">\\n          <strong class=\\\"mr-auto\\\">\").concat(title.charAt(0).toUpperCase() + title.slice(1), \"</strong>\\n          <button type=\\\"button\\\" class=\\\"ml-2 mb-1 close\\\" data-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"toast-body\\\">\\n          \").concat(_t(message), \"\\n        </div>\\n      </div>\\n    \");\n      el = el.firstElementChild;\n      var parent = document.querySelector(\".toast-container\");\n      if (!parent) {\n        parent = document.createElement(\"div\");\n        parent.innerHTML = \"\\n        <div style=\\\"position: fixed; top: 0px; right: 0px; width=100%;\\\">\\n          <div class=\\\"toast-container\\\" style=\\\"position: absolute; top: 10px; right: 10px;\\\">\\n          </div>\\n        </div>\\n      \";\n        var wrapper = document.querySelector(\".container-fluid\");\n        wrapper.appendChild(parent);\n        parent = parent.querySelector(\".toast-container\");\n      }\n      parent.appendChild(el);\n      return el;\n    }\n\n    /**\n     * update the form with the response from the server\n     */\n  }, {\n    key: \"update_form\",\n    value: function update_form(form, data) {\n      var _this = this;\n      console.info(\"*** UPDATE FORM ***\", data);\n      var hide = data.hide || [];\n      var show = data.show || [];\n      var readonly = data.readonly || [];\n      var editable = data.editable || [];\n      var errors = data.errors || [];\n      var messages = data.messages || [];\n      var notifications = data.notifications || [];\n      var updates = data.updates || [];\n      var html = data.html || [];\n      var attributes = data.attributes || [];\n      var callbacks = data.callbacks || [];\n\n      // render field errors\n      var _iterator5 = _createForOfIteratorHelper(errors),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var record = _step5.value;\n          var name = void 0,\n            error = void 0,\n            rest = void 0;\n          var _record = record;\n          name = _record.name;\n          error = _record.error;\n          rest = _objectWithoutProperties(_record, _excluded);\n          _record;\n          var el = this.get_form_field_by_name(form, name);\n          if (!el) continue;\n          if (error) {\n            this.set_field_error(el, error);\n          } else {\n            this.remove_field_error(el);\n          }\n        }\n\n        // render status messages\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var _iterator6 = _createForOfIteratorHelper(messages),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _record2 = _step6.value;\n          var _name = void 0,\n            _error = void 0,\n            _rest = void 0;\n          var _record3 = _record2;\n          message = _record3.message;\n          level = _record3.level;\n          _rest = _objectWithoutProperties(_record3, _excluded2);\n          _record3;\n          var level = level || \"info\";\n          var message = message || \"\";\n          this.add_statusmessage(message, level, _rest);\n        }\n\n        // render notification messages\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      var _iterator7 = _createForOfIteratorHelper(notifications),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _record4 = _step7.value;\n          var title = void 0,\n            _message = void 0,\n            _rest2 = void 0;\n          var _record5 = _record4;\n          title = _record5.title;\n          _message = _record5.message;\n          _rest2 = _objectWithoutProperties(_record5, _excluded3);\n          _record5;\n          var _el2 = this.add_notification(title, _message, _rest2);\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(_el2).toast(\"show\");\n        }\n\n        // hide fields\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var _iterator8 = _createForOfIteratorHelper(hide),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _record6 = _step8.value;\n          var _name2 = void 0,\n            _rest3 = void 0;\n          var _record7 = _record6;\n          _name2 = _record7.name;\n          _rest3 = _objectWithoutProperties(_record7, _excluded4);\n          _record7;\n          var _el3 = this.get_form_field_by_name(form, _name2);\n          if (!_el3) continue;\n          this.toggle_field_visibility(_el3, false);\n        }\n\n        // show fields\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      var _iterator9 = _createForOfIteratorHelper(show),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var _record8 = _step9.value;\n          var _name3 = void 0,\n            _rest4 = void 0;\n          var _record9 = _record8;\n          _name3 = _record9.name;\n          _rest4 = _objectWithoutProperties(_record9, _excluded5);\n          _record9;\n          var _el4 = this.get_form_field_by_name(form, _name3);\n          if (!_el4) continue;\n          this.toggle_field_visibility(_el4, true);\n        }\n\n        // readonly fields\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      var _iterator10 = _createForOfIteratorHelper(readonly),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _record10 = _step10.value;\n          var _name4 = void 0,\n            _message2 = void 0,\n            _rest5 = void 0;\n          var _record11 = _record10;\n          _name4 = _record11.name;\n          _message2 = _record11.message;\n          _rest5 = _objectWithoutProperties(_record11, _excluded6);\n          _record11;\n          var _el5 = this.get_form_field_by_name(form, _name4);\n          if (!_el5) continue;\n          this.set_field_readonly(_el5, _message2);\n        }\n\n        // editable fields\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      var _iterator11 = _createForOfIteratorHelper(editable),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var _record12 = _step11.value;\n          var _name5 = void 0,\n            _message3 = void 0,\n            _rest6 = void 0;\n          var _record13 = _record12;\n          _name5 = _record13.name;\n          _message3 = _record13.message;\n          _rest6 = _objectWithoutProperties(_record13, _excluded7);\n          _record13;\n          var _el6 = this.get_form_field_by_name(form, _name5);\n          if (!_el6) continue;\n          this.set_field_editable(_el6, _message3);\n        }\n\n        // updated fields\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      var _iterator12 = _createForOfIteratorHelper(updates),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _record14 = _step12.value;\n          var _name6 = void 0,\n            value = void 0,\n            _rest7 = void 0;\n          var _record15 = _record14;\n          _name6 = _record15.name;\n          value = _record15.value;\n          _rest7 = _objectWithoutProperties(_record15, _excluded8);\n          _record15;\n          var _el7 = this.get_form_field_by_name(form, _name6);\n          if (!_el7) continue;\n          this.set_field_value(_el7, value);\n        }\n\n        // html\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      var _iterator13 = _createForOfIteratorHelper(html),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _record16 = _step13.value;\n          var selector = void 0,\n            _html = void 0,\n            _rest8 = void 0;\n          var _record17 = _record16;\n          selector = _record17.selector;\n          _html = _record17.html;\n          _rest8 = _objectWithoutProperties(_record17, _excluded9);\n          _record17;\n          var _el8 = form.querySelector(selector);\n          if (!_el8) continue;\n          if (_rest8.append) {\n            _el8.innerHTML = _el8.innerHTML + _html;\n          } else {\n            _el8.innerHTML = _html;\n          }\n        }\n\n        // set attribute to an element\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      var _iterator14 = _createForOfIteratorHelper(attributes),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _record18 = _step14.value;\n          var _selector = void 0,\n            _name7 = void 0,\n            _value = void 0,\n            _rest9 = void 0;\n          var _record19 = _record18;\n          _selector = _record19.selector;\n          _name7 = _record19.name;\n          _value = _record19.value;\n          _rest9 = _objectWithoutProperties(_record19, _excluded10);\n          _record19;\n          var _el9 = form.querySelector(_selector);\n          if (!_el9) continue;\n          if (_value === null) {\n            _el9.removeAttribute(_name7);\n          } else {\n            _el9.addAttribute(_name7, _value);\n          }\n        }\n\n        // register callbacks\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n      var _iterator15 = _createForOfIteratorHelper(callbacks),\n        _step15;\n      try {\n        var _loop = function _loop() {\n          var record = _step15.value;\n          var selector, event, name, rest;\n          // register local callback to apply additional data\n          var _record20 = record;\n          selector = _record20.selector;\n          event = _record20.event;\n          name = _record20.name;\n          rest = _objectWithoutProperties(_record20, _excluded11);\n          _record20;\n          var callback = function callback(event) {\n            var data = {\n              name: name,\n              target: event.currentTarget\n            };\n            _this.ajax_send(form, data, \"callback\");\n          };\n          if (selector === \"document\") {\n            document.addEventListener(event, callback);\n          } else {\n            document.querySelectorAll(selector).forEach(function (el) {\n              el.addEventListener(event, callback);\n            });\n          }\n        };\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          _loop();\n        }\n\n        // disallow submit when field errors are present\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      if (this.has_field_errors(form)) {\n        this.toggle_submit(form, false);\n      } else {\n        this.toggle_submit(form, true);\n      }\n    }\n\n    /**\n     * return a form field by name\n     */\n  }, {\n    key: \"get_form_field_by_name\",\n    value: function get_form_field_by_name(form, name) {\n      // get the first element that matches the name\n      var exact = form.querySelector(\"[name='\".concat(name, \"']\"));\n      var fuzzy = form.querySelector(\"[name^='\".concat(name, \"']\"));\n      var field = exact || fuzzy || null;\n      if (field === null) {\n        return null;\n      }\n      return field;\n    }\n\n    /**\n     * return a dictionary of all the form values\n     */\n  }, {\n    key: \"get_form_data\",\n    value: function get_form_data(form) {\n      var data = {};\n      var form_data = new FormData(form);\n      form_data.forEach(function (value, key) {\n        data[key] = value;\n      });\n      // handle DX add views\n      var view_name = this.get_view_name();\n      if (view_name.indexOf(\"++add++\") > -1) {\n        // inject `form_adapter_name` for named multi adapter lookup\n        // see senaite.core.browser.form.ajax.FormView for lookup logic\n        data.form_adapter_name = view_name;\n      }\n      return data;\n    }\n\n    /**\n     * Return form fields for the given selectors of the config\n     */\n  }, {\n    key: \"get_form_fields\",\n    value: function get_form_fields(form) {\n      console.debug(\"EditForm::get_form_fields(\".concat(form, \")\"));\n      var fields = [];\n      var selectors = this.config.field_selectors;\n      var _iterator16 = _createForOfIteratorHelper(selectors),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var _fields;\n          var selector = _step16.value;\n          var nodes = form.querySelectorAll(selector);\n          fields = (_fields = fields).concat.apply(_fields, _toConsumableArray(nodes.values()));\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return fields;\n    }\n\n    /**\n     * returns the name of the field w/o ZPublisher converter\n     */\n  }, {\n    key: \"get_field_name\",\n    value: function get_field_name(field) {\n      var name = field.name;\n      return name.split(\":\")[0];\n    }\n\n    /**\n     * return the value of the form field\n     */\n  }, {\n    key: \"get_field_value\",\n    value: function get_field_value(field) {\n      if (this.is_checkbox(field)) {\n        // returns true/false for checkboxes\n        return field.checked;\n      } else if (this.is_select(field)) {\n        // returns a list of selected option\n        var selected = field.selectedOptions;\n        return Array.prototype.map.call(selected, function (option) {\n          return option.value;\n        });\n      } else if (this.is_reference(field)) {\n        return field.value.split(\"\\n\");\n      }\n      // return the plain field value\n      return field.value;\n    }\n\n    /**\n     * set the value of the form field\n     */\n  }, {\n    key: \"set_field_value\",\n    value: function set_field_value(field, value) {\n      // for reference/select fields\n      var selected = value.selected || [];\n      var options = value.options || [];\n\n      // set reference value\n      if (this.is_reference(field)) {\n        field.value = selected.join(\"\\n\");\n      }\n      // set select field\n      else if (this.is_select(field)) {\n        if (selected.length == 0) {\n          var old_selected = field.options[field.selected];\n          if (old_selected) {\n            selected = [old_selected.value];\n          }\n        }\n        // remove all options\n        field.options.length = 0;\n        // sort options\n        options.sort(function (a, b) {\n          var _a = a.title.toLowerCase();\n          var _b = b.title.toLowerCase();\n          if (a.value === null) _a = \"\";\n          if (b.value === null) _b = \"\";\n          if (_a < _b) return -1;\n          if (_a > _b) return 1;\n        });\n        // build new options\n        var _iterator17 = _createForOfIteratorHelper(options),\n          _step17;\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var option = _step17.value;\n            var el = document.createElement(\"option\");\n            el.value = option.value;\n            el.innerHTML = option.title;\n            // select item if the value is in the selected array\n            if (selected.indexOf(option.value) !== -1) {\n              el.selected = true;\n            }\n            field.appendChild(el);\n          }\n          // select first item\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n        if (selected.length == 0) {\n          field.selectedIndex = 0;\n        }\n      }\n      // set checkbox value\n      else if (this.is_checkbox(field)) {\n        field.checked = value;\n      }\n      // set other field values\n      else {\n        field.value = value;\n      }\n    }\n\n    /**\n     * trigger `modified` event on the form\n     */\n  }, {\n    key: \"modified\",\n    value: function modified(el) {\n      var event = new CustomEvent(\"modified\", {\n        detail: {\n          field: el,\n          form: el.form\n        }\n      });\n      // dispatch the event on the element\n      el.form.dispatchEvent(event);\n    }\n\n    /**\n     * trigger ajax loading events\n     */\n  }, {\n    key: \"loading\",\n    value: function loading() {\n      var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var event_type = toggle ? \"ajaxStart\" : \"ajaxStop\";\n      var event = new CustomEvent(event_type);\n      document.dispatchEvent(event);\n    }\n\n    /**\n     * notify a field change to the server ajax endpoint\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(form, field, endpoint) {\n      var data = {\n        name: this.get_field_name(field),\n        value: this.get_field_value(field)\n      };\n      this.ajax_send(form, data, endpoint);\n    }\n\n    /**\n     * notify that DOM Elements were added\n     */\n  }, {\n    key: \"notify_added\",\n    value: function notify_added(form, added, endpoint) {\n      var data = {\n        added: []\n      };\n      added.forEach(function (el) {\n        var record = {};\n        var _iterator18 = _createForOfIteratorHelper(el.attributes),\n          _step18;\n        try {\n          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n            var attribute = _step18.value;\n            var name = attribute.name;\n            var value = attribute.value;\n            record[name] = value;\n          }\n        } catch (err) {\n          _iterator18.e(err);\n        } finally {\n          _iterator18.f();\n        }\n        data.added = data.added.concat(record);\n      });\n      this.ajax_send(form, data, endpoint);\n    }\n\n    /**\n     * send application/json to the server\n     */\n  }, {\n    key: \"ajax_send\",\n    value: function ajax_send(form, data, endpoint) {\n      var view_url = document.body.dataset.viewUrl;\n      var ajax_url = \"\".concat(view_url, \"/ajax_form/\").concat(endpoint);\n      var payload = Object.assign({\n        form: this.get_form_data(form)\n      }, data);\n      console.debug(\"EditForm::ajax_send --> \", payload);\n      var init = {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify(payload),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRF-TOKEN\": document.querySelector(\"#protect-script\").dataset.token\n        }\n      };\n      return this.ajax_request(form, ajax_url, init);\n    }\n\n    /**\n     * send multipart/form-data to the server\n     *\n     * NOTE: This is used by the import form and hooked by the `ajax-submit=\"1\"` attribute\n     *       Therefore, we send here the data as multipart/form-data\n     */\n  }, {\n    key: \"ajax_submit\",\n    value: function ajax_submit(form, data, endpoint) {\n      var view_url = document.body.dataset.viewUrl;\n      var ajax_url = \"\".concat(view_url, \"/ajax_form/\").concat(endpoint);\n      var payload = new FormData(form);\n\n      // update form data\n      for (var _i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n        payload.set(key, value);\n      }\n      console.debug(\"EditForm::ajax_submit --> \", payload);\n      var init = {\n        method: \"POST\",\n        body: payload\n      };\n      return this.ajax_request(form, ajax_url, init);\n    }\n\n    /**\n     * execute ajax request\n     */\n  }, {\n    key: \"ajax_request\",\n    value: function ajax_request(form, url, init) {\n      var _this2 = this;\n      // send ajax request to server\n      this.loading(true);\n      var request = new Request(url, init);\n      return fetch(request).then(function (response) {\n        if (!response.ok) {\n          return Promise.reject(response);\n        }\n        return response.json();\n      }).then(function (data) {\n        console.debug(\"EditForm::ajax_request --> \", data);\n        _this2.update_form(form, data);\n        _this2.loading(false);\n      })[\"catch\"](function (error) {\n        console.error(error);\n        _this2.loading(false);\n      });\n    }\n\n    /**\n     * get the current view name from the URL\n     */\n  }, {\n    key: \"get_view_name\",\n    value: function get_view_name() {\n      var segments = location.pathname.split(\"/\");\n      return segments.pop();\n    }\n\n    /**\n     * Toggle element disable\n     */\n  }, {\n    key: \"toggle_disable\",\n    value: function toggle_disable(el, toggle) {\n      if (el) {\n        el.disabled = toggle;\n      }\n    }\n\n    /**\n     * Checks if the element is a textarea field\n     */\n  }, {\n    key: \"is_textarea\",\n    value: function is_textarea(el) {\n      return el.tagName == \"TEXTAREA\";\n    }\n\n    /**\n     * Checks if the elment is a select field\n     */\n  }, {\n    key: \"is_select\",\n    value: function is_select(el) {\n      return el.tagName == \"SELECT\";\n    }\n\n    /**\n     * Checks if the element is a multiple select field\n     */\n  }, {\n    key: \"is_multiple_select\",\n    value: function is_multiple_select(el) {\n      return this.is_select(el) && el.hasAttribute(\"multiple\");\n    }\n\n    /**\n     * Checks if the element is an input field\n     */\n  }, {\n    key: \"is_input\",\n    value: function is_input(el) {\n      return el.tagName === \"INPUT\";\n    }\n\n    /**\n     * Checks if the element is an input[type='text'] field\n     */\n  }, {\n    key: \"is_text\",\n    value: function is_text(el) {\n      return this.is_input(el) && el.type === \"text\";\n    }\n\n    /**\n     * Checks if the element is a button field\n     */\n  }, {\n    key: \"is_button\",\n    value: function is_button(el) {\n      return el.tagName === \"BUTTON\";\n    }\n\n    /**\n     * Checks if the element is an input[type='button'] field\n     */\n  }, {\n    key: \"is_input_button\",\n    value: function is_input_button(el) {\n      return this.is_input(el) && el.type === \"button\";\n    }\n\n    /**\n     * Checks if the element is an input[type='checkbox'] field\n     */\n  }, {\n    key: \"is_checkbox\",\n    value: function is_checkbox(el) {\n      return this.is_input(el) && el.type === \"checkbox\";\n    }\n\n    /**\n     * Checks if the element is an input[type='radio'] field\n     */\n  }, {\n    key: \"is_radio\",\n    value: function is_radio(el) {\n      return this.is_input(el) && el.type === \"radio\";\n    }\n\n    /**\n     * Checks if the element is a SENAITE reference field (textarea)\n     */\n  }, {\n    key: \"is_reference\",\n    value: function is_reference(el) {\n      if (!this.is_textarea(el)) {\n        return false;\n      }\n      return el.classList.contains(\"queryselectwidget-value\");\n    }\n\n    /**\n     * Checks if the element is a table row element\n     */\n  }, {\n    key: \"is_table_row\",\n    value: function is_table_row(el) {\n      return el.tagName === \"TR\";\n    }\n    /**\n     * event handler for `mutated` event\n     */\n  }, {\n    key: \"on_mutated\",\n    value: function on_mutated(event) {\n      console.debug(\"EditForm::on_mutated\");\n      var form = event.detail.form;\n      var mutations = event.detail.mutations;\n      // reduce multiple mutations on the same node to one\n      var seen = [];\n      var _iterator19 = _createForOfIteratorHelper(mutations),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var mutation = _step19.value;\n          if (seen.indexOf(mutation.target) > -1) {\n            continue;\n          }\n          seen = seen.concat(mutation.target);\n          this.handle_mutation(form, mutation);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n\n    /**\n     * event handler for `modified` event\n     */\n  }, {\n    key: \"on_modified\",\n    value: function on_modified(event) {\n      console.debug(\"EditForm::on_modified\");\n      var form = event.detail.form;\n      var field = event.detail.field;\n      this.notify(form, field, \"modified\");\n    }\n\n    /**\n     * event handler for `submit` event\n     */\n  }, {\n    key: \"on_submit\",\n    value: function on_submit(event) {\n      var _this3 = this;\n      console.debug(\"EditForm::on_submit\");\n      event.preventDefault();\n      var data = {};\n      var form = event.currentTarget.closest(\"form\");\n      // NOTE: submit input field not included in request form data!\n      var submitter = event.submitter;\n      if (submitter) {\n        data[submitter.name] = submitter.value;\n        // disable submit button during ajax call\n        this.toggle_disable(submitter, true);\n      }\n      this.ajax_submit(form, data, \"submit\").then(function (response) {\n        return (\n          // enable submit button after ajax call again\n          _this3.toggle_disable(submitter, false)\n        );\n      });\n    }\n\n    /**\n     * event handler for `blur` event\n     */\n  }, {\n    key: \"on_blur\",\n    value: function on_blur(event) {\n      console.debug(\"EditForm::on_blur\");\n      var el = event.currentTarget;\n      this.modified(el);\n    }\n\n    /**\n     * event handler for `click` event\n     */\n  }, {\n    key: \"on_click\",\n    value: function on_click(event) {\n      console.debug(\"EditForm::on_click\");\n      var el = event.currentTarget;\n      this.modified(el);\n    }\n\n    /**\n     * event handler for `change` event\n     */\n  }, {\n    key: \"on_change\",\n    value: function on_change(event) {\n      console.debug(\"EditForm::on_change\");\n      var el = event.currentTarget;\n      this.modified(el);\n    }\n\n    /**\n     * event handler for `select` event\n     */\n  }, {\n    key: \"on_reference_select\",\n    value: function on_reference_select(event) {\n      console.debug(\"EditForm::on_reference_select\");\n      var el = event.currentTarget;\n      // add the selected value to the list\n      var selected = el.value.split(\"\\n\");\n      selected = selected.concat(event.detail.value);\n      el.value = selected.join(\"\\n\");\n      this.modified(el);\n    }\n\n    /**\n     * event handler for `deselect` event\n     */\n  }, {\n    key: \"on_reference_deselect\",\n    value: function on_reference_deselect(event) {\n      console.debug(\"EditForm::on_reference_deselect\");\n      var el = event.currentTarget;\n      // remove the delelected value from the list\n      var selected = el.value.split(\"\\n\");\n      var index = selected.indexOf(event.detail.value);\n      if (index > -1) {\n        selected.splice(index, 1);\n      }\n      el.value = selected.join(\"\\n\");\n      this.modified(el);\n    }\n  }]);\n  return EditForm;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EditForm);\n\n//# sourceURL=webpack:///./components/editform.js?");

/***/ }),

/***/ "./components/i18n.js":
/*!****************************!*\
  !*** ./components/i18n.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* i18n integration. This is forked from jarn.jsi18n\n *\n * This is a singleton.\n * Configuration is done on the body tag data-i18ncatalogurl attribute\n *     <body data-i18ncatalogurl=\"/plonejsi18n\">\n *\n *  Or, it'll default to \"/plonejsi18n\"\n */\n\n\nvar I18N = function I18N() {\n  var self = this;\n  self.baseUrl = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').attr('data-i18ncatalogurl');\n  self.currentLanguage = jquery__WEBPACK_IMPORTED_MODULE_0___default()('html').attr('lang') || 'en';\n\n  // Fix for country specific languages\n  if (self.currentLanguage.split('-').length > 1) {\n    self.currentLanguage = self.currentLanguage.split('-')[0] + '_' + self.currentLanguage.split('-')[1].toUpperCase();\n  }\n  self.storage = null;\n  self.catalogs = {};\n  self.ttl = 24 * 3600 * 1000;\n\n  // Internet Explorer 8 does not know Date.now() which is used in e.g. loadCatalog, so we \"define\" it\n  if (!Date.now) {\n    Date.now = function () {\n      return new Date().valueOf();\n    };\n  }\n  try {\n    if ('localStorage' in window && window.localStorage !== null && 'JSON' in window && window.JSON !== null) {\n      self.storage = window.localStorage;\n    }\n  } catch (e) {}\n  self.configure = function (config) {\n    for (var key in config) {\n      self[key] = config[key];\n    }\n  };\n  self._setCatalog = function (domain, language, catalog) {\n    if (domain in self.catalogs) {\n      self.catalogs[domain][language] = catalog;\n    } else {\n      self.catalogs[domain] = {};\n      self.catalogs[domain][language] = catalog;\n    }\n  };\n  self._storeCatalog = function (domain, language, catalog) {\n    var key = domain + '-' + language;\n    if (self.storage !== null && catalog !== null) {\n      self.storage.setItem(key, JSON.stringify(catalog));\n      self.storage.setItem(key + '-updated', Date.now());\n    }\n  };\n  self.getUrl = function (domain, language) {\n    return self.baseUrl + '?domain=' + domain + '&language=' + language;\n  };\n  self.loadCatalog = function (domain, language) {\n    if (language === undefined) {\n      language = self.currentLanguage;\n    }\n    if (self.storage !== null) {\n      var key = domain + '-' + language;\n      if (key in self.storage) {\n        if (Date.now() - parseInt(self.storage.getItem(key + '-updated'), 10) < self.ttl) {\n          var catalog = JSON.parse(self.storage.getItem(key));\n          self._setCatalog(domain, language, catalog);\n          return;\n        }\n      }\n    }\n    if (!self.baseUrl) {\n      return;\n    }\n    jquery__WEBPACK_IMPORTED_MODULE_0___default().getJSON(self.getUrl(domain, language), function (catalog) {\n      if (catalog === null) {\n        return;\n      }\n      self._setCatalog(domain, language, catalog);\n      self._storeCatalog(domain, language, catalog);\n    });\n  };\n  self.MessageFactory = function (domain, language) {\n    language = language || self.currentLanguage;\n    return function translate(msgid, keywords) {\n      var msgstr;\n      if (domain in self.catalogs && language in self.catalogs[domain] && msgid in self.catalogs[domain][language]) {\n        msgstr = self.catalogs[domain][language][msgid];\n      } else {\n        msgstr = msgid;\n      }\n      if (keywords) {\n        var regexp, keyword;\n        for (keyword in keywords) {\n          if (keywords.hasOwnProperty(keyword)) {\n            regexp = new RegExp('\\\\$\\\\{' + keyword + '\\\\}', 'g');\n            msgstr = msgstr.replace(regexp, keywords[keyword]);\n          }\n        }\n      }\n      return msgstr;\n    };\n  };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (I18N);\n\n//# sourceURL=webpack:///./components/i18n.js?");

/***/ }),

/***/ "./components/sidebar.js":
/*!*******************************!*\
  !*** ./components/sidebar.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* SENAITE Sidebar\n *\n * The sidebar shows when the mouse enters and hides when the mouse leaves the\n * HTML element.\n *\n * It keeps open when the toggle button was clicked.\n */\nvar Sidebar = /*#__PURE__*/function () {\n  function Sidebar(config) {\n    _classCallCheck(this, Sidebar);\n    this.config = Object.assign({\n      \"el\": \"sidebar\",\n      \"toggle_el\": \"sidebar-header\",\n      \"cookie_key\": \"sidebar-toggle\",\n      \"timeout\": 1000\n    }, config);\n\n    // Timer ID\n    this.tid = null;\n\n    // Bind \"this\" context when called\n    this.maximize = this.maximize.bind(this);\n    this.minimize = this.minimize.bind(this);\n    this.on_click = this.on_click.bind(this);\n    this.on_mouseenter = this.on_mouseenter.bind(this);\n    this.on_mouseleave = this.on_mouseleave.bind(this);\n\n    // toggle button handler\n    this.toggle_el = document.getElementById(this.config.toggle_el);\n    if (this.toggle_el) {\n      this.toggle_el.addEventListener(\"click\", this.on_click);\n    }\n\n    // sidebar view/hide handler\n    this.el = document.getElementById(this.config.el);\n    if (this.el) {\n      this.el.addEventListener(\"mouseenter\", this.on_mouseenter);\n      this.el.addEventListener(\"mouseleave\", this.on_mouseleave);\n      if (this.is_toggled()) {\n        this.el.classList.remove(\"minimized\");\n        this.el.classList.add(\"toggled\");\n      }\n    }\n    return this;\n  }\n  _createClass(Sidebar, [{\n    key: \"is_toggled\",\n    value: function is_toggled() {\n      return window.site.read_cookie(this.config.cookie_key) == \"true\";\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var _toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      window.site.set_cookie(this.config.cookie_key, _toggle);\n      if (_toggle) {\n        this.el.classList.add(\"toggled\");\n        this.maximize();\n      } else {\n        this.el.classList.remove(\"toggled\");\n        this.minimize();\n      }\n    }\n  }, {\n    key: \"minimize\",\n    value: function minimize() {\n      this.el.classList.add(\"minimized\");\n    }\n  }, {\n    key: \"maximize\",\n    value: function maximize() {\n      this.el.classList.remove(\"minimized\");\n    }\n  }, {\n    key: \"on_click\",\n    value: function on_click(event) {\n      // console.debug(\"Sidebar::on_click:event=\", event)\n      clearTimeout(this.tid);\n      this.toggle(!this.is_toggled());\n    }\n  }, {\n    key: \"on_mouseenter\",\n    value: function on_mouseenter(event) {\n      // console.debug(\"Sidebar::on_mouseenter:event=\", event)\n      clearTimeout(this.tid);\n      if (this.is_toggled()) return;\n      this.tid = setTimeout(this.maximize, this.config.timeout);\n    }\n  }, {\n    key: \"on_mouseleave\",\n    value: function on_mouseleave(event) {\n      // console.debug(\"Sidebar::on_mouseleave:event=\", event)\n      clearTimeout(this.tid);\n      if (this.is_toggled()) return;\n      this.minimize();\n      // console.debug(\"Clearing sidebar timeout\", this.tid);\n    }\n  }]);\n  return Sidebar;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sidebar);\n\n//# sourceURL=webpack:///./components/sidebar.js?");

/***/ }),

/***/ "./components/site.js":
/*!****************************!*\
  !*** ./components/site.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n/* Please use this command to compile this file into the parent `js` directory:\n    coffee --no-header -w -o ../ -c site.coffee\n */\nvar Site,\n  bind = function bind(fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  };\nSite = function () {\n  /**\n   * Creates a new instance of Site\n   */\n  function Site() {\n    this.set_cookie = bind(this.set_cookie, this);\n    this.read_cookie = bind(this.read_cookie, this);\n    this.authenticator = bind(this.authenticator, this);\n    console.debug(\"Site::init\");\n  }\n\n  /**\n   * Returns the authenticator value\n   */\n\n  Site.prototype.authenticator = function () {\n    var auth, url_params;\n    auth = $(\"input[name='_authenticator']\").val();\n    if (!auth) {\n      url_params = new URLSearchParams(window.location.search);\n      auth = url_params.get(\"_authenticator\");\n    }\n    return auth;\n  };\n\n  /**\n   * Reads a cookie value\n   * @param {name} the name of the cookie\n   */\n\n  Site.prototype.read_cookie = function (name) {\n    var c, ca, i;\n    console.debug(\"Site::read_cookie:\" + name);\n    name = name + '=';\n    ca = document.cookie.split(';');\n    i = 0;\n    while (i < ca.length) {\n      c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n      i++;\n    }\n    return null;\n  };\n\n  /**\n   * Sets a cookie value\n   * @param {name} the name of the cookie\n   * @param {value} the value of the cookie\n   */\n\n  Site.prototype.set_cookie = function (name, value) {\n    var d, expires;\n    console.debug(\"Site::set_cookie:name=\" + name + \", value=\" + value);\n    d = new Date();\n    d.setTime(d.getTime() + 1 * 24 * 60 * 60 * 1000);\n    expires = 'expires=' + d.toUTCString();\n    document.cookie = name + '=' + value + ';' + expires + ';path=/';\n  };\n\n  /**\n   * Add a notification message\n   * @param {title} the title of the notification\n   * @param {message} the message of the notification\n   */\n\n  Site.prototype.add_notification = function (title, message, options) {\n    var el, parent, wrapper;\n    if (options == null) {\n      options = {};\n    }\n    options = Object.assign({\n      animation: true,\n      autohide: true,\n      delay: 5000\n    }, options);\n    el = document.createElement(\"div\");\n    el.innerHTML = \"<div class='toast bg-white' style='width:300px' role='alert' data-animation='\" + options.animation + \"' data-autohide='\" + options.autohide + \"' data-delay='\" + options.delay + \"'> <div class='toast-header'> <strong class='mr-auto'>\" + title + \"</strong> <button type='button' class='ml-2 mb-1 close' data-dismiss='toast' aria-label='Close'> <span aria-hidden='true'>&times;</span> </button> </div> <div class='toast-body'> \" + _t(message) + \" </div> </div>\";\n    el = el.firstElementChild;\n    parent = document.querySelector(\".toast-container\");\n    if (!parent) {\n      parent = document.createElement(\"div\");\n      parent.innerHTML = \"<div style='position: fixed; top: 0px; right: 0px; width=100%; z-index:100'> <div class='toast-container' style='position: absolute; top: 10px; right: 10px;'> </div> </div>\";\n      wrapper = document.querySelector(\".container-fluid\");\n      wrapper.appendChild(parent);\n      parent = parent.querySelector(\".toast-container\");\n    }\n    parent.appendChild(el);\n    return $(el).toast(\"show\");\n  };\n  return Site;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Site);\n\n//# sourceURL=webpack:///./components/site.js?");

/***/ }),

/***/ "./i18n-wrapper.js":
/*!*************************!*\
  !*** ./i18n-wrapper.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _p: () => (/* binding */ _p),\n/* harmony export */   _t: () => (/* binding */ _t)\n/* harmony export */ });\n/* harmony import */ var _components_i18n_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/i18n.js */ \"./components/i18n.js\");\n\n\n// SENAITE message factory\nvar t = null;\nvar _t = function _t(msgid, keywords) {\n  if (t === null) {\n    var i18n = new _components_i18n_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    console.debug(\"*** Loading `senaite.core` i18n MessageFactory ***\");\n    i18n.loadCatalog(\"senaite.core\");\n    t = i18n.MessageFactory(\"senaite.core\");\n  }\n  return t(msgid, keywords);\n};\n\n// Plone message factory\nvar p = null;\nvar _p = function _p(msgid, keywords) {\n  if (p === null) {\n    var i18n = new _components_i18n_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    console.debug(\"*** Loading `plone` i18n MessageFactory ***\");\n    i18n.loadCatalog(\"plone\");\n    p = i18n.MessageFactory(\"plone\");\n  }\n  return p(msgid, keywords);\n};\n\n//# sourceURL=webpack:///./i18n-wrapper.js?");

/***/ }),

/***/ "./senaite.core.js":
/*!*************************!*\
  !*** ./senaite.core.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_i18n_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/i18n.js */ \"./components/i18n.js\");\n/* harmony import */ var _i18n_wrapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./i18n-wrapper.js */ \"./i18n-wrapper.js\");\n/* harmony import */ var _components_editform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/editform.js */ \"./components/editform.js\");\n/* harmony import */ var _components_site_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/site.js */ \"./components/site.js\");\n/* harmony import */ var _components_sidebar_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/sidebar.js */ \"./components/sidebar.js\");\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.info(\"*** SENAITE CORE JS LOADED ***\");\n\n  // Initialize i18n message factories\n  window.i18n = new _components_i18n_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  window._t = _i18n_wrapper_js__WEBPACK_IMPORTED_MODULE_2__._t;\n  window._p = _i18n_wrapper_js__WEBPACK_IMPORTED_MODULE_2__._p;\n\n  // BBB: set global `portal_url` variable\n  window.portal_url = document.body.dataset.portalUrl;\n\n  // Initialize Site\n  window.site = new _components_site_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n\n  // Initialize Sidebar\n  window.sidebar = new _components_sidebar_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n    \"el\": \"sidebar\"\n  });\n\n  // Ajax Edit Form Handler\n  var form = new _components_editform_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n    form_selectors: [\"form[name='edit_form']\", \"form.senaite-ajax-form\"],\n    field_selectors: [\"input[type='text']\", \"input[type='number']\", \"input[type='checkbox']\", \"input[type='radio']\", \"input[type='file']\", \"select\", \"textarea\"]\n  });\n\n  // Init Tooltips\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-toggle='tooltip']\").tooltip();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"select.selectpicker\").selectpicker();\n  });\n\n  // Reload the whole view if the status of the view's context has changed\n  // due to the transition submission of some items from the listing\n  document.body.addEventListener(\"listing:after_transition_event\", function (event) {\n    // skip site reload for multi_results view\n    var multi_results_templates = [\"template-multi_results\", \"template-multi_results_classic\"];\n    var body_class_list = document.body.classList;\n    for (var _i = 0, _multi_results_templa = multi_results_templates; _i < _multi_results_templa.length; _i++) {\n      var class_name = _multi_results_templa[_i];\n      if (body_class_list.contains(class_name)) {\n        return;\n      }\n    }\n\n    // get the old workflow state of the view context\n    var old_workflow_state = document.body.dataset.reviewState;\n\n    // get the new workflow state of the view context\n    // https://github.com/senaite/senaite.app.listing/pull/92\n    var config = event.detail.config;\n    var new_workflow_state = config.view_context_state;\n\n    // reload the entire page if workflow state of the view context changed\n    if (old_workflow_state != new_workflow_state) {\n      location.reload();\n    }\n  });\n});\n\n//# sourceURL=webpack:///./senaite.core.js?");

/***/ }),

/***/ "./scss/senaite.core.scss":
/*!********************************!*\
  !*** ./scss/senaite.core.scss ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./scss/senaite.core.scss?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./senaite.core.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./scss/senaite.core.scss");
/******/ 	
/******/ })()
;