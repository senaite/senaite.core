{"version":3,"file":"seniate.core.widgets.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,KAA0B,gDAAgD;AAClF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2CAA2C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE;AACA;AACA;AACA;AACA;AACA,4CAA4C,yBAAyB;AACrE;AACA;AACA,gDAAgD,qBAAqB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,4CAA4C;AAChF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,sBAAsB;AACtB,yFAAyF;AACzF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2GAA2G;AAC3G;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gJAAgJ,sDAAsD,sDAAsD;AAC5P;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oCAAoC,2BAA2B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yBAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;ACx0CD;AACA;AACA;AACA,wCAAmD;;;;;;;UCHnD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;;;;;;ACAA,MAAM,8BAA4B;;;ACAlC,MAAM,iCAA4B;;;;;;;;;;;;;;;;;;;;ICA5BA;AAEJ,8BAAYC,KAAZ,EAAmB;AAAA;;AACjBC,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd;AACA,SAAKC,OAAL,GAAeH,KAAK,CAACG,OAArB;;AACA,SAAKC,YAAL,GAAoBJ,KAAK,CAACI,YAAN,IAAsB,UAASC,QAAT,EAAmB,CAAE,CAA/D;;AACA,WAAO,IAAP;AACD;;;;WAED,qBAAYC,QAAZ,EAAsB;AACpB,uBAAU,KAAKH,OAAf,cAA0BG,QAA1B,cAAsCC,QAAQ,CAACC,MAA/C;AACD;AAE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","sources":["webpack:///../node_modules/intl-tel-input/build/js/intlTelInput.js","webpack:///../node_modules/intl-tel-input/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///external var \"React\"","webpack:///external var \"ReactDOM\"","webpack:///./widgets/uidreferencewidget/api.js","webpack:///./widgets/uidreferencewidget/components/ReferenceField.js","webpack:///./widgets/uidreferencewidget/components/ReferenceResults.js","webpack:///./widgets/uidreferencewidget/components/References.js","webpack:///./widgets/uidreferencewidget/widget.js","webpack:///./widgets/addresswidget/api.js","webpack:///./widgets/addresswidget/components/LocationSelector.js","webpack:///./widgets/addresswidget/components/AddressField.js","webpack:///./widgets/addresswidget/components/Address.js","webpack:///./widgets/addresswidget/widget.js","webpack:///./senaite.core.widgets.js"],"sourcesContent":["/*\n * International Telephone Input v17.0.19\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function(factory) {\n    if (typeof module === \"object\" && module.exports) module.exports = factory(); else window.intlTelInput = factory();\n})(function(undefined) {\n    \"use strict\";\n    return function() {\n        // Array of country objects for the flag dropdown.\n        // Here is the criteria for the plugin to support a given country/territory\n        // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n        // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n        // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n        // Each country array has the following information:\n        // [\n        //    Country name,\n        //    iso2 code,\n        //    International dial code,\n        //    Order (if >1 country with same dial code),\n        //    Area codes\n        // ]\n        var allCountries = [ [ \"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\" ], [ \"Albania (Shqipëri)\", \"al\", \"355\" ], [ \"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\" ], [ \"American Samoa\", \"as\", \"1\", 5, [ \"684\" ] ], [ \"Andorra\", \"ad\", \"376\" ], [ \"Angola\", \"ao\", \"244\" ], [ \"Anguilla\", \"ai\", \"1\", 6, [ \"264\" ] ], [ \"Antigua and Barbuda\", \"ag\", \"1\", 7, [ \"268\" ] ], [ \"Argentina\", \"ar\", \"54\" ], [ \"Armenia (Հայաստան)\", \"am\", \"374\" ], [ \"Aruba\", \"aw\", \"297\" ], [ \"Ascension Island\", \"ac\", \"247\" ], [ \"Australia\", \"au\", \"61\", 0 ], [ \"Austria (Österreich)\", \"at\", \"43\" ], [ \"Azerbaijan (Azərbaycan)\", \"az\", \"994\" ], [ \"Bahamas\", \"bs\", \"1\", 8, [ \"242\" ] ], [ \"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\" ], [ \"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\" ], [ \"Barbados\", \"bb\", \"1\", 9, [ \"246\" ] ], [ \"Belarus (Беларусь)\", \"by\", \"375\" ], [ \"Belgium (België)\", \"be\", \"32\" ], [ \"Belize\", \"bz\", \"501\" ], [ \"Benin (Bénin)\", \"bj\", \"229\" ], [ \"Bermuda\", \"bm\", \"1\", 10, [ \"441\" ] ], [ \"Bhutan (འབྲུག)\", \"bt\", \"975\" ], [ \"Bolivia\", \"bo\", \"591\" ], [ \"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\" ], [ \"Botswana\", \"bw\", \"267\" ], [ \"Brazil (Brasil)\", \"br\", \"55\" ], [ \"British Indian Ocean Territory\", \"io\", \"246\" ], [ \"British Virgin Islands\", \"vg\", \"1\", 11, [ \"284\" ] ], [ \"Brunei\", \"bn\", \"673\" ], [ \"Bulgaria (България)\", \"bg\", \"359\" ], [ \"Burkina Faso\", \"bf\", \"226\" ], [ \"Burundi (Uburundi)\", \"bi\", \"257\" ], [ \"Cambodia (កម្ពុជា)\", \"kh\", \"855\" ], [ \"Cameroon (Cameroun)\", \"cm\", \"237\" ], [ \"Canada\", \"ca\", \"1\", 1, [ \"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\" ] ], [ \"Cape Verde (Kabu Verdi)\", \"cv\", \"238\" ], [ \"Caribbean Netherlands\", \"bq\", \"599\", 1, [ \"3\", \"4\", \"7\" ] ], [ \"Cayman Islands\", \"ky\", \"1\", 12, [ \"345\" ] ], [ \"Central African Republic (République centrafricaine)\", \"cf\", \"236\" ], [ \"Chad (Tchad)\", \"td\", \"235\" ], [ \"Chile\", \"cl\", \"56\" ], [ \"China (中国)\", \"cn\", \"86\" ], [ \"Christmas Island\", \"cx\", \"61\", 2, [ \"89164\" ] ], [ \"Cocos (Keeling) Islands\", \"cc\", \"61\", 1, [ \"89162\" ] ], [ \"Colombia\", \"co\", \"57\" ], [ \"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\" ], [ \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\" ], [ \"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\" ], [ \"Cook Islands\", \"ck\", \"682\" ], [ \"Costa Rica\", \"cr\", \"506\" ], [ \"Côte d’Ivoire\", \"ci\", \"225\" ], [ \"Croatia (Hrvatska)\", \"hr\", \"385\" ], [ \"Cuba\", \"cu\", \"53\" ], [ \"Curaçao\", \"cw\", \"599\", 0 ], [ \"Cyprus (Κύπρος)\", \"cy\", \"357\" ], [ \"Czech Republic (Česká republika)\", \"cz\", \"420\" ], [ \"Denmark (Danmark)\", \"dk\", \"45\" ], [ \"Djibouti\", \"dj\", \"253\" ], [ \"Dominica\", \"dm\", \"1\", 13, [ \"767\" ] ], [ \"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [ \"809\", \"829\", \"849\" ] ], [ \"Ecuador\", \"ec\", \"593\" ], [ \"Egypt (‫مصر‬‎)\", \"eg\", \"20\" ], [ \"El Salvador\", \"sv\", \"503\" ], [ \"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\" ], [ \"Eritrea\", \"er\", \"291\" ], [ \"Estonia (Eesti)\", \"ee\", \"372\" ], [ \"Eswatini\", \"sz\", \"268\" ], [ \"Ethiopia\", \"et\", \"251\" ], [ \"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\" ], [ \"Faroe Islands (Føroyar)\", \"fo\", \"298\" ], [ \"Fiji\", \"fj\", \"679\" ], [ \"Finland (Suomi)\", \"fi\", \"358\", 0 ], [ \"France\", \"fr\", \"33\" ], [ \"French Guiana (Guyane française)\", \"gf\", \"594\" ], [ \"French Polynesia (Polynésie française)\", \"pf\", \"689\" ], [ \"Gabon\", \"ga\", \"241\" ], [ \"Gambia\", \"gm\", \"220\" ], [ \"Georgia (საქართველო)\", \"ge\", \"995\" ], [ \"Germany (Deutschland)\", \"de\", \"49\" ], [ \"Ghana (Gaana)\", \"gh\", \"233\" ], [ \"Gibraltar\", \"gi\", \"350\" ], [ \"Greece (Ελλάδα)\", \"gr\", \"30\" ], [ \"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\" ], [ \"Grenada\", \"gd\", \"1\", 14, [ \"473\" ] ], [ \"Guadeloupe\", \"gp\", \"590\", 0 ], [ \"Guam\", \"gu\", \"1\", 15, [ \"671\" ] ], [ \"Guatemala\", \"gt\", \"502\" ], [ \"Guernsey\", \"gg\", \"44\", 1, [ \"1481\", \"7781\", \"7839\", \"7911\" ] ], [ \"Guinea (Guinée)\", \"gn\", \"224\" ], [ \"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\" ], [ \"Guyana\", \"gy\", \"592\" ], [ \"Haiti\", \"ht\", \"509\" ], [ \"Honduras\", \"hn\", \"504\" ], [ \"Hong Kong (香港)\", \"hk\", \"852\" ], [ \"Hungary (Magyarország)\", \"hu\", \"36\" ], [ \"Iceland (Ísland)\", \"is\", \"354\" ], [ \"India (भारत)\", \"in\", \"91\" ], [ \"Indonesia\", \"id\", \"62\" ], [ \"Iran (‫ایران‬‎)\", \"ir\", \"98\" ], [ \"Iraq (‫العراق‬‎)\", \"iq\", \"964\" ], [ \"Ireland\", \"ie\", \"353\" ], [ \"Isle of Man\", \"im\", \"44\", 2, [ \"1624\", \"74576\", \"7524\", \"7924\", \"7624\" ] ], [ \"Israel (‫ישראל‬‎)\", \"il\", \"972\" ], [ \"Italy (Italia)\", \"it\", \"39\", 0 ], [ \"Jamaica\", \"jm\", \"1\", 4, [ \"876\", \"658\" ] ], [ \"Japan (日本)\", \"jp\", \"81\" ], [ \"Jersey\", \"je\", \"44\", 3, [ \"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\" ] ], [ \"Jordan (‫الأردن‬‎)\", \"jo\", \"962\" ], [ \"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [ \"33\", \"7\" ] ], [ \"Kenya\", \"ke\", \"254\" ], [ \"Kiribati\", \"ki\", \"686\" ], [ \"Kosovo\", \"xk\", \"383\" ], [ \"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\" ], [ \"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\" ], [ \"Laos (ລາວ)\", \"la\", \"856\" ], [ \"Latvia (Latvija)\", \"lv\", \"371\" ], [ \"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\" ], [ \"Lesotho\", \"ls\", \"266\" ], [ \"Liberia\", \"lr\", \"231\" ], [ \"Libya (‫ليبيا‬‎)\", \"ly\", \"218\" ], [ \"Liechtenstein\", \"li\", \"423\" ], [ \"Lithuania (Lietuva)\", \"lt\", \"370\" ], [ \"Luxembourg\", \"lu\", \"352\" ], [ \"Macau (澳門)\", \"mo\", \"853\" ], [ \"North Macedonia (Македонија)\", \"mk\", \"389\" ], [ \"Madagascar (Madagasikara)\", \"mg\", \"261\" ], [ \"Malawi\", \"mw\", \"265\" ], [ \"Malaysia\", \"my\", \"60\" ], [ \"Maldives\", \"mv\", \"960\" ], [ \"Mali\", \"ml\", \"223\" ], [ \"Malta\", \"mt\", \"356\" ], [ \"Marshall Islands\", \"mh\", \"692\" ], [ \"Martinique\", \"mq\", \"596\" ], [ \"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\" ], [ \"Mauritius (Moris)\", \"mu\", \"230\" ], [ \"Mayotte\", \"yt\", \"262\", 1, [ \"269\", \"639\" ] ], [ \"Mexico (México)\", \"mx\", \"52\" ], [ \"Micronesia\", \"fm\", \"691\" ], [ \"Moldova (Republica Moldova)\", \"md\", \"373\" ], [ \"Monaco\", \"mc\", \"377\" ], [ \"Mongolia (Монгол)\", \"mn\", \"976\" ], [ \"Montenegro (Crna Gora)\", \"me\", \"382\" ], [ \"Montserrat\", \"ms\", \"1\", 16, [ \"664\" ] ], [ \"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0 ], [ \"Mozambique (Moçambique)\", \"mz\", \"258\" ], [ \"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\" ], [ \"Namibia (Namibië)\", \"na\", \"264\" ], [ \"Nauru\", \"nr\", \"674\" ], [ \"Nepal (नेपाल)\", \"np\", \"977\" ], [ \"Netherlands (Nederland)\", \"nl\", \"31\" ], [ \"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\" ], [ \"New Zealand\", \"nz\", \"64\" ], [ \"Nicaragua\", \"ni\", \"505\" ], [ \"Niger (Nijar)\", \"ne\", \"227\" ], [ \"Nigeria\", \"ng\", \"234\" ], [ \"Niue\", \"nu\", \"683\" ], [ \"Norfolk Island\", \"nf\", \"672\" ], [ \"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\" ], [ \"Northern Mariana Islands\", \"mp\", \"1\", 17, [ \"670\" ] ], [ \"Norway (Norge)\", \"no\", \"47\", 0 ], [ \"Oman (‫عُمان‬‎)\", \"om\", \"968\" ], [ \"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\" ], [ \"Palau\", \"pw\", \"680\" ], [ \"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\" ], [ \"Panama (Panamá)\", \"pa\", \"507\" ], [ \"Papua New Guinea\", \"pg\", \"675\" ], [ \"Paraguay\", \"py\", \"595\" ], [ \"Peru (Perú)\", \"pe\", \"51\" ], [ \"Philippines\", \"ph\", \"63\" ], [ \"Poland (Polska)\", \"pl\", \"48\" ], [ \"Portugal\", \"pt\", \"351\" ], [ \"Puerto Rico\", \"pr\", \"1\", 3, [ \"787\", \"939\" ] ], [ \"Qatar (‫قطر‬‎)\", \"qa\", \"974\" ], [ \"Réunion (La Réunion)\", \"re\", \"262\", 0 ], [ \"Romania (România)\", \"ro\", \"40\" ], [ \"Russia (Россия)\", \"ru\", \"7\", 0 ], [ \"Rwanda\", \"rw\", \"250\" ], [ \"Saint Barthélemy\", \"bl\", \"590\", 1 ], [ \"Saint Helena\", \"sh\", \"290\" ], [ \"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [ \"869\" ] ], [ \"Saint Lucia\", \"lc\", \"1\", 19, [ \"758\" ] ], [ \"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2 ], [ \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\" ], [ \"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [ \"784\" ] ], [ \"Samoa\", \"ws\", \"685\" ], [ \"San Marino\", \"sm\", \"378\" ], [ \"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\" ], [ \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\" ], [ \"Senegal (Sénégal)\", \"sn\", \"221\" ], [ \"Serbia (Србија)\", \"rs\", \"381\" ], [ \"Seychelles\", \"sc\", \"248\" ], [ \"Sierra Leone\", \"sl\", \"232\" ], [ \"Singapore\", \"sg\", \"65\" ], [ \"Sint Maarten\", \"sx\", \"1\", 21, [ \"721\" ] ], [ \"Slovakia (Slovensko)\", \"sk\", \"421\" ], [ \"Slovenia (Slovenija)\", \"si\", \"386\" ], [ \"Solomon Islands\", \"sb\", \"677\" ], [ \"Somalia (Soomaaliya)\", \"so\", \"252\" ], [ \"South Africa\", \"za\", \"27\" ], [ \"South Korea (대한민국)\", \"kr\", \"82\" ], [ \"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\" ], [ \"Spain (España)\", \"es\", \"34\" ], [ \"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\" ], [ \"Sudan (‫السودان‬‎)\", \"sd\", \"249\" ], [ \"Suriname\", \"sr\", \"597\" ], [ \"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [ \"79\" ] ], [ \"Sweden (Sverige)\", \"se\", \"46\" ], [ \"Switzerland (Schweiz)\", \"ch\", \"41\" ], [ \"Syria (‫سوريا‬‎)\", \"sy\", \"963\" ], [ \"Taiwan (台灣)\", \"tw\", \"886\" ], [ \"Tajikistan\", \"tj\", \"992\" ], [ \"Tanzania\", \"tz\", \"255\" ], [ \"Thailand (ไทย)\", \"th\", \"66\" ], [ \"Timor-Leste\", \"tl\", \"670\" ], [ \"Togo\", \"tg\", \"228\" ], [ \"Tokelau\", \"tk\", \"690\" ], [ \"Tonga\", \"to\", \"676\" ], [ \"Trinidad and Tobago\", \"tt\", \"1\", 22, [ \"868\" ] ], [ \"Tunisia (‫تونس‬‎)\", \"tn\", \"216\" ], [ \"Turkey (Türkiye)\", \"tr\", \"90\" ], [ \"Turkmenistan\", \"tm\", \"993\" ], [ \"Turks and Caicos Islands\", \"tc\", \"1\", 23, [ \"649\" ] ], [ \"Tuvalu\", \"tv\", \"688\" ], [ \"U.S. Virgin Islands\", \"vi\", \"1\", 24, [ \"340\" ] ], [ \"Uganda\", \"ug\", \"256\" ], [ \"Ukraine (Україна)\", \"ua\", \"380\" ], [ \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\" ], [ \"United Kingdom\", \"gb\", \"44\", 0 ], [ \"United States\", \"us\", \"1\", 0 ], [ \"Uruguay\", \"uy\", \"598\" ], [ \"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\" ], [ \"Vanuatu\", \"vu\", \"678\" ], [ \"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [ \"06698\" ] ], [ \"Venezuela\", \"ve\", \"58\" ], [ \"Vietnam (Việt Nam)\", \"vn\", \"84\" ], [ \"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\" ], [ \"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [ \"5288\", \"5289\" ] ], [ \"Yemen (‫اليمن‬‎)\", \"ye\", \"967\" ], [ \"Zambia\", \"zm\", \"260\" ], [ \"Zimbabwe\", \"zw\", \"263\" ], [ \"Åland Islands\", \"ax\", \"358\", 1, [ \"18\" ] ] ];\n        // loop over all of the countries above, restructuring the data to be objects with named keys\n        for (var i = 0; i < allCountries.length; i++) {\n            var c = allCountries[i];\n            allCountries[i] = {\n                name: c[0],\n                iso2: c[1],\n                dialCode: c[2],\n                priority: c[3] || 0,\n                areaCodes: c[4] || null\n            };\n        }\n        \"use strict\";\n        function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new TypeError(\"Cannot call a class as a function\");\n            }\n        }\n        function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n        }\n        var intlTelInputGlobals = {\n            getInstance: function getInstance(input) {\n                var id = input.getAttribute(\"data-intl-tel-input-id\");\n                return window.intlTelInputGlobals.instances[id];\n            },\n            instances: {},\n            // using a global like this allows us to mock it in the tests\n            documentReady: function documentReady() {\n                return document.readyState === \"complete\";\n            }\n        };\n        if (typeof window === \"object\") window.intlTelInputGlobals = intlTelInputGlobals;\n        // these vars persist through all instances of the plugin\n        var id = 0;\n        var defaults = {\n            // whether or not to allow the dropdown\n            allowDropdown: true,\n            // if there is just a dial code in the input: remove it on blur\n            autoHideDialCode: true,\n            // add a placeholder in the input with an example number for the selected country\n            autoPlaceholder: \"polite\",\n            // modify the parentClass\n            customContainer: \"\",\n            // modify the auto placeholder\n            customPlaceholder: null,\n            // append menu to specified element\n            dropdownContainer: null,\n            // don't display these countries\n            excludeCountries: [],\n            // format the input value during initialisation and on setNumber\n            formatOnDisplay: true,\n            // geoIp lookup function\n            geoIpLookup: null,\n            // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n            hiddenInput: \"\",\n            // initial country\n            initialCountry: \"\",\n            // localized country names e.g. { 'de': 'Deutschland' }\n            localizedCountries: null,\n            // don't insert international dial codes\n            nationalMode: true,\n            // display only these countries\n            onlyCountries: [],\n            // number type to use for placeholders\n            placeholderNumberType: \"MOBILE\",\n            // the countries at the top of the list. defaults to united states and united kingdom\n            preferredCountries: [ \"us\", \"gb\" ],\n            // display the country dial code next to the selected flag so it's not part of the typed number\n            separateDialCode: false,\n            // specify the path to the libphonenumber script to enable validation/formatting\n            utilsScript: \"\"\n        };\n        // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n        var regionlessNanpNumbers = [ \"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\" ];\n        // utility function to iterate over an object. can't use Object.entries or native forEach because\n        // of IE11\n        var forEachProp = function forEachProp(obj, callback) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                callback(keys[i], obj[keys[i]]);\n            }\n        };\n        // run a method on each instance of the plugin\n        var forEachInstance = function forEachInstance(method) {\n            forEachProp(window.intlTelInputGlobals.instances, function(key) {\n                window.intlTelInputGlobals.instances[key][method]();\n            });\n        };\n        // this is our plugin class that we will create an instance of\n        // eslint-disable-next-line no-unused-vars\n        var Iti = /*#__PURE__*/\n        function() {\n            function Iti(input, options) {\n                var _this = this;\n                _classCallCheck(this, Iti);\n                this.id = id++;\n                this.telInput = input;\n                this.activeItem = null;\n                this.highlightedItem = null;\n                // process specified options / defaults\n                // alternative to Object.assign, which isn't supported by IE11\n                var customOptions = options || {};\n                this.options = {};\n                forEachProp(defaults, function(key, value) {\n                    _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n                });\n                this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n            }\n            _createClass(Iti, [ {\n                key: \"_init\",\n                value: function _init() {\n                    var _this2 = this;\n                    // if in nationalMode, disable options relating to dial codes\n                    if (this.options.nationalMode) this.options.autoHideDialCode = false;\n                    // if separateDialCode then doesn't make sense to A) insert dial code into input\n                    // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n                    // dial code next to them)\n                    if (this.options.separateDialCode) {\n                        this.options.autoHideDialCode = this.options.nationalMode = false;\n                    }\n                    // we cannot just test screen size as some smartphones/website meta tags will report desktop\n                    // resolutions\n                    // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n                    // rest of these declarations\n                    // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n                    this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    if (this.isMobile) {\n                        // trigger the mobile dropdown css\n                        document.body.classList.add(\"iti-mobile\");\n                        // on mobile, we want a full screen dropdown, so we must append it to the body\n                        if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n                    }\n                    // these promises get resolved when their individual requests complete\n                    // this way the dev can do something like iti.promise.then(...) to know when all requests are\n                    // complete\n                    if (typeof Promise !== \"undefined\") {\n                        var autoCountryPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveAutoCountryPromise = resolve;\n                            _this2.rejectAutoCountryPromise = reject;\n                        });\n                        var utilsScriptPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveUtilsScriptPromise = resolve;\n                            _this2.rejectUtilsScriptPromise = reject;\n                        });\n                        this.promise = Promise.all([ autoCountryPromise, utilsScriptPromise ]);\n                    } else {\n                        // prevent errors when Promise doesn't exist\n                        this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {};\n                        this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {};\n                    }\n                    // in various situations there could be no country selected initially, but we need to be able\n                    // to assume this variable exists\n                    this.selectedCountryData = {};\n                    // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n                    this._processCountryData();\n                    // generate the markup\n                    this._generateMarkup();\n                    // set the initial state of the input value and the selected flag\n                    this._setInitialState();\n                    // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n                    this._initListeners();\n                    // utils script, and auto country\n                    this._initRequests();\n                }\n            }, {\n                key: \"_processCountryData\",\n                value: function _processCountryData() {\n                    // process onlyCountries or excludeCountries array if present\n                    this._processAllCountries();\n                    // process the countryCodes map\n                    this._processCountryCodes();\n                    // process the preferredCountries\n                    this._processPreferredCountries();\n                    // translate countries according to localizedCountries option\n                    if (this.options.localizedCountries) this._translateCountriesByLocale();\n                    // sort countries by name\n                    if (this.options.onlyCountries.length || this.options.localizedCountries) {\n                        this.countries.sort(this._countryNameSort);\n                    }\n                }\n            }, {\n                key: \"_addCountryCode\",\n                value: function _addCountryCode(iso2, countryCode, priority) {\n                    if (countryCode.length > this.countryCodeMaxLen) {\n                        this.countryCodeMaxLen = countryCode.length;\n                    }\n                    if (!this.countryCodes.hasOwnProperty(countryCode)) {\n                        this.countryCodes[countryCode] = [];\n                    }\n                    // bail if we already have this country for this countryCode\n                    for (var i = 0; i < this.countryCodes[countryCode].length; i++) {\n                        if (this.countryCodes[countryCode][i] === iso2) return;\n                    }\n                    // check for undefined as 0 is falsy\n                    var index = priority !== undefined ? priority : this.countryCodes[countryCode].length;\n                    this.countryCodes[countryCode][index] = iso2;\n                }\n            }, {\n                key: \"_processAllCountries\",\n                value: function _processAllCountries() {\n                    if (this.options.onlyCountries.length) {\n                        var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n                        });\n                    } else if (this.options.excludeCountries.length) {\n                        var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                        });\n                    } else {\n                        this.countries = allCountries;\n                    }\n                }\n            }, {\n                key: \"_translateCountriesByLocale\",\n                value: function _translateCountriesByLocale() {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var iso = this.countries[i].iso2.toLowerCase();\n                        if (this.options.localizedCountries.hasOwnProperty(iso)) {\n                            this.countries[i].name = this.options.localizedCountries[iso];\n                        }\n                    }\n                }\n            }, {\n                key: \"_countryNameSort\",\n                value: function _countryNameSort(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n            }, {\n                key: \"_processCountryCodes\",\n                value: function _processCountryCodes() {\n                    this.countryCodeMaxLen = 0;\n                    // here we store just dial codes\n                    this.dialCodes = {};\n                    // here we store \"country codes\" (both dial codes and their area codes)\n                    this.countryCodes = {};\n                    // first: add dial codes\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var c = this.countries[i];\n                        if (!this.dialCodes[c.dialCode]) this.dialCodes[c.dialCode] = true;\n                        this._addCountryCode(c.iso2, c.dialCode, c.priority);\n                    }\n                    // next: add area codes\n                    // this is a second loop over countries, to make sure we have all of the \"root\" countries\n                    // already in the map, so that we can access them, as each time we add an area code substring\n                    // to the map, we also need to include the \"root\" country's code, as that also matches\n                    for (var _i = 0; _i < this.countries.length; _i++) {\n                        var _c = this.countries[_i];\n                        // area codes\n                        if (_c.areaCodes) {\n                            var rootCountryCode = this.countryCodes[_c.dialCode][0];\n                            // for each area code\n                            for (var j = 0; j < _c.areaCodes.length; j++) {\n                                var areaCode = _c.areaCodes[j];\n                                // for each digit in the area code to add all partial matches as well\n                                for (var k = 1; k < areaCode.length; k++) {\n                                    var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                                    // start with the root country, as that also matches this dial code\n                                    this._addCountryCode(rootCountryCode, partialDialCode);\n                                    this._addCountryCode(_c.iso2, partialDialCode);\n                                }\n                                // add the full area code\n                                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: \"_processPreferredCountries\",\n                value: function _processPreferredCountries() {\n                    this.preferredCountries = [];\n                    for (var i = 0; i < this.options.preferredCountries.length; i++) {\n                        var countryCode = this.options.preferredCountries[i].toLowerCase();\n                        var countryData = this._getCountryData(countryCode, false, true);\n                        if (countryData) this.preferredCountries.push(countryData);\n                    }\n                }\n            }, {\n                key: \"_createEl\",\n                value: function _createEl(name, attrs, container) {\n                    var el = document.createElement(name);\n                    if (attrs) forEachProp(attrs, function(key, value) {\n                        return el.setAttribute(key, value);\n                    });\n                    if (container) container.appendChild(el);\n                    return el;\n                }\n            }, {\n                key: \"_generateMarkup\",\n                value: function _generateMarkup() {\n                    // if autocomplete does not exist on the element and its form, then\n                    // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n                    // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n                    // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n                    if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n                        this.telInput.setAttribute(\"autocomplete\", \"off\");\n                    }\n                    // containers (mostly for positioning)\n                    var parentClass = \"iti\";\n                    if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n                    if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n                    if (this.options.customContainer) {\n                        parentClass += \" \";\n                        parentClass += this.options.customContainer;\n                    }\n                    var wrapper = this._createEl(\"div\", {\n                        \"class\": parentClass\n                    });\n                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n                    this.flagsContainer = this._createEl(\"div\", {\n                        \"class\": \"iti__flag-container\"\n                    }, wrapper);\n                    wrapper.appendChild(this.telInput);\n                    // selected flag (displayed to left of input)\n                    this.selectedFlag = this._createEl(\"div\", {\n                        \"class\": \"iti__selected-flag\",\n                        role: \"combobox\",\n                        \"aria-controls\": \"iti-\".concat(this.id, \"__country-listbox\"),\n                        \"aria-owns\": \"iti-\".concat(this.id, \"__country-listbox\"),\n                        \"aria-expanded\": \"false\"\n                    }, this.flagsContainer);\n                    this.selectedFlagInner = this._createEl(\"div\", {\n                        \"class\": \"iti__flag\"\n                    }, this.selectedFlag);\n                    if (this.options.separateDialCode) {\n                        this.selectedDialCode = this._createEl(\"div\", {\n                            \"class\": \"iti__selected-dial-code\"\n                        }, this.selectedFlag);\n                    }\n                    if (this.options.allowDropdown) {\n                        // make element focusable and tab navigable\n                        this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n                        this.dropdownArrow = this._createEl(\"div\", {\n                            \"class\": \"iti__arrow\"\n                        }, this.selectedFlag);\n                        // country dropdown: preferred countries, then divider, then all countries\n                        this.countryList = this._createEl(\"ul\", {\n                            \"class\": \"iti__country-list iti__hide\",\n                            id: \"iti-\".concat(this.id, \"__country-listbox\"),\n                            role: \"listbox\",\n                            \"aria-label\": \"List of countries\"\n                        });\n                        if (this.preferredCountries.length) {\n                            this._appendListItems(this.preferredCountries, \"iti__preferred\", true);\n                            this._createEl(\"li\", {\n                                \"class\": \"iti__divider\",\n                                role: \"separator\",\n                                \"aria-disabled\": \"true\"\n                            }, this.countryList);\n                        }\n                        this._appendListItems(this.countries, \"iti__standard\");\n                        // create dropdownContainer markup\n                        if (this.options.dropdownContainer) {\n                            this.dropdown = this._createEl(\"div\", {\n                                \"class\": \"iti iti--container\"\n                            });\n                            this.dropdown.appendChild(this.countryList);\n                        } else {\n                            this.flagsContainer.appendChild(this.countryList);\n                        }\n                    }\n                    if (this.options.hiddenInput) {\n                        var hiddenInputName = this.options.hiddenInput;\n                        var name = this.telInput.getAttribute(\"name\");\n                        if (name) {\n                            var i = name.lastIndexOf(\"[\");\n                            // if input name contains square brackets, then give the hidden input the same name,\n                            // replacing the contents of the last set of brackets with the given hiddenInput name\n                            if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n                        }\n                        this.hiddenInput = this._createEl(\"input\", {\n                            type: \"hidden\",\n                            name: hiddenInputName\n                        });\n                        wrapper.appendChild(this.hiddenInput);\n                    }\n                }\n            }, {\n                key: \"_appendListItems\",\n                value: function _appendListItems(countries, className, preferred) {\n                    // we create so many DOM elements, it is faster to build a temp string\n                    // and then add everything to the DOM in one go at the end\n                    var tmp = \"\";\n                    // for each country\n                    for (var i = 0; i < countries.length; i++) {\n                        var c = countries[i];\n                        var idSuffix = preferred ? \"-preferred\" : \"\";\n                        // open the list item\n                        tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-\").concat(this.id, \"__item-\").concat(c.iso2).concat(idSuffix, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"' aria-selected='false'>\");\n                        // add the flag\n                        tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n                        // and the country name and dial code\n                        tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n                        tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n                        // close the list item\n                        tmp += \"</li>\";\n                    }\n                    this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n                }\n            }, {\n                key: \"_setInitialState\",\n                value: function _setInitialState() {\n                    // fix firefox bug: when first load page (with input with value set to number with intl dial\n                    // code) and initialising plugin removes the dial code from the input, then refresh page,\n                    // and we try to init plugin again but this time on number without dial code so get grey flag\n                    var attributeValue = this.telInput.getAttribute(\"value\");\n                    var inputValue = this.telInput.value;\n                    var useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n                    var val = useAttribute ? attributeValue : inputValue;\n                    var dialCode = this._getDialCode(val);\n                    var isRegionlessNanp = this._isRegionlessNanp(val);\n                    var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;\n                    // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n                    // flag, else fall back to the default country\n                    if (dialCode && !isRegionlessNanp) {\n                        this._updateFlagFromNumber(val);\n                    } else if (initialCountry !== \"auto\") {\n                        // see if we should select a flag\n                        if (initialCountry) {\n                            this._setFlag(initialCountry.toLowerCase());\n                        } else {\n                            if (dialCode && isRegionlessNanp) {\n                                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                                this._setFlag(\"us\");\n                            } else {\n                                // no dial code and no initialCountry, so default to first in list\n                                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                                if (!val) {\n                                    this._setFlag(this.defaultCountry);\n                                }\n                            }\n                        }\n                        // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n                        if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n                            this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n                        }\n                    }\n                    // NOTE: if initialCountry is set to auto, that will be handled separately\n                    // format - note this wont be run after _updateDialCode as that's only called if no val\n                    if (val) this._updateValFromNumber(val);\n                }\n            }, {\n                key: \"_initListeners\",\n                value: function _initListeners() {\n                    this._initKeyListeners();\n                    if (this.options.autoHideDialCode) this._initBlurListeners();\n                    if (this.options.allowDropdown) this._initDropdownListeners();\n                    if (this.hiddenInput) this._initHiddenInputListener();\n                }\n            }, {\n                key: \"_initHiddenInputListener\",\n                value: function _initHiddenInputListener() {\n                    var _this3 = this;\n                    this._handleHiddenInputSubmit = function() {\n                        _this3.hiddenInput.value = _this3.getNumber();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n                }\n            }, {\n                key: \"_getClosestLabel\",\n                value: function _getClosestLabel() {\n                    var el = this.telInput;\n                    while (el && el.tagName !== \"LABEL\") {\n                        el = el.parentNode;\n                    }\n                    return el;\n                }\n            }, {\n                key: \"_initDropdownListeners\",\n                value: function _initDropdownListeners() {\n                    var _this4 = this;\n                    // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n                    // open the dropdown would then automatically trigger a 2nd click on the input which would\n                    // close it again\n                    this._handleLabelClick = function(e) {\n                        // if the dropdown is closed, then focus the input, else ignore the click\n                        if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus(); else e.preventDefault();\n                    };\n                    var label = this._getClosestLabel();\n                    if (label) label.addEventListener(\"click\", this._handleLabelClick);\n                    // toggle country dropdown on click\n                    this._handleClickSelectedFlag = function() {\n                        // only intercept this event if we're opening the dropdown\n                        // else let it bubble up to the top (\"click-off-to-close\" listener)\n                        // we cannot just stopPropagation as it may be needed to close another instance\n                        if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n                            _this4._showDropdown();\n                        }\n                    };\n                    this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n                    // open dropdown list if currently focused\n                    this._handleFlagsContainerKeydown = function(e) {\n                        var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n                        if (isDropdownHidden && [ \"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\" ].indexOf(e.key) !== -1) {\n                            // prevent form from being submitted if \"ENTER\" was pressed\n                            e.preventDefault();\n                            // prevent event from being handled again by document\n                            e.stopPropagation();\n                            _this4._showDropdown();\n                        }\n                        // allow navigation from dropdown to input on TAB\n                        if (e.key === \"Tab\") _this4._closeDropdown();\n                    };\n                    this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                }\n            }, {\n                key: \"_initRequests\",\n                value: function _initRequests() {\n                    var _this5 = this;\n                    // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n                    if (this.options.utilsScript && !window.intlTelInputUtils) {\n                        // if the plugin is being initialised after the window.load event has already been fired\n                        if (window.intlTelInputGlobals.documentReady()) {\n                            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n                        } else {\n                            // wait until the load event so we don't block any other requests e.g. the flags image\n                            window.addEventListener(\"load\", function() {\n                                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n                            });\n                        }\n                    } else this.resolveUtilsScriptPromise();\n                    if (this.options.initialCountry === \"auto\") this._loadAutoCountry(); else this.resolveAutoCountryPromise();\n                }\n            }, {\n                key: \"_loadAutoCountry\",\n                value: function _loadAutoCountry() {\n                    // 3 options:\n                    // 1) already loaded (we're done)\n                    // 2) not already started loading (start)\n                    // 3) already started loading (do nothing - just wait for loading callback to fire)\n                    if (window.intlTelInputGlobals.autoCountry) {\n                        this.handleAutoCountry();\n                    } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n                        // don't do this twice!\n                        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n                        if (typeof this.options.geoIpLookup === \"function\") {\n                            this.options.geoIpLookup(function(countryCode) {\n                                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                                // tell all instances the auto country is ready\n                                // TODO: this should just be the current instances\n                                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                                // setTimeout means that the current thread of execution will finish before executing\n                                // this, which allows the plugin to finish initialising.\n                                setTimeout(function() {\n                                    return forEachInstance(\"handleAutoCountry\");\n                                });\n                            }, function() {\n                                return forEachInstance(\"rejectAutoCountryPromise\");\n                            });\n                        }\n                    }\n                }\n            }, {\n                key: \"_initKeyListeners\",\n                value: function _initKeyListeners() {\n                    var _this6 = this;\n                    // update flag on keyup\n                    this._handleKeyupEvent = function() {\n                        if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n                            _this6._triggerCountryChange();\n                        }\n                    };\n                    this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n                    // update flag on cut/paste events (now supported in all major browsers)\n                    this._handleClipboardEvent = function() {\n                        // hack because \"paste\" event is fired before input is updated\n                        setTimeout(_this6._handleKeyupEvent);\n                    };\n                    this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n                }\n            }, {\n                key: \"_cap\",\n                value: function _cap(number) {\n                    var max = this.telInput.getAttribute(\"maxlength\");\n                    return max && number.length > max ? number.substr(0, max) : number;\n                }\n            }, {\n                key: \"_initBlurListeners\",\n                value: function _initBlurListeners() {\n                    var _this7 = this;\n                    // on blur or form submit: if just a dial code then remove it\n                    this._handleSubmitOrBlurEvent = function() {\n                        _this7._removeEmptyDialCode();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                    this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                }\n            }, {\n                key: \"_removeEmptyDialCode\",\n                value: function _removeEmptyDialCode() {\n                    if (this.telInput.value.charAt(0) === \"+\") {\n                        var numeric = this._getNumeric(this.telInput.value);\n                        // if just a plus, or if just a dial code\n                        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n                            this.telInput.value = \"\";\n                        }\n                    }\n                }\n            }, {\n                key: \"_getNumeric\",\n                value: function _getNumeric(s) {\n                    return s.replace(/\\D/g, \"\");\n                }\n            }, {\n                key: \"_trigger\",\n                value: function _trigger(name) {\n                    // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n                    var e = document.createEvent(\"Event\");\n                    e.initEvent(name, true, true);\n                    // can bubble, and is cancellable\n                    this.telInput.dispatchEvent(e);\n                }\n            }, {\n                key: \"_showDropdown\",\n                value: function _showDropdown() {\n                    this.countryList.classList.remove(\"iti__hide\");\n                    this.selectedFlag.setAttribute(\"aria-expanded\", \"true\");\n                    this._setDropdownPosition();\n                    // update highlighting and scroll to active list item\n                    if (this.activeItem) {\n                        this._highlightListItem(this.activeItem, false);\n                        this._scrollTo(this.activeItem, true);\n                    }\n                    // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n                    this._bindDropdownListeners();\n                    // update the arrow\n                    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n                    this._trigger(\"open:countrydropdown\");\n                }\n            }, {\n                key: \"_toggleClass\",\n                value: function _toggleClass(el, className, shouldHaveClass) {\n                    if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className); else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n                }\n            }, {\n                key: \"_setDropdownPosition\",\n                value: function _setDropdownPosition() {\n                    var _this8 = this;\n                    if (this.options.dropdownContainer) {\n                        this.options.dropdownContainer.appendChild(this.dropdown);\n                    }\n                    if (!this.isMobile) {\n                        var pos = this.telInput.getBoundingClientRect();\n                        // windowTop from https://stackoverflow.com/a/14384091/217866\n                        var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                        var inputTop = pos.top + windowTop;\n                        var dropdownHeight = this.countryList.offsetHeight;\n                        // dropdownFitsBelow = (dropdownBottom < windowBottom)\n                        var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n                        var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n                        // by default, the dropdown will be below the input. If we want to position it above the\n                        // input, we add the dropup class.\n                        this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n                        // if dropdownContainer is enabled, calculate postion\n                        if (this.options.dropdownContainer) {\n                            // by default the dropdown will be directly over the input because it's not in the flow.\n                            // If we want to position it below, we need to add some extra top value.\n                            var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n                            // calculate placement\n                            this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n                            this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n                            // close menu on window scroll\n                            this._handleWindowScroll = function() {\n                                return _this8._closeDropdown();\n                            };\n                            window.addEventListener(\"scroll\", this._handleWindowScroll);\n                        }\n                    }\n                }\n            }, {\n                key: \"_getClosestListItem\",\n                value: function _getClosestListItem(target) {\n                    var el = target;\n                    while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n                        el = el.parentNode;\n                    }\n                    // if we reached the countryList element, then return null\n                    return el === this.countryList ? null : el;\n                }\n            }, {\n                key: \"_bindDropdownListeners\",\n                value: function _bindDropdownListeners() {\n                    var _this9 = this;\n                    // when mouse over a list item, just highlight that one\n                    // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n                    this._handleMouseoverCountryList = function(e) {\n                        // handle event delegation, as we're listening for this event on the countryList\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._highlightListItem(listItem, false);\n                    };\n                    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    // listen for country selection\n                    this._handleClickCountryList = function(e) {\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._selectListItem(listItem);\n                    };\n                    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n                    // click off to close\n                    // (except when this initial opening click is bubbling up)\n                    // we cannot just stopPropagation as it may be needed to close another instance\n                    var isOpening = true;\n                    this._handleClickOffToClose = function() {\n                        if (!isOpening) _this9._closeDropdown();\n                        isOpening = false;\n                    };\n                    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n                    // listen for up/down scrolling, enter to select, or letters to jump to country name.\n                    // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n                    // just hit down and hold it to scroll down (no keyup event).\n                    // listen on the document because that's where key events are triggered if no input has focus\n                    var query = \"\";\n                    var queryTimer = null;\n                    this._handleKeydownOnDropdown = function(e) {\n                        // prevent down key from scrolling the whole page,\n                        // and enter key from submitting a form etc\n                        e.preventDefault();\n                        // up and down to navigate\n                        if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key); else if (e.key === \"Enter\") _this9._handleEnterKey(); else if (e.key === \"Escape\") _this9._closeDropdown(); else if (/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n                            // jump to countries that start with the query string\n                            if (queryTimer) clearTimeout(queryTimer);\n                            query += e.key.toLowerCase();\n                            _this9._searchForCountry(query);\n                            // if the timer hits 1 second, reset the query\n                            queryTimer = setTimeout(function() {\n                                query = \"\";\n                            }, 1e3);\n                        }\n                    };\n                    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                }\n            }, {\n                key: \"_handleUpDownKey\",\n                value: function _handleUpDownKey(key) {\n                    var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n                    if (next) {\n                        // skip the divider\n                        if (next.classList.contains(\"iti__divider\")) {\n                            next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n                        }\n                        this._highlightListItem(next, true);\n                    }\n                }\n            }, {\n                key: \"_handleEnterKey\",\n                value: function _handleEnterKey() {\n                    if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n                }\n            }, {\n                key: \"_searchForCountry\",\n                value: function _searchForCountry(query) {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        if (this._startsWith(this.countries[i].name, query)) {\n                            var listItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(this.countries[i].iso2));\n                            // update highlighting and scroll\n                            this._highlightListItem(listItem, false);\n                            this._scrollTo(listItem, true);\n                            break;\n                        }\n                    }\n                }\n            }, {\n                key: \"_startsWith\",\n                value: function _startsWith(a, b) {\n                    return a.substr(0, b.length).toLowerCase() === b;\n                }\n            }, {\n                key: \"_updateValFromNumber\",\n                value: function _updateValFromNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n                        var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n                        var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n                        var format = useNational ? NATIONAL : INTERNATIONAL;\n                        number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n                    }\n                    number = this._beforeSetNumber(number);\n                    this.telInput.value = number;\n                }\n            }, {\n                key: \"_updateFlagFromNumber\",\n                value: function _updateFlagFromNumber(originalNumber) {\n                    // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n                    // with a +1 so _getDialCode will be able to extract the area code\n                    // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n                    // from the number), that means we're initialising the plugin with a number that already has a\n                    // dial code, so fine to ignore this bit\n                    var number = originalNumber;\n                    var selectedDialCode = this.selectedCountryData.dialCode;\n                    var isNanp = selectedDialCode === \"1\";\n                    if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n                        if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n                        number = \"+\".concat(number);\n                    }\n                    // update flag if user types area code for another country\n                    if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n                        number = \"+\".concat(selectedDialCode).concat(number);\n                    }\n                    // try and extract valid dial code from input\n                    var dialCode = this._getDialCode(number, true);\n                    var numeric = this._getNumeric(number);\n                    var countryCode = null;\n                    if (dialCode) {\n                        var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n                        // check if the right country is already selected. this should be false if the number is\n                        // longer than the matched dial code because in this case we need to make sure that if\n                        // there are multiple country matches, that the first one is selected (note: we could\n                        // just check that here, but it requires the same loop that we already have later)\n                        var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n                        var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n                        // only update the flag if:\n                        // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n                        // AND\n                        // B) the right country is not already selected\n                        if (!isRegionlessNanpNumber && !alreadySelected) {\n                            // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n                            // non-empty index\n                            for (var j = 0; j < countryCodes.length; j++) {\n                                if (countryCodes[j]) {\n                                    countryCode = countryCodes[j];\n                                    break;\n                                }\n                            }\n                        }\n                    } else if (number.charAt(0) === \"+\" && numeric.length) {\n                        // invalid dial code, so empty\n                        // Note: use getNumeric here because the number has not been formatted yet, so could contain\n                        // bad chars\n                        countryCode = \"\";\n                    } else if (!number || number === \"+\") {\n                        // empty, or just a plus, so default\n                        countryCode = this.defaultCountry;\n                    }\n                    if (countryCode !== null) {\n                        return this._setFlag(countryCode);\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_isRegionlessNanp\",\n                value: function _isRegionlessNanp(number) {\n                    var numeric = this._getNumeric(number);\n                    if (numeric.charAt(0) === \"1\") {\n                        var areaCode = numeric.substr(1, 3);\n                        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_highlightListItem\",\n                value: function _highlightListItem(listItem, shouldFocus) {\n                    var prevItem = this.highlightedItem;\n                    if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n                    this.highlightedItem = listItem;\n                    this.highlightedItem.classList.add(\"iti__highlight\");\n                    if (shouldFocus) this.highlightedItem.focus();\n                }\n            }, {\n                key: \"_getCountryData\",\n                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n                    var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n                    for (var i = 0; i < countryList.length; i++) {\n                        if (countryList[i].iso2 === countryCode) {\n                            return countryList[i];\n                        }\n                    }\n                    if (allowFail) {\n                        return null;\n                    }\n                    throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n                }\n            }, {\n                key: \"_setFlag\",\n                value: function _setFlag(countryCode) {\n                    var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n                    // do this first as it will throw an error and stop if countryCode is invalid\n                    this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n                    // update the defaultCountry - we only need the iso2 from now on, so just store that\n                    if (this.selectedCountryData.iso2) {\n                        this.defaultCountry = this.selectedCountryData.iso2;\n                    }\n                    this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n                    // update the selected country's title attribute\n                    var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n                    this.selectedFlag.setAttribute(\"title\", title);\n                    if (this.options.separateDialCode) {\n                        var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n                        this.selectedDialCode.innerHTML = dialCode;\n                        // offsetWidth is zero if input is in a hidden container during initialisation\n                        var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n                        // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n                        this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n                    }\n                    // and the input's placeholder\n                    this._updatePlaceholder();\n                    // update the active list item\n                    if (this.options.allowDropdown) {\n                        var prevItem = this.activeItem;\n                        if (prevItem) {\n                            prevItem.classList.remove(\"iti__active\");\n                            prevItem.setAttribute(\"aria-selected\", \"false\");\n                        }\n                        if (countryCode) {\n                            // check if there is a preferred item first, else fall back to standard\n                            var nextItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode, \"-preferred\")) || this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode));\n                            nextItem.setAttribute(\"aria-selected\", \"true\");\n                            nextItem.classList.add(\"iti__active\");\n                            this.activeItem = nextItem;\n                            this.selectedFlag.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n                        }\n                    }\n                    // return if the flag has changed or not\n                    return prevCountry.iso2 !== countryCode;\n                }\n            }, {\n                key: \"_getHiddenSelectedFlagWidth\",\n                value: function _getHiddenSelectedFlagWidth() {\n                    // to get the right styling to apply, all we need is a shallow clone of the container,\n                    // and then to inject a deep clone of the selectedFlag element\n                    var containerClone = this.telInput.parentNode.cloneNode();\n                    containerClone.style.visibility = \"hidden\";\n                    document.body.appendChild(containerClone);\n                    var flagsContainerClone = this.flagsContainer.cloneNode();\n                    containerClone.appendChild(flagsContainerClone);\n                    var selectedFlagClone = this.selectedFlag.cloneNode(true);\n                    flagsContainerClone.appendChild(selectedFlagClone);\n                    var width = selectedFlagClone.offsetWidth;\n                    containerClone.parentNode.removeChild(containerClone);\n                    return width;\n                }\n            }, {\n                key: \"_updatePlaceholder\",\n                value: function _updatePlaceholder() {\n                    var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n                    if (window.intlTelInputUtils && shouldSetPlaceholder) {\n                        var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n                        var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n                        placeholder = this._beforeSetNumber(placeholder);\n                        if (typeof this.options.customPlaceholder === \"function\") {\n                            placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n                        }\n                        this.telInput.setAttribute(\"placeholder\", placeholder);\n                    }\n                }\n            }, {\n                key: \"_selectListItem\",\n                value: function _selectListItem(listItem) {\n                    // update selected flag and active list item\n                    var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n                    this._closeDropdown();\n                    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n                    // focus the input\n                    this.telInput.focus();\n                    // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n                    // inserting dial code), who try to put the cursor at the beginning the first time\n                    var len = this.telInput.value.length;\n                    this.telInput.setSelectionRange(len, len);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"_closeDropdown\",\n                value: function _closeDropdown() {\n                    this.countryList.classList.add(\"iti__hide\");\n                    this.selectedFlag.setAttribute(\"aria-expanded\", \"false\");\n                    // update the arrow\n                    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n                    // unbind key events\n                    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n                    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n                    // remove menu from container\n                    if (this.options.dropdownContainer) {\n                        if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n                        if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n                    }\n                    this._trigger(\"close:countrydropdown\");\n                }\n            }, {\n                key: \"_scrollTo\",\n                value: function _scrollTo(element, middle) {\n                    var container = this.countryList;\n                    // windowTop from https://stackoverflow.com/a/14384091/217866\n                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                    var containerHeight = container.offsetHeight;\n                    var containerTop = container.getBoundingClientRect().top + windowTop;\n                    var containerBottom = containerTop + containerHeight;\n                    var elementHeight = element.offsetHeight;\n                    var elementTop = element.getBoundingClientRect().top + windowTop;\n                    var elementBottom = elementTop + elementHeight;\n                    var newScrollTop = elementTop - containerTop + container.scrollTop;\n                    var middleOffset = containerHeight / 2 - elementHeight / 2;\n                    if (elementTop < containerTop) {\n                        // scroll up\n                        if (middle) newScrollTop -= middleOffset;\n                        container.scrollTop = newScrollTop;\n                    } else if (elementBottom > containerBottom) {\n                        // scroll down\n                        if (middle) newScrollTop += middleOffset;\n                        var heightDifference = containerHeight - elementHeight;\n                        container.scrollTop = newScrollTop - heightDifference;\n                    }\n                }\n            }, {\n                key: \"_updateDialCode\",\n                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n                    var inputVal = this.telInput.value;\n                    // save having to pass this every time\n                    var newDialCode = \"+\".concat(newDialCodeBare);\n                    var newNumber;\n                    if (inputVal.charAt(0) === \"+\") {\n                        // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n                        var prevDialCode = this._getDialCode(inputVal);\n                        if (prevDialCode) {\n                            // current number contains a valid dial code, so replace it\n                            newNumber = inputVal.replace(prevDialCode, newDialCode);\n                        } else {\n                            // current number contains an invalid dial code, so ditch it\n                            // (no way to determine where the invalid dial code ends and the rest of the number begins)\n                            newNumber = newDialCode;\n                        }\n                    } else if (this.options.nationalMode || this.options.separateDialCode) {\n                        // don't do anything\n                        return;\n                    } else {\n                        // nationalMode is disabled\n                        if (inputVal) {\n                            // there is an existing value with no dial code: prefix the new dial code\n                            newNumber = newDialCode + inputVal;\n                        } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n                            // no existing value and either they've just selected a list item, or autoHideDialCode is\n                            // disabled: insert new dial code\n                            newNumber = newDialCode;\n                        } else {\n                            return;\n                        }\n                    }\n                    this.telInput.value = newNumber;\n                }\n            }, {\n                key: \"_getDialCode\",\n                value: function _getDialCode(number, includeAreaCode) {\n                    var dialCode = \"\";\n                    // only interested in international numbers (starting with a plus)\n                    if (number.charAt(0) === \"+\") {\n                        var numericChars = \"\";\n                        // iterate over chars\n                        for (var i = 0; i < number.length; i++) {\n                            var c = number.charAt(i);\n                            // if char is number (https://stackoverflow.com/a/8935649/217866)\n                            if (!isNaN(parseInt(c, 10))) {\n                                numericChars += c;\n                                // if current numericChars make a valid dial code\n                                if (includeAreaCode) {\n                                    if (this.countryCodes[numericChars]) {\n                                        // store the actual raw string (useful for matching later)\n                                        dialCode = number.substr(0, i + 1);\n                                    }\n                                } else {\n                                    if (this.dialCodes[numericChars]) {\n                                        dialCode = number.substr(0, i + 1);\n                                        // if we're just looking for a dial code, we can break as soon as we find one\n                                        break;\n                                    }\n                                }\n                                // stop searching as soon as we can - in this case when we hit max len\n                                if (numericChars.length === this.countryCodeMaxLen) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return dialCode;\n                }\n            }, {\n                key: \"_getFullNumber\",\n                value: function _getFullNumber() {\n                    var val = this.telInput.value.trim();\n                    var dialCode = this.selectedCountryData.dialCode;\n                    var prefix;\n                    var numericVal = this._getNumeric(val);\n                    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n                        // when using separateDialCode, it is visible so is effectively part of the typed number\n                        prefix = \"+\".concat(dialCode);\n                    } else {\n                        prefix = \"\";\n                    }\n                    return prefix + val;\n                }\n            }, {\n                key: \"_beforeSetNumber\",\n                value: function _beforeSetNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.separateDialCode) {\n                        var dialCode = this._getDialCode(number);\n                        // if there is a valid dial code\n                        if (dialCode) {\n                            // in case _getDialCode returned an area code as well\n                            dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n                            // a lot of numbers will have a space separating the dial code and the main number, and\n                            // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n                            // rid of it\n                            // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n                            var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n                            number = number.substr(start);\n                        }\n                    }\n                    return this._cap(number);\n                }\n            }, {\n                key: \"_triggerCountryChange\",\n                value: function _triggerCountryChange() {\n                    this._trigger(\"countrychange\");\n                }\n            }, {\n                key: \"handleAutoCountry\",\n                value: function handleAutoCountry() {\n                    if (this.options.initialCountry === \"auto\") {\n                        // we must set this even if there is an initial val in the input: in case the initial val is\n                        // invalid and they delete it - they should see their auto country\n                        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n                        // if there's no initial value in the input, then update the flag\n                        if (!this.telInput.value) {\n                            this.setCountry(this.defaultCountry);\n                        }\n                        this.resolveAutoCountryPromise();\n                    }\n                }\n            }, {\n                key: \"handleUtils\",\n                value: function handleUtils() {\n                    // if the request was successful\n                    if (window.intlTelInputUtils) {\n                        // if there's an initial value in the input, then format it\n                        if (this.telInput.value) {\n                            this._updateValFromNumber(this.telInput.value);\n                        }\n                        this._updatePlaceholder();\n                    }\n                    this.resolveUtilsScriptPromise();\n                }\n            }, {\n                key: \"destroy\",\n                value: function destroy() {\n                    var form = this.telInput.form;\n                    if (this.options.allowDropdown) {\n                        // make sure the dropdown is closed (and unbind listeners)\n                        this._closeDropdown();\n                        this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n                        this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                        // label click hack\n                        var label = this._getClosestLabel();\n                        if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n                    }\n                    // unbind hiddenInput listeners\n                    if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n                    // unbind autoHideDialCode listeners\n                    if (this.options.autoHideDialCode) {\n                        if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                        this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                    }\n                    // unbind key events, and cut/paste events\n                    this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n                    this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n                    // remove attribute of id instance: data-intl-tel-input-id\n                    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n                    // remove markup (but leave the original input)\n                    var wrapper = this.telInput.parentNode;\n                    wrapper.parentNode.insertBefore(this.telInput, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                    delete window.intlTelInputGlobals.instances[this.id];\n                }\n            }, {\n                key: \"getExtension\",\n                value: function getExtension() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumber\",\n                value: function getNumber(format) {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumberType\",\n                value: function getNumberType() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"getSelectedCountryData\",\n                value: function getSelectedCountryData() {\n                    return this.selectedCountryData;\n                }\n            }, {\n                key: \"getValidationError\",\n                value: function getValidationError() {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"isValidNumber\",\n                value: function isValidNumber() {\n                    var val = this._getFullNumber().trim();\n                    var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n                    return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n                }\n            }, {\n                key: \"setCountry\",\n                value: function setCountry(originalCountryCode) {\n                    var countryCode = originalCountryCode.toLowerCase();\n                    // check if already selected\n                    if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n                        this._setFlag(countryCode);\n                        this._updateDialCode(this.selectedCountryData.dialCode, false);\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setNumber\",\n                value: function setNumber(number) {\n                    // we must update the flag first, which updates this.selectedCountryData, which is used for\n                    // formatting the number before displaying it\n                    var flagChanged = this._updateFlagFromNumber(number);\n                    this._updateValFromNumber(number);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setPlaceholderNumberType\",\n                value: function setPlaceholderNumberType(type) {\n                    this.options.placeholderNumberType = type;\n                    this._updatePlaceholder();\n                }\n            } ]);\n            return Iti;\n        }();\n        /********************\n *  STATIC METHODS\n ********************/\n        // get the country data object\n        intlTelInputGlobals.getCountryData = function() {\n            return allCountries;\n        };\n        // inject a <script> element to load utils.js\n        var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n            // inject a new script element into the page\n            var script = document.createElement(\"script\");\n            script.onload = function() {\n                forEachInstance(\"handleUtils\");\n                if (handleSuccess) handleSuccess();\n            };\n            script.onerror = function() {\n                forEachInstance(\"rejectUtilsScriptPromise\");\n                if (handleFailure) handleFailure();\n            };\n            script.className = \"iti-load-utils\";\n            script.async = true;\n            script.src = path;\n            document.body.appendChild(script);\n        };\n        // load the utils script\n        intlTelInputGlobals.loadUtils = function(path) {\n            // 2 options:\n            // 1) not already started loading (start)\n            // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n            // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n                // only do this once\n                window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n                // if we have promises, then return a promise\n                if (typeof Promise !== \"undefined\") {\n                    return new Promise(function(resolve, reject) {\n                        return injectScript(path, resolve, reject);\n                    });\n                }\n                injectScript(path);\n            }\n            return null;\n        };\n        // default options\n        intlTelInputGlobals.defaults = defaults;\n        // version\n        intlTelInputGlobals.version = \"17.0.19\";\n        // convenience wrapper\n        return function(input, options) {\n            var iti = new Iti(input, options);\n            iti._init();\n            input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n            window.intlTelInputGlobals.instances[iti.id] = iti;\n            return iti;\n        };\n    }();\n});","/**\n * Exposing intl-tel-input as a component\n */\nmodule.exports = require(\"./build/js/intlTelInput\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","class ReferenceWidgetAPI {\n\n  constructor(props) {\n    console.debug(\"ReferenceWidgetAPI::constructor\")\n    this.api_url = props.api_url;\n    this.on_api_error = props.on_api_error || function(response) {};\n    return this;\n  }\n\n  get_api_url(endpoint) {\n    return `${this.api_url}/${endpoint}#${location.search}`\n  }\n\n  /*\n   * Fetch Ajax API resource from the server\n   *\n   * @param {string} endpoint\n   * @param {object} options\n   * @returns {Promise}\n   */\n  get_json(endpoint, options) {\n    var data, init, method, on_api_error, request, url;\n    if (options == null) {\n      options = {};\n    }\n    method = options.method || \"POST\";\n    data = JSON.stringify(options.data) || \"{}\";\n    on_api_error = this.on_api_error;\n    url = this.get_api_url(endpoint);\n    init = {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": this.get_csrf_token()\n      },\n      body: method === \"POST\" ? data : null,\n      credentials: \"include\"\n    };\n    console.info(\"ReferenceWidgetAPI::fetch:endpoint=\" + endpoint + \" init=\", init);\n    request = new Request(url, init);\n    return fetch(request).then(function(response) {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n      return response;\n    }).then(function(response) {\n      return response.json();\n    }).catch(function(response) {\n      on_api_error(response);\n      return response;\n    });\n  }\n\n  search(catalog, query, params) {\n    params = params || {};\n    let url = `search?catalog=${catalog}`;\n    for(let [key, value] of Object.entries(query)) {\n      // handle arrays as repeating parameters\n      if (Array.isArray(value)) {\n        value.forEach( (item) => {\n          url += `&${key}=${item}`;\n        });\n        continue;\n      }\n      // workaround for path queries\n      if (key == \"path\") {\n        value = value.query || null;\n        if (value.depth !== null) {\n          url += `&depth=${value.depth}`;\n        }\n      }\n      if (value) {\n        url += `&${key}=${value}`;\n      }\n    }\n    for(let [key, value] of Object.entries(params)) {\n      url += `&${key}=${value}`;\n    }\n    console.debug(\"ReferenceWidgetAPI::search:url=\", url);\n    return this.get_json(url, {method: \"GET\"});\n  }\n\n  /*\n   * Get the plone.protect CSRF token\n   * Note: The fields won't save w/o that token set\n   */\n  get_csrf_token() {\n    return document.querySelector(\"#protect-script\").dataset.token;\n  };\n\n}\n\nexport default ReferenceWidgetAPI;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass ReferenceField extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n\n    // React reference to the input field\n    // https://reactjs.org/docs/react-api.html#reactcreateref\n    this.input_field_ref = React.createRef();\n\n    // bind event handlers\n    this.on_focus = this.on_focus.bind(this);\n    this.on_blur = this.on_blur.bind(this);\n    this.on_change = this.on_change.bind(this);\n    this.on_keydown = this.on_keydown.bind(this);\n    this.on_keypress = this.on_keypress.bind(this);\n    this.on_clear_click = this.on_clear_click.bind(this);\n    this.on_search_click = this.on_search_click.bind(this);\n  }\n\n  /*\n   * Returns the search value from the input field\n   */\n  get_search_value() {\n    return this.input_field_ref.current.value;\n  }\n\n  /*\n   * Handler when the search field get focused\n   */\n  on_focus(event) {\n    console.debug(\"ReferenceField::on_focus\");\n    if (this.props.on_focus) {\n      let value = this.get_search_value() || null;\n      this.props.on_focus(value);\n    }\n  }\n\n  /*\n   * Handler when the search field lost focus\n   */\n  on_blur(event) {\n    console.debug(\"ReferenceField::on_blur\");\n    if (this.props.on_blur) {\n      let value = this.get_search_value();\n      this.props.on_blur(value);\n    }\n  }\n\n  /*\n   * Handler when the search value changed\n   */\n  on_change(event) {\n    event.preventDefault();\n    let value = this.get_search_value();\n    console.debug(\"ReferenceField::on_change:value: \", value);\n    if (this.props.on_search) {\n      this.props.on_search(value);\n    }\n  }\n\n  /*\n   * Handler for keydown events in the search field\n   *\n   */\n  on_keydown(event) {\n    // backspace\n    if (event.which == 8) {\n      if (this.get_search_value() == \"\") {\n        this.props.on_clear();\n      }\n    }\n\n    // down arrow\n    if (event.which == 40) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"down\");\n      }\n    }\n    // up arrow\n    if (event.which == 38) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"up\");\n      }\n    }\n\n    // left arrow\n    if (event.which == 37) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"left\");\n      }\n    }\n\n    // right arrow\n    if (event.which == 39) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"right\");\n      }\n    }\n  }\n\n  /*\n   * Handler for keypress events in the search field\n   *\n   */\n  on_keypress(event) {\n    if (event.which == 13) {\n      console.debug(\"ReferenceField::on_keypress:ENTER\");\n      // prevent form submission when clicking ENTER\n      event.preventDefault();\n      if (this.props.on_enter) {\n        this.props.on_enter();\n      }\n\n    }\n  }\n\n  on_clear_click(event) {\n    event.preventDefault();\n    if (this.props.on_clear) {\n      let value = this.get_search_value();\n      this.props.on_clear(value);\n      // clear the input field\n      this.input_field_ref.current.value = \"\"\n    }\n  }\n\n  on_search_click(event) {\n    event.preventDefault();\n    if (this.props.on_search) {\n      let value = this.get_search_value();\n      this.props.on_search(value);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"uidreferencewidget-search-field\">\n        <div className=\"input-group\">\n          <input type=\"text\"\n                 name={this.props.name}\n                 className={this.props.className}\n                 ref={this.input_field_ref}\n                 disabled={this.props.disabled}\n                 onKeyDown={this.on_keydown}\n                 onKeyPress={this.on_keypress}\n                 onChange={this.on_change}\n                 onFocus={this.on_focus}\n                 onBlur={this.on_blur}\n                 placeholder={this.props.placeholder}\n                 style={{maxWidth: \"160px\"}}\n                 disabled={this.props.disabled}\n          />\n          <div class=\"input-group-append\">\n            <button className=\"btn btn-sm btn-outline-secondary\"\n                    disabled={this.props.disabled}\n                    onClick={this.on_clear_click}>\n              <i class=\"fas fa-times\"></i>\n            </button>\n            <button className=\"btn btn-sm btn-outline-primary\"\n                    disabled={this.props.disabled}\n                    onClick={this.on_search_click}>\n              <i class=\"fas fa-search\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReferenceField;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass ReferenceResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // bind event handlers\n    this.on_select = this.on_select.bind(this);\n    this.on_page = this.on_page.bind(this);\n    this.on_prev_page = this.on_prev_page.bind(this);\n    this.on_next_page = this.on_next_page.bind(this);\n    this.on_close = this.on_close.bind(this);\n  }\n\n  /*\n   * Return the header columns config\n   *\n   * @returns {Array} of column config objects\n   */\n  get_columns() {\n    return this.props.columns || [];\n  }\n\n  /*\n   * Return only the (field-)names of the columns config\n   *\n   * @returns {Array} of column names\n   */\n  get_column_names() {\n    let columns = this.get_columns();\n    return columns.map((column) => {\n      return column.name;\n    });\n  }\n\n  /*\n   * Return only the labels of the columns config\n   *\n   * @returns {Array} of column labels\n   */\n  get_column_labels() {\n    let columns = this.get_columns();\n    return columns.map((column) => { return column.label });\n  }\n\n  /*\n   * Return the search results\n   *\n   * @returns {Array} of result objects (items of `senaite.jsonapi` response)\n   */\n  get_results() {\n    return this.props.results || [];\n  }\n\n  /*\n   * Checks if results are available\n   *\n   * @returns {Boolean} true if there are results, false otherwise\n   */\n  has_results() {\n    return this.get_results().length > 0;\n  }\n\n  /*\n   * Returns the style object for the dropdown table\n   *\n   * @returns {Object} of ReactJS CSS styles\n   */\n  get_style() {\n    return {\n      minWidth: this.props.width || \"400px\",\n      backgroundColor: \"white\",\n      zIndex: 999999\n    }\n  }\n\n  /*\n   * Returns the UID of a result object\n   *\n   * @returns {String} UID of the result\n   */\n  get_result_uid(result) {\n    return result.uid || \"NO UID FOUND!\";\n  }\n\n  /*\n   * Checks wehter the UID is already in the list of selected UIDs\n   *\n   * @returns {Boolean} true if the UID is already selected, false otherwise\n   */\n  is_uid_selected(uid) {\n    return this.props.uids.indexOf(uid) > -1;\n  }\n\n  /*\n   * Build Header <th></th> columns\n   *\n   * @returns {Array} of <th>...</th> columns\n   */\n  build_header_columns() {\n    let columns = [];\n    for (let column of this.get_columns()) {\n      let label = column.label || column.title;\n      let width = column.width || \"auto\";\n      let align = column.align || \"left\";\n      columns.push(\n        <th className=\"border-top-0\" width={width} align={align}>\n          {_t(label)}\n        </th>\n      );\n    }\n    // Append additional column for usage state\n    columns.push(\n      <th className=\"border-top-0\" width=\"1\"></th>\n    )\n    return columns;\n  }\n\n  /*\n   * Build table <tr></tr> rows\n   *\n   * @returns {Array} of <tr>...</tr> rows\n   */\n  build_rows() {\n    let rows = [];\n    let results = this.get_results();\n    results.forEach((result, index) => {\n      let uid = this.get_result_uid(result);\n      rows.push(\n        <tr uid={uid}\n            className={this.props.focused == index ? \"table-active\": \"\"}\n            onClick={this.on_select}>\n          {this.build_columns(result)}\n        </tr>\n      );\n    });\n    return rows\n  }\n\n  /*\n   * Build Header <td></td> columns\n   *\n   * @returns {Array} of <td>...</td> columns\n   */\n  build_columns(result) {\n    let columns = []\n    let searchterm = this.props.searchterm || \"\";\n    for (let name of this.get_column_names()) {\n      let value = result[name];\n      let highlighted = this.highlight(value, searchterm);\n      columns.push(\n        <td dangerouslySetInnerHTML={{__html: highlighted}}></td>\n      );\n    }\n    let uid = result.uid;\n    let used = this.props.uids.indexOf(uid) > -1;\n    columns.push(\n      <td>{used && <i class=\"fas fa-link text-success\"></i>}</td>\n    );\n    return columns;\n  }\n\n  /*\n   * Highlight any found match of the searchterm in the text\n   *\n   * @returns {String} highlighted text\n   */\n  highlight(text, searchterm) {\n    if (searchterm.length == 0) return text;\n    try {\n      let rx = new RegExp(searchterm, \"gi\");\n      text = text.replaceAll(rx, (m) => {\n        return \"<span class='font-weight-bold text-info'>\"+m+\"</span>\";\n      });\n    } catch (error) {\n      // pass\n    }\n    return text\n  }\n\n  /*\n   * Build pagination <li>...</li> items\n   *\n   * @returns {Array} Pagination JSX\n   */\n  build_pages() {\n    let pages = [];\n\n    let total = this.props.pages;\n    let current = this.props.page;\n    let padding = this.props.padding;\n\n    let first_page = current - padding > 0 ? current - padding : 1;\n    let last_page = current + padding < total ? current + padding : total;\n\n    let crop_before = first_page === 1 ? false : true;\n    let crop_after = last_page < total ? true : false;\n\n    for (let page=first_page; page <= last_page; page++) {\n      let cls = [\"page-item\"];\n      if (current === page) cls.push(\"active\");\n\n      // crop before the current page\n      if (page == first_page && crop_before) {\n        // link to first page\n        pages.push(\n          <li>\n            <button className=\"page-link\" page={1} onClick={this.on_page}>1</button>\n          </li>\n        );\n        // placeholder\n        pages.push(\n          <li>\n            <div className=\"page-link\">...</div>\n          </li>\n        );\n        crop_before = false;\n      }\n\n      pages.push(\n        <li className={cls.join(\" \")}>\n          <button className=\"page-link\" page={page} onClick={this.on_page}>\n            {page}\n          </button>\n        </li>\n      );\n\n      // crop after the current page\n      if (page === last_page && crop_after) {\n        // placeholder\n        pages.push(\n          <li>\n            <div className=\"page-link\">...</div>\n          </li>\n        );\n        // link to last page\n        pages.push(\n          <li>\n            <button className=\"page-link\" page={total} onClick={this.on_page}>\n              {total}\n            </button>\n          </li>\n        );\n        crop_after = false;\n      }\n\n    }\n    return pages;\n  }\n\n  /*\n   * Build pagination next button\n   *\n   * @returns {Array} Next button JSX\n   */\n  build_next_button() {\n    let cls = [\"page-item\"]\n    if (!this.props.next_url) cls.push(\"disabled\")\n    return (\n      <li className={cls.join(\" \")}>\n        <button className=\"page-link\" onClick={this.on_next_page}>\n          Next\n        </button>\n      </li>\n    )\n  }\n\n  /*\n   * Build pagination previous button\n   *\n   * @returns {Array} Previous button JSX\n   */\n  build_prev_button() {\n    let cls = [\"page-item\"]\n    if (!this.props.prev_url) cls.push(\"disabled\")\n    return (\n      <li className={cls.join(\" \")}>\n        <button className=\"page-link\" onClick={this.on_prev_page}>\n          Previous\n        </button>\n      </li>\n    )\n  }\n\n  /*\n   * Build results dropdown close button\n   *\n   * @returns {Array} Close button JSX\n   */\n  build_close_button() {\n    return (\n      <button className=\"btn btn-sm btn-link\" onClick={this.on_close}>\n        <i class=\"fas fa-window-close\"></i>\n      </button>\n    )\n  }\n\n  /*\n   * Event handler when a result was selected\n   */\n  on_select(event) {\n    event.preventDefault();\n    let target = event.currentTarget;\n    let uid = target.getAttribute(\"uid\")\n    console.debug(\"ReferenceResults::on_select:event=\", event);\n    if (this.props.on_select) {\n      this.props.on_select(uid);\n    }\n  }\n\n  /*\n   * Event handler when a page was clicked\n   */\n  on_page(event) {\n    event.preventDefault();\n    let target = event.currentTarget;\n    let page = target.getAttribute(\"page\")\n    console.debug(\"ReferenceResults::on_page:event=\", event);\n    if (page == this.props.page) {\n      return;\n    }\n    if (this.props.on_page) {\n      this.props.on_page(page);\n    }\n  }\n\n  /*\n   * Event handler when the pagination previous button was clicked\n   */\n  on_prev_page(event) {\n    event.preventDefault();\n    console.debug(\"ReferenceResults::on_prev_page:event=\", event);\n    let page = this.props.page;\n    if (page < 2) {\n      console.warn(\"No previous pages available!\");\n      return;\n    }\n    if (this.props.on_page) {\n      this.props.on_page(page - 1);\n    }\n  }\n\n  /*\n   * Event handler when the pagination next button was clicked\n   */\n  on_next_page(event) {\n    event.preventDefault();\n    console.debug(\"ReferenceResults::on_next_page:event=\", event);\n    let page = this.props.page;\n    if (page + 1 > this.props.pages) {\n      console.warn(\"No next pages available!\");\n      return;\n    }\n    if (this.props.on_page) {\n      this.props.on_page(page + 1);\n    }\n  }\n\n  /*\n   * Event handler when the dropdown close button was clicked\n   */\n  on_close(event) {\n    event.preventDefault();\n    console.debug(\"ReferenceResults::on_close:event=\", event);\n    if (this.props.on_clear) {\n      this.props.on_clear();\n    }\n  }\n\n  /*\n   * Render the reference results selection\n   */\n  render() {\n    if (!this.has_results()) {\n      return null;\n    }\n    return (\n      <div className={this.props.className}\n           style={this.get_style()}>\n        <div style={{position: \"absolute\", top: 0, right: 0}}>\n          {this.build_close_button()}\n        </div>\n        <table className=\"table table-sm table-hover small\">\n          <thead>\n            <tr>\n              {this.build_header_columns()}\n            </tr>\n          </thead>\n          <tbody>\n            {this.build_rows()}\n          </tbody>\n        </table>\n        {this.props.pages > 1 &&\n         <nav>\n           <ul className=\"pagination pagination-sm justify-content-center\">\n             {this.build_prev_button()}\n             {this.build_pages()}\n             {this.build_next_button()}\n           </ul>\n         </nav>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ReferenceResults;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass References extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.on_deselect = this.on_deselect.bind(this);\n  }\n\n  get_selected_uids() {\n    return this.props.uids || [];\n  }\n\n  /*\n   * Simple template interpolation that replaces ${...} placeholders\n   * with any found value from the context object.\n   *\n   * https://stackoverflow.com/questions/29182244/convert-a-string-to-a-template-string\n   */\n  interpolate(template, context) {\n    for(let [key, value] of Object.entries(context)) {\n      template = template.replace(new RegExp('\\\\$\\\\{' + key + '\\\\}', 'g'), value)\n    }\n    return template;\n  }\n\n  render_display_template(uid) {\n    let template = this.props.display_template;\n    let context = this.props.records[uid];\n    if (!context) return uid;\n    return this.interpolate(template, context);\n  }\n\n  build_selected_items() {\n    let items = [];\n    let selected_uids = this.get_selected_uids();\n\n    for (let uid of selected_uids) {\n      items.push(\n        <li uid={uid}>\n          <div className=\"p-1 mb-1 mr-1 bg-light border rounded d-inline-block\">\n            <span dangerouslySetInnerHTML={{__html: this.render_display_template(uid)}}></span>\n            <button uid={uid}\n                    className=\"btn btn-sm btn-link-danger\"\n                    onClick={this.on_deselect}>\n              <i className=\"fas fa-times-circle\"></i>\n            </button>\n          </div>\n\n        </li>\n      );\n    }\n    return items\n  }\n\n  on_deselect(event) {\n    event.preventDefault();\n    let target = event.currentTarget;\n    let uid = target.getAttribute(\"uid\");\n    console.debug(\"References::on_deselect: Remove UID\", uid);\n    if (this.props.on_deselect) {\n      this.props.on_deselect(uid);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"uidreferencewidget-references\">\n        <ul className=\"list-unstyled list-group list-group-horizontal\">\n          {this.build_selected_items()}\n        </ul>\n        {/* submitted in form */}\n        <textarea\n          className=\"d-none\"\n          name={this.props.name}\n          value={this.props.uids.join(\"\\n\")}\n        />\n      </div>\n    );\n  }\n}\n\nexport default References;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport ReferenceWidgetAPI from \"./api.js\"\nimport ReferenceField from \"./components/ReferenceField.js\"\nimport ReferenceResults from \"./components/ReferenceResults.js\"\nimport References from \"./components/References.js\"\n\n\nclass UIDReferenceWidgetController extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Internal state\n    this.state = {\n      results: [],  // `items` list of search results coming from `senaite.jsonapi`\n      searchterm: \"\",  // the search term that was entered by the user\n      loading: false,  // loading flag when searching for results\n      count: 0,  // count of results (coming from `senaite.jsonapi`)\n      page: 1,  // current page (coming from `senaite.jsonapi`)\n      pages: 1,  // number of pages (coming from `senaite.jsonapi`)\n      next_url: null,  // next page API URL (coming from `senaite.jsonapi`)\n      prev_url: null,  // previous page API URL (coming from `senaite.jsonapi`)\n      b_start: 1,  // batch start for pagination (see `senaite.jsonapi.batch`)\n      focused: 0,  // current result that has the focus\n      padding: 3,  // page padding\n    }\n\n    // Root input HTML element\n    let el = props.root_el;\n\n    // Data keys located at the root element\n    // -> initial values are set from the widget class\n    const data_keys = [\n      \"id\",\n      \"name\",\n      \"uids\",\n      \"api_url\",\n      \"records\",\n      \"catalog\",\n      \"query\",\n      \"columns\",\n      \"display_template\",\n      \"limit\",\n      \"multi_valued\",\n      \"disabled\",\n      \"readonly\",\n      \"padding\",\n    ]\n\n    // Query data keys and set state with parsed JSON value\n    for (let key of data_keys) {\n      let value = el.dataset[key];\n      if (value === undefined) {\n        continue;\n      }\n      this.state[key] = this.parse_json(value);\n    }\n\n    // Initialize communication API with the API URL\n    this.api = new ReferenceWidgetAPI({\n      api_url: this.state.api_url,\n    });\n\n    // Bind callbacks to current context\n    this.search = this.search.bind(this);\n    this.goto_page = this.goto_page.bind(this);\n    this.clear_results = this.clear_results.bind(this);\n    this.select = this.select.bind(this);\n    this.select_focused = this.select_focused.bind(this);\n    this.deselect = this.deselect.bind(this);\n    this.navigate_results = this.navigate_results.bind(this);\n    this.on_keydown = this.on_keydown.bind(this);\n    this.on_click = this.on_click.bind(this);\n\n    // dev only\n    window.widget = this;\n\n    return this\n  }\n\n  componentDidMount() {\n    // Bind event listeners of the document\n    document.addEventListener(\"keydown\", this.on_keydown, false);\n    document.addEventListener(\"click\", this.on_click, false)\n  }\n\n  componentWillUnmount() {\n    // Remove event listeners of the document\n    document.removeEventListener(\"keydown\", this.on_keydown, false);\n    document.removeEventListener(\"click\", this.on_click, false);\n  }\n\n  /*\n   * JSON parse the given value\n   *\n   * @param {String} value: The JSON value to parse\n   */\n  parse_json(value) {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.error(`Could not parse \"${value}\" to JSON`);\n    }\n  }\n\n  is_disabled() {\n    if (this.state.disabled) {\n      return true;\n    }\n    if (this.state.readonly) {\n      return true;\n    }\n    if (!this.state.multi_valued && this.state.uids.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   * Create a query object for the API\n   *\n   * This method prepares a query from the current state variables,\n   * which can be used to call the `api.search` method.\n   *\n   * @param {Object} options: Additional options to add to the query\n   * @returns {Object} The query object\n   */\n  make_query(options) {\n    options = options || {};\n    return Object.assign({\n      q: this.state.searchterm,\n      limit: this.state.limit,\n      complete: 1,\n    }, options, this.state.query);\n  }\n\n  /*\n   * Execute a search query and set the results to the state\n   *\n   * @param {Object} url_params: Additional search params for the API search URL\n   * @returns {Promise}\n   */\n  fetch_results(url_params) {\n    url_params = url_params || {};\n    // prepare the server request\n    let self = this;\n    let query = this.make_query();\n    this.toggle_loading(true);\n    let promise = this.api.search(this.state.catalog, query, url_params);\n    promise.then(function(data) {\n      console.debug(\"ReferenceWidgetController::fetch_results:GOT DATA: \", data);\n      self.set_results_data(data);\n      self.toggle_loading(false);\n    });\n    return promise;\n  }\n\n  /*\n   * Execute a search for the given searchterm\n   *\n   * @param {String} searchterm: The value entered into the search field\n   * @returns {Promise}\n   */\n  search(searchterm) {\n    if (!searchterm && this.state.results.length > 0) {\n      this.state.searchterm = \"\";\n      return;\n    }\n    console.debug(\"ReferenceWidgetController::search:searchterm:\", searchterm);\n    // set the searchterm directly to avoid re-rendering\n    this.state.searchterm = searchterm || \"\";\n    return this.fetch_results();\n  }\n\n  /*\n   * Fetch results of a page\n   *\n   * @param {Integer} page: The page to fetch\n   * @returns {Promise}\n   */\n  goto_page(page) {\n    page = parseInt(page);\n    let limit = parseInt(this.state.limit)\n    // calculate the beginning of the page\n    // Note: this is the count of previous items that are excluded\n    let b_start = page * limit - limit;\n    return this.fetch_results({b_start: b_start});\n  }\n\n  /*\n   * Add the UID of a search result to the state\n   *\n   * @param {String} uid: The selected UID\n   * @returns {Array} uids: current selected UIDs\n   */\n  select(uid) {\n    console.debug(\"ReferenceWidgetController::select:uid:\", uid);\n    // create a copy of the selected UIDs\n    let uids = [].concat(this.state.uids);\n    // Add the new UID if it is not selected yet\n    if (uids.indexOf(uid) == -1) {\n      uids.push(uid);\n    }\n    this.setState({uids: uids});\n    if (uids.length > 0 && !this.state.multi_valued) {\n      this.clear_results();\n    }\n    return uids;\n  }\n\n  /*\n   * Add/remove the focused result\n   *\n   */\n  select_focused() {\n    console.debug(\"ReferenceWidgetController::select_focused\");\n    let focused = this.state.focused;\n    let result = this.state.results.at(focused);\n    if (result) {\n      let uid = result.uid;\n      if (this.state.uids.indexOf(uid) == -1) {\n        this.select(uid);\n      } else {\n        this.deselect(uid);\n      }\n    }\n  }\n\n  /*\n   * Remove the UID of a reference from the state\n   *\n   * @param {String} uid: The selected UID\n   * @returns {Array} uids: current selected UIDs\n   */\n  deselect(uid) {\n    console.debug(\"ReferenceWidgetController::deselect:uid:\", uid);\n    let uids = [].concat(this.state.uids);\n    let pos = uids.indexOf(uid);\n    if (pos > -1) {\n      uids.splice(pos, 1);\n    }\n    this.setState({uids: uids});\n    return uids;\n  }\n\n  /*\n   * Navigate the results either up or down\n   *\n   * @param {String} direction: either up or down\n   */\n  navigate_results(direction) {\n    let page = this.state.page;\n    let pages = this.state.pages;\n    let results = this.state.results;\n    let focused = this.state.focused;\n    let searchterm = this.state.searchterm;\n\n    console.debug(\"ReferenceWidgetController::navigate_results:focused:\", focused);\n\n    if (direction == \"up\") {\n      if (focused > 0) {\n        this.setState({focused: focused - 1});\n      } else {\n        this.setState({focused: 0});\n        if (page > 1) {\n          this.goto_page(page - 1);\n        }\n      }\n    }\n\n    else if (direction == \"down\") {\n      if (this.state.results.length == 0) {\n        this.search(searchterm);\n      }\n      if (focused < results.length - 1) {\n        this.setState({focused: focused + 1});\n      } else {\n        this.setState({focused: 0});\n        if (page < pages) {\n          this.goto_page(page + 1);\n        }\n      }\n    }\n\n    else if (direction == \"left\") {\n      this.setState({focused: 0});\n      if (page > 0) {\n        this.goto_page(page - 1);\n      }\n    }\n\n    else if (direction == \"right\") {\n      this.setState({focused: 0});\n      if (page < pages) {\n        this.goto_page(page + 1);\n      }\n    }\n  }\n\n  /*\n   * Toggle loading state\n   *\n   * @param {Boolean} toggle: The loading state to set\n   * @returns {Boolean} toggle: The current loading state\n   */\n  toggle_loading(toggle) {\n    if (toggle == null) {\n      toggle = false;\n    }\n    this.setState({\n      loading: toggle\n    });\n    return toggle;\n  }\n\n  /*\n   * Set results data coming from `senaite.jsonapi`\n   *\n   * @param {Object} data: JSON search result object returned from `senaite.jsonapi`\n   */\n  set_results_data(data) {\n    data = data || {};\n    let items = data.items || [];\n\n    let records = Object.assign(this.state.records, {})\n    // update state records\n    for (let item of items) {\n      let uid = item.uid;\n      records[uid] = item;\n    }\n\n    this.setState({\n      records: records,\n      results: items,\n      count: data.count || 0,\n      page: data.page || 1,\n      pages: data.pages || 1,\n      next_url: data.next || null,\n      prev_url: data.previous || null,\n    });\n  }\n\n  /*\n   * Clear results from the state\n   */\n  clear_results() {\n    this.setState({\n      results: [],\n      count: 0,\n      page: 1,\n      pages: 1,\n      next_url: null,\n      prev_url: null,\n    });\n  }\n\n  /*\n   * ReactJS event handler for keydown event\n   */\n  on_keydown(event){\n    // clear results when ESC key is pressed\n    if(event.keyCode === 27) {\n      this.clear_results();\n    }\n  }\n\n  /*\n   * ReactJS event handler for click events\n   */\n  on_click(event) {\n    // clear results when clicked outside of the widget\n    let widget = this.props.root_el;\n    let target = event.target;\n    if (!widget.contains(target)) {\n      this.clear_results();\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"uidreferencewidget\">\n          <References\n            uids={this.state.uids}\n            records={this.state.records}\n            display_template={this.state.display_template}\n            name={this.state.name}\n            on_deselect={this.deselect}\n          />\n          <ReferenceField\n            className=\"form-control\"\n            name=\"uidreference-search\"\n            disabled={this.is_disabled()}\n            on_search={this.search}\n            on_clear={this.clear_results}\n            on_focus={this.search}\n            on_arrow_key={this.navigate_results}\n            on_enter={this.select_focused}\n          />\n          <ReferenceResults\n            className=\"position-absolute shadow border rounded bg-white mt-1 p-1\"\n            columns={this.state.columns}\n            uids={this.state.uids}\n            searchterm={this.state.searchterm}\n            results={this.state.results}\n            focused={this.state.focused}\n            count={this.state.count}\n            page={this.state.page}\n            pages={this.state.pages}\n            padding={this.state.padding}\n            next_url={this.state.next_url}\n            prev_url={this.state.prev_url}\n            on_select={this.select}\n            on_page={this.goto_page}\n            on_clear={this.clear_results}\n          />\n        </div>\n    );\n  }\n}\n\nexport default UIDReferenceWidgetController;\n","class AddressWidgetAPI {\n\n  constructor(props) {\n    console.debug(\"AddressWidgetAPI::constructor\")\n    this.portal_url = props.portal_url;\n    this.on_api_error = props.on_api_error || function(response) {};\n    return this;\n  }\n\n  get_url(endpoint) {\n    return `${this.portal_url}/${endpoint}`\n  }\n\n  /*\n   * Fetch JSON resource from the server\n   *\n   * @param {string} endpoint\n   * @param {object} options\n   * @returns {Promise}\n   */\n  get_json(endpoint, options) {\n    var data, init, method, on_api_error, request, url;\n    if (options == null) {\n      options = {};\n    }\n    method = options.method || \"POST\";\n    data = JSON.stringify(options.data) || \"{}\";\n    on_api_error = this.on_api_error;\n    url = this.get_url(endpoint);\n    init = {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": this.get_csrf_token()\n      },\n      body: method === \"POST\" ? data : null,\n      credentials: \"include\"\n    };\n    console.info(\"AddressWidgetAPI::fetch:endpoint=\" + endpoint + \" init=\", init);\n    request = new Request(url, init);\n    return fetch(request).then(function(response) {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n      return response;\n    }).then(function(response) {\n      return response.json();\n    }).catch(function(response) {\n      on_api_error(response);\n      return response;\n    });\n  }\n\n  fetch_subdivisions(parent) {\n    let url = `geo_subdivisions`\n    console.debug(\"AddressWidgetAPI::fetch_subdivisions:url=\", url);\n    let options = {\n      method: \"POST\",\n      data: {\n        \"parent\": parent,\n      }\n    }\n    return this.get_json(url, options)\n  }\n\n  /*\n   * Get the plone.protect CSRF token\n   */\n  get_csrf_token() {\n    return document.querySelector(\"#protect-script\").dataset.token;\n  };\n\n}\n\nexport default AddressWidgetAPI;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass LocationSelector extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render_options() {\n    let options = [];\n    let locations = this.props.locations;\n    options.push(\n      <option value=''></option>\n    );\n    if (Array.isArray(locations)) {\n      for (let location of locations) {\n        options.push(\n          <option value={location}>{location}</option>\n        )\n      }\n    }\n    return options;\n  }\n\n  render() {\n    return (\n      <select\n        id={this.props.id}\n        name={this.props.name}\n        value={this.props.value}\n        onChange={this.props.onChange}>\n        {this.render_options()}\n      </select>\n    );\n  }\n}\n\nexport default LocationSelector;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LocationSelector from \"./LocationSelector.js\";\n\n\nclass AddressField extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  is_location_selector() {\n    return Array.isArray(this.props.locations);\n  }\n\n  is_visible() {\n    let visible = true;\n    if (this.is_location_selector()) {\n      visible = this.props.locations.length > 0;\n    }\n    return visible;\n  }\n\n  render_element() {\n    if (this.is_location_selector()) {\n      return (\n        <LocationSelector\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          locations={this.props.locations}\n          onChange={this.props.onChange} />\n      )\n    } else {\n      return (\n        <input type=\"text\"\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          onChange={this.props.onChange} />\n      )\n    }\n  }\n\n  render() {\n    if (!this.is_visible()) {\n      return (\n        <input type=\"hidden\"\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value} />\n      )\n    }\n    return (\n      <div class=\"form-group form-row mb-2\">\n        <div class=\"col input-group input-group-sm\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\"\n              for={this.props.id}>\n              {this.props.label}\n            </label>\n          </div>\n          {this.render_element()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddressField;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AddressField from \"./AddressField.js\";\n\n\nclass Address extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: props.country,\n      subdivision1: props.subdivision1,\n      subdivision2: props.subdivision2,\n      city: props.city,\n      zip: props.zip,\n      address: props.address,\n      address_type: props.address_type,\n    }\n\n    // Event handlers\n    this.on_country_change = this.on_country_change.bind(this);\n    this.on_subdivision1_change = this.on_subdivision1_change.bind(this);\n    this.on_subdivision2_change = this.on_subdivision2_change.bind(this);\n    this.on_city_change = this.on_city_change.bind(this);\n    this.on_zip_change = this.on_zip_change.bind(this);\n    this.on_address_change = this.on_address_change.bind(this);\n  }\n\n  force_array(value) {\n    if (!Array.isArray(value)) {\n      value = [];\n    }\n    return value;\n  }\n\n  /**\n   * Returns the list of first-level subdivisions of the current country,\n   * sorted alphabetically\n   */\n  get_subdivisions1() {\n    let country = this.state.country;\n    return this.force_array(this.props.subdivisions1[country]);\n  }\n\n  /**\n   * Returns the list of subdivisions of the current first-level subdivision,\n   * sorted sorted alphabetically\n   */\n  get_subdivisions2() {\n    let subdivision1 = this.state.subdivision1;\n    return this.force_array(this.props.subdivisions2[subdivision1]);\n  }\n\n  get_label(key) {\n    let country = this.state.country;\n    let label = this.props.labels[country];\n    if (label != null && label.constructor == Object && key in label) {\n      label = label[key];\n    } else {\n      label = this.props.labels[key];\n    }\n    return label;\n  }\n\n  /** Event triggered when the value for Country selector changes. Updates the\n   * selector of subdivisions (e.g. states) with the list of top-level\n   * subdivisions for the selected country\n   */\n  on_country_change(event) {\n    let value = event.currentTarget.value;\n    console.debug(`Address::on_country_change: ${value}`);\n    if (this.props.on_country_change) {\n      this.props.on_country_change(value);\n    }\n    this.setState({\n      country: value,\n      subdivision1: \"\",\n      subdivision2: \"\",\n    });\n  }\n\n  /** Event triggered when the value for the Country first-level subdivision\n   * (e.g. state) selector changes. Updates the selector of subdivisions (e.g.\n   * districts) for the selected subdivision and country\n   */\n  on_subdivision1_change(event) {\n    let value = event.currentTarget.value;\n    console.debug(`Address::on_subdivision1_change: ${value}`);\n    if (this.props.on_subdivision1_change) {\n      let country = this.state.country\n      this.props.on_subdivision1_change(country, value);\n    }\n    this.setState({\n      subdivision1: value,\n      subdivision2: \"\",\n    });\n  }\n\n  /** Event triggered when the value for the second-level subdivision (e.g.\n   * district) selector changes\n   */\n  on_subdivision2_change(event) {\n    let value = event.currentTarget.value;\n    console.debug(`Address::on_subdivision2_change: ${value}`);\n    if (this.props.on_subdivision2_change) {\n      this.props.on_subdivision2_change(value);\n    }\n    this.setState({subdivision2: value});\n  }\n\n  /** Event triggered when the value for the address field changes\n   */\n  on_address_change(event) {\n    let value = event.currentTarget.value;\n    this.setState({address: value});\n  }\n\n  /** Event triggered when the value for the zip field changes\n   */\n  on_zip_change(event) {\n    let value = event.currentTarget.value;\n    this.setState({zip: value});\n  }\n\n  /** Event triggered when the value for the city field changes\n   */\n  on_city_change(event) {\n    let value = event.currentTarget.value;\n    this.setState({city: value});\n  }\n\n  get_input_id(subfield) {\n    let id = this.props.id;\n    let index = this.props.index;\n    return `${id}-${index}-${subfield}`\n  }\n\n  get_input_name(subfield) {\n    let name = this.props.name;\n    let index = this.props.index;\n    return `${name}.${index}.${subfield}`\n  }\n\n  render() {\n    return (\n      <div>\n          <AddressField\n            id={this.get_input_id(\"country\")}\n            name={this.get_input_name(\"country\")}\n            label={this.props.labels.country}\n            value={this.state.country}\n            locations={this.props.countries}\n            onChange={this.on_country_change} />\n\n          <AddressField\n            id={this.get_input_id(\"subdivision1\")}\n            name={this.get_input_name(\"subdivision1\")}\n            label={this.get_label(\"subdivision1\")}\n            value={this.state.subdivision1}\n            locations={this.get_subdivisions1()}\n            onChange={this.on_subdivision1_change} />\n\n          <AddressField\n            id={this.get_input_id(\"subdivision2\")}\n            name={this.get_input_name(\"subdivision2\")}\n            label={this.get_label(\"subdivision2\")}\n            value={this.state.subdivision2}\n            locations={this.get_subdivisions2()}\n            onChange={this.on_subdivision2_change} />\n\n          <AddressField\n            id={this.get_input_id(\"city\")}\n            name={this.get_input_name(\"city\")}\n            label={this.props.labels.city}\n            value={this.state.city}\n            onChange={this.on_city_change} />\n\n          <AddressField\n            id={this.get_input_id(\"zip\")}\n            name={this.get_input_name(\"zip\")}\n            label={this.props.labels.zip}\n            value={this.state.zip}\n            onChange={this.on_zip_change} />\n\n          <AddressField\n            id={this.get_input_id(\"address\")}\n            name={this.get_input_name(\"address\")}\n            label={this.props.labels.address}\n            value={this.state.address}\n            onChange={this.on_address_change} />\n\n          <input type=\"hidden\"\n            id={this.get_input_id(\"type\")}\n            name={this.get_input_name(\"type\")}\n            value={this.state.address_type} />\n\n      </div>\n    );\n  }\n\n}\n\nexport default Address;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport AddressWidgetAPI from \"./api.js\"\nimport Address from \"./components/Address.js\"\n\n\nclass AddressWidgetController extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Root input HTML element\n    let el = props.root_el;\n\n    this.state = {};\n\n    // Data keys located at the root element\n    // -> initial values are set from the widget class\n    const data_keys = [\n      \"id\",\n      \"name\",\n      \"items\",\n      \"portal_url\",\n      \"labels\",\n      \"countries\",\n      \"subdivisions1\",\n      \"subdivisions2\",\n    ];\n\n    // Query data keys and set state with parsed JSON value\n    for (let key of data_keys) {\n      let value = el.dataset[key];\n      this.state[key] = this.parse_json(value);\n    }\n\n    // Initialize communication API with the API URL\n    this.api = new AddressWidgetAPI({\n      portal_url: this.state.portal_url,\n    });\n\n    // Bind callbacks to current context\n    this.on_country_change = this.on_country_change.bind(this);\n    this.on_subdivision1_change = this.on_subdivision1_change.bind(this);\n\n    return this;\n  }\n\n  parse_json(value) {\n    try {\n      return JSON.parse(value);\n    } catch (error) {\n      console.error(`Could not parse \"${value}\" to JSON`);\n    }\n  }\n\n  /**\n   * Event triggered when the user selects a country. Function fetches and\n   * updates the geo mapping with the first level subdivisions for the selected\n   * country if are not up-to-date yet. It also updates the label for the first\n   * level subdivision in accordance.\n   */\n  on_country_change(country) {\n    console.debug(`widget::on_country_change: ${country}`);\n    let self = this;\n    let promise = this.api.fetch_subdivisions(country);\n    promise.then(function(data){\n\n      // Update the label with the type of 1st-level subdivisions\n      let labels = {...self.state.labels};\n      if (data.length > 0) {\n        labels[country][\"subdivision1\"] = data[0].type;\n      }\n\n      // Create a copy instead of modifying the existing dict from state var\n      let subdivisions = {...self.state.subdivisions1};\n\n      // Only interested in names, sorted alphabetically\n      subdivisions[country] = data.map((x) => x.name).sort();\n\n      // Update current state with the changes\n      self.setState({\n        subdivisions1: subdivisions,\n        labels: labels,\n      });\n    });\n    return promise;\n  }\n\n  /**\n   * Event triggered when the user selects a first-level subdivision of a\n   * country. Function fetches and updates the geo mapping with the second level\n   * subdivisions for the selected subdivision if are not up-to-date. It also\n   * updates the label for the second level subdivision in accordance.\n   */\n  on_subdivision1_change(country, subdivision) {\n    console.debug(`widget::on_subdivision1_change: ${country}, ${subdivision}`);\n    let self = this;\n    let promise = this.api.fetch_subdivisions(subdivision);\n    promise.then(function(data){\n\n      // Update the label with the type of 1st-level subdivisions\n      let labels = {...self.state.labels};\n      if (data.length > 0) {\n        labels[country][\"subdivision2\"] = data[0].type;\n      }\n\n      // Create a copy instead of modifying the existing dict from state var\n      let subdivisions = {...self.state.subdivisions2};\n\n      // Only interested in names, sorted alphabetically\n      subdivisions[subdivision] = data.map((x) => x.name).sort();\n\n      // Update current state with the changes\n      self.setState({\n        subdivisions2: subdivisions,\n        labels: labels,\n      });\n    });\n    return promise;\n  }\n\n  render_items() {\n    let html_items = [];\n    let items = this.state.items;\n    for (const [index, item] of items.entries()) {\n      let section_title = \"\";\n      if (items.length > 1) {\n        // Only render the title if more than one address\n        section_title = (\n          <strong>{this.state.labels[item.type]}</strong>\n        )\n      }\n\n      html_items.push(\n        <div class=\"mb-2 pt-2\">\n          {section_title}\n          <Address\n            id={this.state.id}\n            name={this.state.name}\n            index={index}\n            address_type={item.type}\n            country={item.country}\n            subdivision1={item.subdivision1}\n            subdivision2={item.subdivision2}\n            city={item.city}\n            zip={item.zip}\n            address={item.address}\n            labels={this.state.labels}\n            countries={this.state.countries}\n            subdivisions1={this.state.subdivisions1}\n            subdivisions2={this.state.subdivisions2}\n            on_country_change={this.on_country_change}\n            on_subdivision1_change={this.on_subdivision1_change}\n          />\n        </div>\n      );\n    }\n    return html_items;\n  }\n\n  render() {\n    return (\n        <div className=\"addresswidget\">\n          {this.render_items()}\n        </div>\n    );\n  }\n}\n\nexport default AddressWidgetController;\n","import UIDReferenceWidgetController from \"./widgets/uidreferencewidget/widget.js\"\nimport AddressWidgetController from \"./widgets/addresswidget/widget.js\"\nimport intlTelInput from \"intl-tel-input\";\nimport \"intl-tel-input/build/css/intlTelInput.css\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.info(\"*** SENAITE CORE WIDGETS JS LOADED ***\");\n\n  // Widgets\n  window.widgets = {};\n\n  // TinyMCE\n  let wysiwig_elements = [\n    \"textarea.mce_editable\",\n    \"div.ArchetypesRichWidget textarea\",\n    \"textarea[name='form.widgets.IRichTextBehavior.text']\",\n    \"textarea.richTextWidget\",\n  ]\n  tinymce.init({\n    height: 300,\n    paste_data_images: true,\n    selector: wysiwig_elements.join(\",\"),\n    plugins: [\"paste\", \"link\", \"fullscreen\", \"table\", \"code\"],\n    // NOTE: CSS file must match configuration of entry point in webpack.config.js\n    content_css : \"/++plone++senaite.core.static/bundles/senaite.core.css\",\n  })\n\n  // Referencewidget\n  var ref_widgets = document.getElementsByClassName(\"senaite-uidreference-widget-input\");\n  for (let widget of ref_widgets) {\n    let id = widget.dataset.id;\n    let controller = ReactDOM.render(<UIDReferenceWidgetController root_el={widget} />, widget);\n    window.widgets[id] = controller;\n  }\n\n  // AddressWidget\n  var address_widgets = document.getElementsByClassName(\"senaite-address-widget-input\");\n  for (let widget of address_widgets) {\n    let id = widget.dataset.id;\n    let controller = ReactDOM.render(<AddressWidgetController root_el={widget} />, widget);\n    window.widgets[id] = controller;\n  }\n\n  // PhoneWidget\n  // https://github.com/jackocnr/intl-tel-input#readme\n  let phone_widgets = document.getElementsByClassName(\"senaite-phone-widget-input\");\n  let error_codes = [\"Invalid number\", \"Invalid country code\", \"Too short\", \"Too long\", \"Invalid number\"];\n  let init_phone_input = (el) => {\n    let id = el.dataset.intlTelInputId;\n    let initial_country = el.dataset.initial_country;\n    let preferred_countries = JSON.parse(el.dataset.preferred_countries);\n    let iti = intlTelInput(el, {\n      initialCountry: initial_country,\n      preferredCountries: preferred_countries,\n      // avoid that the dropdown is cropped in records widget\n      dropdownContainer: document.body,\n      // https://github.com/jackocnr/intl-tel-input#utilities-script\n      utilsScript: \"++plone++senaite.core.static/modules/intl-tel-input/js/utils.js\"\n    });\n    // add event handler only once\n    if (id === undefined) {\n      el.addEventListener(\"blur\", () => {\n        // validation\n        let valid = iti.isValidNumber();\n        let number = iti.getNumber();\n        let field = el.closest(\".field\");\n        if (valid) {\n          field.classList.remove(\"error\");\n          field.title = \"\";\n        } else {\n          field.classList.add(\"error\");\n          let error_code = iti.getValidationError();\n          let error_msg = error_codes[error_code];\n          field.title = error_msg;\n        }\n        // always set the number (even if validation failed!)\n        let name = el.dataset.name;\n        let hidden = document.querySelector(\"input[name='\" + name + \"']\");\n        hidden.value = number;\n      });\n    }\n  }\n  // initialize all phone widgets\n  for (let widget of phone_widgets) {\n    init_phone_input(widget);\n  }\n  // dynamically initialize new phone widgets when used in datagrid fields\n  document.body.addEventListener(\"datagrid:row_added\", (event) => {\n    let row = event.detail.row;\n    let input = row.querySelector(\".senaite-phone-widget-input\");\n    if(input) {\n      init_phone_input(input);\n    }\n  });\n\n});\n"],"names":["ReferenceWidgetAPI","props","console","debug","api_url","on_api_error","response","endpoint","location","search","options","data","init","method","request","url","JSON","stringify","get_api_url","headers","get_csrf_token","body","credentials","info","Request","fetch","then","ok","Promise","reject","json","catalog","query","params","key","value","Array","isArray","forEach","item","depth","Object","entries","get_json","document","querySelector","dataset","token","React","ReactDOM","ReferenceField","state","input_field_ref","createRef","on_focus","bind","on_blur","on_change","on_keydown","on_keypress","on_clear_click","on_search_click","current","event","get_search_value","preventDefault","on_search","which","on_clear","on_arrow_key","on_enter","name","className","disabled","placeholder","maxWidth","Component","ReferenceResults","on_select","on_page","on_prev_page","on_next_page","on_close","columns","get_columns","map","column","label","results","get_results","length","minWidth","width","backgroundColor","zIndex","result","uid","uids","indexOf","title","align","push","_t","rows","index","get_result_uid","focused","build_columns","searchterm","get_column_names","highlighted","highlight","__html","used","text","rx","RegExp","replaceAll","m","error","pages","total","page","padding","first_page","last_page","crop_before","crop_after","cls","join","next_url","prev_url","target","currentTarget","getAttribute","warn","has_results","get_style","position","top","right","build_close_button","build_header_columns","build_rows","build_prev_button","build_pages","build_next_button","References","on_deselect","template","context","replace","display_template","records","interpolate","items","selected_uids","get_selected_uids","render_display_template","build_selected_items","UIDReferenceWidgetController","loading","count","b_start","el","root_el","data_keys","undefined","parse_json","api","goto_page","clear_results","select","select_focused","deselect","navigate_results","on_click","window","widget","addEventListener","removeEventListener","parse","readonly","multi_valued","assign","q","limit","complete","url_params","self","make_query","toggle_loading","promise","set_results_data","fetch_results","parseInt","concat","setState","at","pos","splice","direction","toggle","next","previous","keyCode","contains","is_disabled","AddressWidgetAPI","portal_url","get_url","parent","LocationSelector","locations","id","onChange","render_options","AddressField","visible","is_location_selector","is_visible","render_element","Address","country","subdivision1","subdivision2","city","zip","address","address_type","on_country_change","on_subdivision1_change","on_subdivision2_change","on_city_change","on_zip_change","on_address_change","force_array","subdivisions1","subdivisions2","labels","constructor","subfield","get_input_id","get_input_name","countries","get_label","get_subdivisions1","get_subdivisions2","AddressWidgetController","fetch_subdivisions","type","subdivisions","x","sort","subdivision","html_items","section_title","render_items","intlTelInput","widgets","wysiwig_elements","tinymce","height","paste_data_images","selector","plugins","content_css","ref_widgets","getElementsByClassName","controller","render","address_widgets","phone_widgets","error_codes","init_phone_input","intlTelInputId","initial_country","preferred_countries","iti","initialCountry","preferredCountries","dropdownContainer","utilsScript","valid","isValidNumber","number","getNumber","field","closest","classList","remove","add","error_code","getValidationError","error_msg","hidden","row","detail","input"],"sourceRoot":""}