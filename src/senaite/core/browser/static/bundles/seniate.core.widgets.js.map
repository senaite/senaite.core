{"version":3,"file":"seniate.core.widgets.js","mappings":"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","sources":["webpack:///../node_modules/intl-tel-input/build/js/intlTelInput.js","webpack:///../node_modules/intl-tel-input/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///external var \"React\"","webpack:///external var \"ReactDOM\"","webpack:///./widgets/uidreferencewidget/api.js","webpack:///./widgets/uidreferencewidget/components/ReferenceField.js","webpack:///./widgets/uidreferencewidget/components/ReferenceResults.js","webpack:///./widgets/uidreferencewidget/components/References.js","webpack:///./widgets/uidreferencewidget/widget.js","webpack:///./widgets/addresswidget/api.js","webpack:///./widgets/addresswidget/components/LocationSelector.js","webpack:///./widgets/addresswidget/components/AddressField.js","webpack:///./widgets/addresswidget/components/Address.js","webpack:///./widgets/addresswidget/widget.js","webpack:///./senaite.core.widgets.js"],"sourcesContent":["/*\n * International Telephone Input v17.0.19\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function(factory) {\n    if (typeof module === \"object\" && module.exports) module.exports = factory(); else window.intlTelInput = factory();\n})(function(undefined) {\n    \"use strict\";\n    return function() {\n        // Array of country objects for the flag dropdown.\n        // Here is the criteria for the plugin to support a given country/territory\n        // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n        // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n        // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n        // Each country array has the following information:\n        // [\n        //    Country name,\n        //    iso2 code,\n        //    International dial code,\n        //    Order (if >1 country with same dial code),\n        //    Area codes\n        // ]\n        var allCountries = [ [ \"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\" ], [ \"Albania (Shqipëri)\", \"al\", \"355\" ], [ \"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\" ], [ \"American Samoa\", \"as\", \"1\", 5, [ \"684\" ] ], [ \"Andorra\", \"ad\", \"376\" ], [ \"Angola\", \"ao\", \"244\" ], [ \"Anguilla\", \"ai\", \"1\", 6, [ \"264\" ] ], [ \"Antigua and Barbuda\", \"ag\", \"1\", 7, [ \"268\" ] ], [ \"Argentina\", \"ar\", \"54\" ], [ \"Armenia (Հայաստան)\", \"am\", \"374\" ], [ \"Aruba\", \"aw\", \"297\" ], [ \"Ascension Island\", \"ac\", \"247\" ], [ \"Australia\", \"au\", \"61\", 0 ], [ \"Austria (Österreich)\", \"at\", \"43\" ], [ \"Azerbaijan (Azərbaycan)\", \"az\", \"994\" ], [ \"Bahamas\", \"bs\", \"1\", 8, [ \"242\" ] ], [ \"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\" ], [ \"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\" ], [ \"Barbados\", \"bb\", \"1\", 9, [ \"246\" ] ], [ \"Belarus (Беларусь)\", \"by\", \"375\" ], [ \"Belgium (België)\", \"be\", \"32\" ], [ \"Belize\", \"bz\", \"501\" ], [ \"Benin (Bénin)\", \"bj\", \"229\" ], [ \"Bermuda\", \"bm\", \"1\", 10, [ \"441\" ] ], [ \"Bhutan (འབྲུག)\", \"bt\", \"975\" ], [ \"Bolivia\", \"bo\", \"591\" ], [ \"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\" ], [ \"Botswana\", \"bw\", \"267\" ], [ \"Brazil (Brasil)\", \"br\", \"55\" ], [ \"British Indian Ocean Territory\", \"io\", \"246\" ], [ \"British Virgin Islands\", \"vg\", \"1\", 11, [ \"284\" ] ], [ \"Brunei\", \"bn\", \"673\" ], [ \"Bulgaria (България)\", \"bg\", \"359\" ], [ \"Burkina Faso\", \"bf\", \"226\" ], [ \"Burundi (Uburundi)\", \"bi\", \"257\" ], [ \"Cambodia (កម្ពុជា)\", \"kh\", \"855\" ], [ \"Cameroon (Cameroun)\", \"cm\", \"237\" ], [ \"Canada\", \"ca\", \"1\", 1, [ \"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\" ] ], [ \"Cape Verde (Kabu Verdi)\", \"cv\", \"238\" ], [ \"Caribbean Netherlands\", \"bq\", \"599\", 1, [ \"3\", \"4\", \"7\" ] ], [ \"Cayman Islands\", \"ky\", \"1\", 12, [ \"345\" ] ], [ \"Central African Republic (République centrafricaine)\", \"cf\", \"236\" ], [ \"Chad (Tchad)\", \"td\", \"235\" ], [ \"Chile\", \"cl\", \"56\" ], [ \"China (中国)\", \"cn\", \"86\" ], [ \"Christmas Island\", \"cx\", \"61\", 2, [ \"89164\" ] ], [ \"Cocos (Keeling) Islands\", \"cc\", \"61\", 1, [ \"89162\" ] ], [ \"Colombia\", \"co\", \"57\" ], [ \"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\" ], [ \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\" ], [ \"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\" ], [ \"Cook Islands\", \"ck\", \"682\" ], [ \"Costa Rica\", \"cr\", \"506\" ], [ \"Côte d’Ivoire\", \"ci\", \"225\" ], [ \"Croatia (Hrvatska)\", \"hr\", \"385\" ], [ \"Cuba\", \"cu\", \"53\" ], [ \"Curaçao\", \"cw\", \"599\", 0 ], [ \"Cyprus (Κύπρος)\", \"cy\", \"357\" ], [ \"Czech Republic (Česká republika)\", \"cz\", \"420\" ], [ \"Denmark (Danmark)\", \"dk\", \"45\" ], [ \"Djibouti\", \"dj\", \"253\" ], [ \"Dominica\", \"dm\", \"1\", 13, [ \"767\" ] ], [ \"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [ \"809\", \"829\", \"849\" ] ], [ \"Ecuador\", \"ec\", \"593\" ], [ \"Egypt (‫مصر‬‎)\", \"eg\", \"20\" ], [ \"El Salvador\", \"sv\", \"503\" ], [ \"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\" ], [ \"Eritrea\", \"er\", \"291\" ], [ \"Estonia (Eesti)\", \"ee\", \"372\" ], [ \"Eswatini\", \"sz\", \"268\" ], [ \"Ethiopia\", \"et\", \"251\" ], [ \"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\" ], [ \"Faroe Islands (Føroyar)\", \"fo\", \"298\" ], [ \"Fiji\", \"fj\", \"679\" ], [ \"Finland (Suomi)\", \"fi\", \"358\", 0 ], [ \"France\", \"fr\", \"33\" ], [ \"French Guiana (Guyane française)\", \"gf\", \"594\" ], [ \"French Polynesia (Polynésie française)\", \"pf\", \"689\" ], [ \"Gabon\", \"ga\", \"241\" ], [ \"Gambia\", \"gm\", \"220\" ], [ \"Georgia (საქართველო)\", \"ge\", \"995\" ], [ \"Germany (Deutschland)\", \"de\", \"49\" ], [ \"Ghana (Gaana)\", \"gh\", \"233\" ], [ \"Gibraltar\", \"gi\", \"350\" ], [ \"Greece (Ελλάδα)\", \"gr\", \"30\" ], [ \"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\" ], [ \"Grenada\", \"gd\", \"1\", 14, [ \"473\" ] ], [ \"Guadeloupe\", \"gp\", \"590\", 0 ], [ \"Guam\", \"gu\", \"1\", 15, [ \"671\" ] ], [ \"Guatemala\", \"gt\", \"502\" ], [ \"Guernsey\", \"gg\", \"44\", 1, [ \"1481\", \"7781\", \"7839\", \"7911\" ] ], [ \"Guinea (Guinée)\", \"gn\", \"224\" ], [ \"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\" ], [ \"Guyana\", \"gy\", \"592\" ], [ \"Haiti\", \"ht\", \"509\" ], [ \"Honduras\", \"hn\", \"504\" ], [ \"Hong Kong (香港)\", \"hk\", \"852\" ], [ \"Hungary (Magyarország)\", \"hu\", \"36\" ], [ \"Iceland (Ísland)\", \"is\", \"354\" ], [ \"India (भारत)\", \"in\", \"91\" ], [ \"Indonesia\", \"id\", \"62\" ], [ \"Iran (‫ایران‬‎)\", \"ir\", \"98\" ], [ \"Iraq (‫العراق‬‎)\", \"iq\", \"964\" ], [ \"Ireland\", \"ie\", \"353\" ], [ \"Isle of Man\", \"im\", \"44\", 2, [ \"1624\", \"74576\", \"7524\", \"7924\", \"7624\" ] ], [ \"Israel (‫ישראל‬‎)\", \"il\", \"972\" ], [ \"Italy (Italia)\", \"it\", \"39\", 0 ], [ \"Jamaica\", \"jm\", \"1\", 4, [ \"876\", \"658\" ] ], [ \"Japan (日本)\", \"jp\", \"81\" ], [ \"Jersey\", \"je\", \"44\", 3, [ \"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\" ] ], [ \"Jordan (‫الأردن‬‎)\", \"jo\", \"962\" ], [ \"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [ \"33\", \"7\" ] ], [ \"Kenya\", \"ke\", \"254\" ], [ \"Kiribati\", \"ki\", \"686\" ], [ \"Kosovo\", \"xk\", \"383\" ], [ \"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\" ], [ \"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\" ], [ \"Laos (ລາວ)\", \"la\", \"856\" ], [ \"Latvia (Latvija)\", \"lv\", \"371\" ], [ \"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\" ], [ \"Lesotho\", \"ls\", \"266\" ], [ \"Liberia\", \"lr\", \"231\" ], [ \"Libya (‫ليبيا‬‎)\", \"ly\", \"218\" ], [ \"Liechtenstein\", \"li\", \"423\" ], [ \"Lithuania (Lietuva)\", \"lt\", \"370\" ], [ \"Luxembourg\", \"lu\", \"352\" ], [ \"Macau (澳門)\", \"mo\", \"853\" ], [ \"North Macedonia (Македонија)\", \"mk\", \"389\" ], [ \"Madagascar (Madagasikara)\", \"mg\", \"261\" ], [ \"Malawi\", \"mw\", \"265\" ], [ \"Malaysia\", \"my\", \"60\" ], [ \"Maldives\", \"mv\", \"960\" ], [ \"Mali\", \"ml\", \"223\" ], [ \"Malta\", \"mt\", \"356\" ], [ \"Marshall Islands\", \"mh\", \"692\" ], [ \"Martinique\", \"mq\", \"596\" ], [ \"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\" ], [ \"Mauritius (Moris)\", \"mu\", \"230\" ], [ \"Mayotte\", \"yt\", \"262\", 1, [ \"269\", \"639\" ] ], [ \"Mexico (México)\", \"mx\", \"52\" ], [ \"Micronesia\", \"fm\", \"691\" ], [ \"Moldova (Republica Moldova)\", \"md\", \"373\" ], [ \"Monaco\", \"mc\", \"377\" ], [ \"Mongolia (Монгол)\", \"mn\", \"976\" ], [ \"Montenegro (Crna Gora)\", \"me\", \"382\" ], [ \"Montserrat\", \"ms\", \"1\", 16, [ \"664\" ] ], [ \"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0 ], [ \"Mozambique (Moçambique)\", \"mz\", \"258\" ], [ \"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\" ], [ \"Namibia (Namibië)\", \"na\", \"264\" ], [ \"Nauru\", \"nr\", \"674\" ], [ \"Nepal (नेपाल)\", \"np\", \"977\" ], [ \"Netherlands (Nederland)\", \"nl\", \"31\" ], [ \"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\" ], [ \"New Zealand\", \"nz\", \"64\" ], [ \"Nicaragua\", \"ni\", \"505\" ], [ \"Niger (Nijar)\", \"ne\", \"227\" ], [ \"Nigeria\", \"ng\", \"234\" ], [ \"Niue\", \"nu\", \"683\" ], [ \"Norfolk Island\", \"nf\", \"672\" ], [ \"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\" ], [ \"Northern Mariana Islands\", \"mp\", \"1\", 17, [ \"670\" ] ], [ \"Norway (Norge)\", \"no\", \"47\", 0 ], [ \"Oman (‫عُمان‬‎)\", \"om\", \"968\" ], [ \"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\" ], [ \"Palau\", \"pw\", \"680\" ], [ \"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\" ], [ \"Panama (Panamá)\", \"pa\", \"507\" ], [ \"Papua New Guinea\", \"pg\", \"675\" ], [ \"Paraguay\", \"py\", \"595\" ], [ \"Peru (Perú)\", \"pe\", \"51\" ], [ \"Philippines\", \"ph\", \"63\" ], [ \"Poland (Polska)\", \"pl\", \"48\" ], [ \"Portugal\", \"pt\", \"351\" ], [ \"Puerto Rico\", \"pr\", \"1\", 3, [ \"787\", \"939\" ] ], [ \"Qatar (‫قطر‬‎)\", \"qa\", \"974\" ], [ \"Réunion (La Réunion)\", \"re\", \"262\", 0 ], [ \"Romania (România)\", \"ro\", \"40\" ], [ \"Russia (Россия)\", \"ru\", \"7\", 0 ], [ \"Rwanda\", \"rw\", \"250\" ], [ \"Saint Barthélemy\", \"bl\", \"590\", 1 ], [ \"Saint Helena\", \"sh\", \"290\" ], [ \"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [ \"869\" ] ], [ \"Saint Lucia\", \"lc\", \"1\", 19, [ \"758\" ] ], [ \"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2 ], [ \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\" ], [ \"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [ \"784\" ] ], [ \"Samoa\", \"ws\", \"685\" ], [ \"San Marino\", \"sm\", \"378\" ], [ \"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\" ], [ \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\" ], [ \"Senegal (Sénégal)\", \"sn\", \"221\" ], [ \"Serbia (Србија)\", \"rs\", \"381\" ], [ \"Seychelles\", \"sc\", \"248\" ], [ \"Sierra Leone\", \"sl\", \"232\" ], [ \"Singapore\", \"sg\", \"65\" ], [ \"Sint Maarten\", \"sx\", \"1\", 21, [ \"721\" ] ], [ \"Slovakia (Slovensko)\", \"sk\", \"421\" ], [ \"Slovenia (Slovenija)\", \"si\", \"386\" ], [ \"Solomon Islands\", \"sb\", \"677\" ], [ \"Somalia (Soomaaliya)\", \"so\", \"252\" ], [ \"South Africa\", \"za\", \"27\" ], [ \"South Korea (대한민국)\", \"kr\", \"82\" ], [ \"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\" ], [ \"Spain (España)\", \"es\", \"34\" ], [ \"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\" ], [ \"Sudan (‫السودان‬‎)\", \"sd\", \"249\" ], [ \"Suriname\", \"sr\", \"597\" ], [ \"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [ \"79\" ] ], [ \"Sweden (Sverige)\", \"se\", \"46\" ], [ \"Switzerland (Schweiz)\", \"ch\", \"41\" ], [ \"Syria (‫سوريا‬‎)\", \"sy\", \"963\" ], [ \"Taiwan (台灣)\", \"tw\", \"886\" ], [ \"Tajikistan\", \"tj\", \"992\" ], [ \"Tanzania\", \"tz\", \"255\" ], [ \"Thailand (ไทย)\", \"th\", \"66\" ], [ \"Timor-Leste\", \"tl\", \"670\" ], [ \"Togo\", \"tg\", \"228\" ], [ \"Tokelau\", \"tk\", \"690\" ], [ \"Tonga\", \"to\", \"676\" ], [ \"Trinidad and Tobago\", \"tt\", \"1\", 22, [ \"868\" ] ], [ \"Tunisia (‫تونس‬‎)\", \"tn\", \"216\" ], [ \"Turkey (Türkiye)\", \"tr\", \"90\" ], [ \"Turkmenistan\", \"tm\", \"993\" ], [ \"Turks and Caicos Islands\", \"tc\", \"1\", 23, [ \"649\" ] ], [ \"Tuvalu\", \"tv\", \"688\" ], [ \"U.S. Virgin Islands\", \"vi\", \"1\", 24, [ \"340\" ] ], [ \"Uganda\", \"ug\", \"256\" ], [ \"Ukraine (Україна)\", \"ua\", \"380\" ], [ \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\" ], [ \"United Kingdom\", \"gb\", \"44\", 0 ], [ \"United States\", \"us\", \"1\", 0 ], [ \"Uruguay\", \"uy\", \"598\" ], [ \"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\" ], [ \"Vanuatu\", \"vu\", \"678\" ], [ \"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [ \"06698\" ] ], [ \"Venezuela\", \"ve\", \"58\" ], [ \"Vietnam (Việt Nam)\", \"vn\", \"84\" ], [ \"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\" ], [ \"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [ \"5288\", \"5289\" ] ], [ \"Yemen (‫اليمن‬‎)\", \"ye\", \"967\" ], [ \"Zambia\", \"zm\", \"260\" ], [ \"Zimbabwe\", \"zw\", \"263\" ], [ \"Åland Islands\", \"ax\", \"358\", 1, [ \"18\" ] ] ];\n        // loop over all of the countries above, restructuring the data to be objects with named keys\n        for (var i = 0; i < allCountries.length; i++) {\n            var c = allCountries[i];\n            allCountries[i] = {\n                name: c[0],\n                iso2: c[1],\n                dialCode: c[2],\n                priority: c[3] || 0,\n                areaCodes: c[4] || null\n            };\n        }\n        \"use strict\";\n        function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new TypeError(\"Cannot call a class as a function\");\n            }\n        }\n        function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n        }\n        var intlTelInputGlobals = {\n            getInstance: function getInstance(input) {\n                var id = input.getAttribute(\"data-intl-tel-input-id\");\n                return window.intlTelInputGlobals.instances[id];\n            },\n            instances: {},\n            // using a global like this allows us to mock it in the tests\n            documentReady: function documentReady() {\n                return document.readyState === \"complete\";\n            }\n        };\n        if (typeof window === \"object\") window.intlTelInputGlobals = intlTelInputGlobals;\n        // these vars persist through all instances of the plugin\n        var id = 0;\n        var defaults = {\n            // whether or not to allow the dropdown\n            allowDropdown: true,\n            // if there is just a dial code in the input: remove it on blur\n            autoHideDialCode: true,\n            // add a placeholder in the input with an example number for the selected country\n            autoPlaceholder: \"polite\",\n            // modify the parentClass\n            customContainer: \"\",\n            // modify the auto placeholder\n            customPlaceholder: null,\n            // append menu to specified element\n            dropdownContainer: null,\n            // don't display these countries\n            excludeCountries: [],\n            // format the input value during initialisation and on setNumber\n            formatOnDisplay: true,\n            // geoIp lookup function\n            geoIpLookup: null,\n            // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n            hiddenInput: \"\",\n            // initial country\n            initialCountry: \"\",\n            // localized country names e.g. { 'de': 'Deutschland' }\n            localizedCountries: null,\n            // don't insert international dial codes\n            nationalMode: true,\n            // display only these countries\n            onlyCountries: [],\n            // number type to use for placeholders\n            placeholderNumberType: \"MOBILE\",\n            // the countries at the top of the list. defaults to united states and united kingdom\n            preferredCountries: [ \"us\", \"gb\" ],\n            // display the country dial code next to the selected flag so it's not part of the typed number\n            separateDialCode: false,\n            // specify the path to the libphonenumber script to enable validation/formatting\n            utilsScript: \"\"\n        };\n        // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n        var regionlessNanpNumbers = [ \"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\" ];\n        // utility function to iterate over an object. can't use Object.entries or native forEach because\n        // of IE11\n        var forEachProp = function forEachProp(obj, callback) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                callback(keys[i], obj[keys[i]]);\n            }\n        };\n        // run a method on each instance of the plugin\n        var forEachInstance = function forEachInstance(method) {\n            forEachProp(window.intlTelInputGlobals.instances, function(key) {\n                window.intlTelInputGlobals.instances[key][method]();\n            });\n        };\n        // this is our plugin class that we will create an instance of\n        // eslint-disable-next-line no-unused-vars\n        var Iti = /*#__PURE__*/\n        function() {\n            function Iti(input, options) {\n                var _this = this;\n                _classCallCheck(this, Iti);\n                this.id = id++;\n                this.telInput = input;\n                this.activeItem = null;\n                this.highlightedItem = null;\n                // process specified options / defaults\n                // alternative to Object.assign, which isn't supported by IE11\n                var customOptions = options || {};\n                this.options = {};\n                forEachProp(defaults, function(key, value) {\n                    _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n                });\n                this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n            }\n            _createClass(Iti, [ {\n                key: \"_init\",\n                value: function _init() {\n                    var _this2 = this;\n                    // if in nationalMode, disable options relating to dial codes\n                    if (this.options.nationalMode) this.options.autoHideDialCode = false;\n                    // if separateDialCode then doesn't make sense to A) insert dial code into input\n                    // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n                    // dial code next to them)\n                    if (this.options.separateDialCode) {\n                        this.options.autoHideDialCode = this.options.nationalMode = false;\n                    }\n                    // we cannot just test screen size as some smartphones/website meta tags will report desktop\n                    // resolutions\n                    // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n                    // rest of these declarations\n                    // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n                    this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    if (this.isMobile) {\n                        // trigger the mobile dropdown css\n                        document.body.classList.add(\"iti-mobile\");\n                        // on mobile, we want a full screen dropdown, so we must append it to the body\n                        if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n                    }\n                    // these promises get resolved when their individual requests complete\n                    // this way the dev can do something like iti.promise.then(...) to know when all requests are\n                    // complete\n                    if (typeof Promise !== \"undefined\") {\n                        var autoCountryPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveAutoCountryPromise = resolve;\n                            _this2.rejectAutoCountryPromise = reject;\n                        });\n                        var utilsScriptPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveUtilsScriptPromise = resolve;\n                            _this2.rejectUtilsScriptPromise = reject;\n                        });\n                        this.promise = Promise.all([ autoCountryPromise, utilsScriptPromise ]);\n                    } else {\n                        // prevent errors when Promise doesn't exist\n                        this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {};\n                        this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {};\n                    }\n                    // in various situations there could be no country selected initially, but we need to be able\n                    // to assume this variable exists\n                    this.selectedCountryData = {};\n                    // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n                    this._processCountryData();\n                    // generate the markup\n                    this._generateMarkup();\n                    // set the initial state of the input value and the selected flag\n                    this._setInitialState();\n                    // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n                    this._initListeners();\n                    // utils script, and auto country\n                    this._initRequests();\n                }\n            }, {\n                key: \"_processCountryData\",\n                value: function _processCountryData() {\n                    // process onlyCountries or excludeCountries array if present\n                    this._processAllCountries();\n                    // process the countryCodes map\n                    this._processCountryCodes();\n                    // process the preferredCountries\n                    this._processPreferredCountries();\n                    // translate countries according to localizedCountries option\n                    if (this.options.localizedCountries) this._translateCountriesByLocale();\n                    // sort countries by name\n                    if (this.options.onlyCountries.length || this.options.localizedCountries) {\n                        this.countries.sort(this._countryNameSort);\n                    }\n                }\n            }, {\n                key: \"_addCountryCode\",\n                value: function _addCountryCode(iso2, countryCode, priority) {\n                    if (countryCode.length > this.countryCodeMaxLen) {\n                        this.countryCodeMaxLen = countryCode.length;\n                    }\n                    if (!this.countryCodes.hasOwnProperty(countryCode)) {\n                        this.countryCodes[countryCode] = [];\n                    }\n                    // bail if we already have this country for this countryCode\n                    for (var i = 0; i < this.countryCodes[countryCode].length; i++) {\n                        if (this.countryCodes[countryCode][i] === iso2) return;\n                    }\n                    // check for undefined as 0 is falsy\n                    var index = priority !== undefined ? priority : this.countryCodes[countryCode].length;\n                    this.countryCodes[countryCode][index] = iso2;\n                }\n            }, {\n                key: \"_processAllCountries\",\n                value: function _processAllCountries() {\n                    if (this.options.onlyCountries.length) {\n                        var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n                        });\n                    } else if (this.options.excludeCountries.length) {\n                        var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                        });\n                    } else {\n                        this.countries = allCountries;\n                    }\n                }\n            }, {\n                key: \"_translateCountriesByLocale\",\n                value: function _translateCountriesByLocale() {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var iso = this.countries[i].iso2.toLowerCase();\n                        if (this.options.localizedCountries.hasOwnProperty(iso)) {\n                            this.countries[i].name = this.options.localizedCountries[iso];\n                        }\n                    }\n                }\n            }, {\n                key: \"_countryNameSort\",\n                value: function _countryNameSort(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n            }, {\n                key: \"_processCountryCodes\",\n                value: function _processCountryCodes() {\n                    this.countryCodeMaxLen = 0;\n                    // here we store just dial codes\n                    this.dialCodes = {};\n                    // here we store \"country codes\" (both dial codes and their area codes)\n                    this.countryCodes = {};\n                    // first: add dial codes\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var c = this.countries[i];\n                        if (!this.dialCodes[c.dialCode]) this.dialCodes[c.dialCode] = true;\n                        this._addCountryCode(c.iso2, c.dialCode, c.priority);\n                    }\n                    // next: add area codes\n                    // this is a second loop over countries, to make sure we have all of the \"root\" countries\n                    // already in the map, so that we can access them, as each time we add an area code substring\n                    // to the map, we also need to include the \"root\" country's code, as that also matches\n                    for (var _i = 0; _i < this.countries.length; _i++) {\n                        var _c = this.countries[_i];\n                        // area codes\n                        if (_c.areaCodes) {\n                            var rootCountryCode = this.countryCodes[_c.dialCode][0];\n                            // for each area code\n                            for (var j = 0; j < _c.areaCodes.length; j++) {\n                                var areaCode = _c.areaCodes[j];\n                                // for each digit in the area code to add all partial matches as well\n                                for (var k = 1; k < areaCode.length; k++) {\n                                    var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                                    // start with the root country, as that also matches this dial code\n                                    this._addCountryCode(rootCountryCode, partialDialCode);\n                                    this._addCountryCode(_c.iso2, partialDialCode);\n                                }\n                                // add the full area code\n                                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: \"_processPreferredCountries\",\n                value: function _processPreferredCountries() {\n                    this.preferredCountries = [];\n                    for (var i = 0; i < this.options.preferredCountries.length; i++) {\n                        var countryCode = this.options.preferredCountries[i].toLowerCase();\n                        var countryData = this._getCountryData(countryCode, false, true);\n                        if (countryData) this.preferredCountries.push(countryData);\n                    }\n                }\n            }, {\n                key: \"_createEl\",\n                value: function _createEl(name, attrs, container) {\n                    var el = document.createElement(name);\n                    if (attrs) forEachProp(attrs, function(key, value) {\n                        return el.setAttribute(key, value);\n                    });\n                    if (container) container.appendChild(el);\n                    return el;\n                }\n            }, {\n                key: \"_generateMarkup\",\n                value: function _generateMarkup() {\n                    // if autocomplete does not exist on the element and its form, then\n                    // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n                    // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n                    // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n                    if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n                        this.telInput.setAttribute(\"autocomplete\", \"off\");\n                    }\n                    // containers (mostly for positioning)\n                    var parentClass = \"iti\";\n                    if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n                    if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n                    if (this.options.customContainer) {\n                        parentClass += \" \";\n                        parentClass += this.options.customContainer;\n                    }\n                    var wrapper = this._createEl(\"div\", {\n                        \"class\": parentClass\n                    });\n                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n                    this.flagsContainer = this._createEl(\"div\", {\n                        \"class\": \"iti__flag-container\"\n                    }, wrapper);\n                    wrapper.appendChild(this.telInput);\n                    // selected flag (displayed to left of input)\n                    this.selectedFlag = this._createEl(\"div\", {\n                        \"class\": \"iti__selected-flag\",\n                        role: \"combobox\",\n                        \"aria-controls\": \"iti-\".concat(this.id, \"__country-listbox\"),\n                        \"aria-owns\": \"iti-\".concat(this.id, \"__country-listbox\"),\n                        \"aria-expanded\": \"false\"\n                    }, this.flagsContainer);\n                    this.selectedFlagInner = this._createEl(\"div\", {\n                        \"class\": \"iti__flag\"\n                    }, this.selectedFlag);\n                    if (this.options.separateDialCode) {\n                        this.selectedDialCode = this._createEl(\"div\", {\n                            \"class\": \"iti__selected-dial-code\"\n                        }, this.selectedFlag);\n                    }\n                    if (this.options.allowDropdown) {\n                        // make element focusable and tab navigable\n                        this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n                        this.dropdownArrow = this._createEl(\"div\", {\n                            \"class\": \"iti__arrow\"\n                        }, this.selectedFlag);\n                        // country dropdown: preferred countries, then divider, then all countries\n                        this.countryList = this._createEl(\"ul\", {\n                            \"class\": \"iti__country-list iti__hide\",\n                            id: \"iti-\".concat(this.id, \"__country-listbox\"),\n                            role: \"listbox\",\n                            \"aria-label\": \"List of countries\"\n                        });\n                        if (this.preferredCountries.length) {\n                            this._appendListItems(this.preferredCountries, \"iti__preferred\", true);\n                            this._createEl(\"li\", {\n                                \"class\": \"iti__divider\",\n                                role: \"separator\",\n                                \"aria-disabled\": \"true\"\n                            }, this.countryList);\n                        }\n                        this._appendListItems(this.countries, \"iti__standard\");\n                        // create dropdownContainer markup\n                        if (this.options.dropdownContainer) {\n                            this.dropdown = this._createEl(\"div\", {\n                                \"class\": \"iti iti--container\"\n                            });\n                            this.dropdown.appendChild(this.countryList);\n                        } else {\n                            this.flagsContainer.appendChild(this.countryList);\n                        }\n                    }\n                    if (this.options.hiddenInput) {\n                        var hiddenInputName = this.options.hiddenInput;\n                        var name = this.telInput.getAttribute(\"name\");\n                        if (name) {\n                            var i = name.lastIndexOf(\"[\");\n                            // if input name contains square brackets, then give the hidden input the same name,\n                            // replacing the contents of the last set of brackets with the given hiddenInput name\n                            if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n                        }\n                        this.hiddenInput = this._createEl(\"input\", {\n                            type: \"hidden\",\n                            name: hiddenInputName\n                        });\n                        wrapper.appendChild(this.hiddenInput);\n                    }\n                }\n            }, {\n                key: \"_appendListItems\",\n                value: function _appendListItems(countries, className, preferred) {\n                    // we create so many DOM elements, it is faster to build a temp string\n                    // and then add everything to the DOM in one go at the end\n                    var tmp = \"\";\n                    // for each country\n                    for (var i = 0; i < countries.length; i++) {\n                        var c = countries[i];\n                        var idSuffix = preferred ? \"-preferred\" : \"\";\n                        // open the list item\n                        tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-\").concat(this.id, \"__item-\").concat(c.iso2).concat(idSuffix, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"' aria-selected='false'>\");\n                        // add the flag\n                        tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n                        // and the country name and dial code\n                        tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n                        tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n                        // close the list item\n                        tmp += \"</li>\";\n                    }\n                    this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n                }\n            }, {\n                key: \"_setInitialState\",\n                value: function _setInitialState() {\n                    // fix firefox bug: when first load page (with input with value set to number with intl dial\n                    // code) and initialising plugin removes the dial code from the input, then refresh page,\n                    // and we try to init plugin again but this time on number without dial code so get grey flag\n                    var attributeValue = this.telInput.getAttribute(\"value\");\n                    var inputValue = this.telInput.value;\n                    var useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n                    var val = useAttribute ? attributeValue : inputValue;\n                    var dialCode = this._getDialCode(val);\n                    var isRegionlessNanp = this._isRegionlessNanp(val);\n                    var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;\n                    // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n                    // flag, else fall back to the default country\n                    if (dialCode && !isRegionlessNanp) {\n                        this._updateFlagFromNumber(val);\n                    } else if (initialCountry !== \"auto\") {\n                        // see if we should select a flag\n                        if (initialCountry) {\n                            this._setFlag(initialCountry.toLowerCase());\n                        } else {\n                            if (dialCode && isRegionlessNanp) {\n                                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                                this._setFlag(\"us\");\n                            } else {\n                                // no dial code and no initialCountry, so default to first in list\n                                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                                if (!val) {\n                                    this._setFlag(this.defaultCountry);\n                                }\n                            }\n                        }\n                        // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n                        if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n                            this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n                        }\n                    }\n                    // NOTE: if initialCountry is set to auto, that will be handled separately\n                    // format - note this wont be run after _updateDialCode as that's only called if no val\n                    if (val) this._updateValFromNumber(val);\n                }\n            }, {\n                key: \"_initListeners\",\n                value: function _initListeners() {\n                    this._initKeyListeners();\n                    if (this.options.autoHideDialCode) this._initBlurListeners();\n                    if (this.options.allowDropdown) this._initDropdownListeners();\n                    if (this.hiddenInput) this._initHiddenInputListener();\n                }\n            }, {\n                key: \"_initHiddenInputListener\",\n                value: function _initHiddenInputListener() {\n                    var _this3 = this;\n                    this._handleHiddenInputSubmit = function() {\n                        _this3.hiddenInput.value = _this3.getNumber();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n                }\n            }, {\n                key: \"_getClosestLabel\",\n                value: function _getClosestLabel() {\n                    var el = this.telInput;\n                    while (el && el.tagName !== \"LABEL\") {\n                        el = el.parentNode;\n                    }\n                    return el;\n                }\n            }, {\n                key: \"_initDropdownListeners\",\n                value: function _initDropdownListeners() {\n                    var _this4 = this;\n                    // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n                    // open the dropdown would then automatically trigger a 2nd click on the input which would\n                    // close it again\n                    this._handleLabelClick = function(e) {\n                        // if the dropdown is closed, then focus the input, else ignore the click\n                        if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus(); else e.preventDefault();\n                    };\n                    var label = this._getClosestLabel();\n                    if (label) label.addEventListener(\"click\", this._handleLabelClick);\n                    // toggle country dropdown on click\n                    this._handleClickSelectedFlag = function() {\n                        // only intercept this event if we're opening the dropdown\n                        // else let it bubble up to the top (\"click-off-to-close\" listener)\n                        // we cannot just stopPropagation as it may be needed to close another instance\n                        if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n                            _this4._showDropdown();\n                        }\n                    };\n                    this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n                    // open dropdown list if currently focused\n                    this._handleFlagsContainerKeydown = function(e) {\n                        var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n                        if (isDropdownHidden && [ \"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\" ].indexOf(e.key) !== -1) {\n                            // prevent form from being submitted if \"ENTER\" was pressed\n                            e.preventDefault();\n                            // prevent event from being handled again by document\n                            e.stopPropagation();\n                            _this4._showDropdown();\n                        }\n                        // allow navigation from dropdown to input on TAB\n                        if (e.key === \"Tab\") _this4._closeDropdown();\n                    };\n                    this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                }\n            }, {\n                key: \"_initRequests\",\n                value: function _initRequests() {\n                    var _this5 = this;\n                    // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n                    if (this.options.utilsScript && !window.intlTelInputUtils) {\n                        // if the plugin is being initialised after the window.load event has already been fired\n                        if (window.intlTelInputGlobals.documentReady()) {\n                            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n                        } else {\n                            // wait until the load event so we don't block any other requests e.g. the flags image\n                            window.addEventListener(\"load\", function() {\n                                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n                            });\n                        }\n                    } else this.resolveUtilsScriptPromise();\n                    if (this.options.initialCountry === \"auto\") this._loadAutoCountry(); else this.resolveAutoCountryPromise();\n                }\n            }, {\n                key: \"_loadAutoCountry\",\n                value: function _loadAutoCountry() {\n                    // 3 options:\n                    // 1) already loaded (we're done)\n                    // 2) not already started loading (start)\n                    // 3) already started loading (do nothing - just wait for loading callback to fire)\n                    if (window.intlTelInputGlobals.autoCountry) {\n                        this.handleAutoCountry();\n                    } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n                        // don't do this twice!\n                        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n                        if (typeof this.options.geoIpLookup === \"function\") {\n                            this.options.geoIpLookup(function(countryCode) {\n                                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                                // tell all instances the auto country is ready\n                                // TODO: this should just be the current instances\n                                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                                // setTimeout means that the current thread of execution will finish before executing\n                                // this, which allows the plugin to finish initialising.\n                                setTimeout(function() {\n                                    return forEachInstance(\"handleAutoCountry\");\n                                });\n                            }, function() {\n                                return forEachInstance(\"rejectAutoCountryPromise\");\n                            });\n                        }\n                    }\n                }\n            }, {\n                key: \"_initKeyListeners\",\n                value: function _initKeyListeners() {\n                    var _this6 = this;\n                    // update flag on keyup\n                    this._handleKeyupEvent = function() {\n                        if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n                            _this6._triggerCountryChange();\n                        }\n                    };\n                    this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n                    // update flag on cut/paste events (now supported in all major browsers)\n                    this._handleClipboardEvent = function() {\n                        // hack because \"paste\" event is fired before input is updated\n                        setTimeout(_this6._handleKeyupEvent);\n                    };\n                    this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n                }\n            }, {\n                key: \"_cap\",\n                value: function _cap(number) {\n                    var max = this.telInput.getAttribute(\"maxlength\");\n                    return max && number.length > max ? number.substr(0, max) : number;\n                }\n            }, {\n                key: \"_initBlurListeners\",\n                value: function _initBlurListeners() {\n                    var _this7 = this;\n                    // on blur or form submit: if just a dial code then remove it\n                    this._handleSubmitOrBlurEvent = function() {\n                        _this7._removeEmptyDialCode();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                    this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                }\n            }, {\n                key: \"_removeEmptyDialCode\",\n                value: function _removeEmptyDialCode() {\n                    if (this.telInput.value.charAt(0) === \"+\") {\n                        var numeric = this._getNumeric(this.telInput.value);\n                        // if just a plus, or if just a dial code\n                        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n                            this.telInput.value = \"\";\n                        }\n                    }\n                }\n            }, {\n                key: \"_getNumeric\",\n                value: function _getNumeric(s) {\n                    return s.replace(/\\D/g, \"\");\n                }\n            }, {\n                key: \"_trigger\",\n                value: function _trigger(name) {\n                    // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n                    var e = document.createEvent(\"Event\");\n                    e.initEvent(name, true, true);\n                    // can bubble, and is cancellable\n                    this.telInput.dispatchEvent(e);\n                }\n            }, {\n                key: \"_showDropdown\",\n                value: function _showDropdown() {\n                    this.countryList.classList.remove(\"iti__hide\");\n                    this.selectedFlag.setAttribute(\"aria-expanded\", \"true\");\n                    this._setDropdownPosition();\n                    // update highlighting and scroll to active list item\n                    if (this.activeItem) {\n                        this._highlightListItem(this.activeItem, false);\n                        this._scrollTo(this.activeItem, true);\n                    }\n                    // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n                    this._bindDropdownListeners();\n                    // update the arrow\n                    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n                    this._trigger(\"open:countrydropdown\");\n                }\n            }, {\n                key: \"_toggleClass\",\n                value: function _toggleClass(el, className, shouldHaveClass) {\n                    if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className); else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n                }\n            }, {\n                key: \"_setDropdownPosition\",\n                value: function _setDropdownPosition() {\n                    var _this8 = this;\n                    if (this.options.dropdownContainer) {\n                        this.options.dropdownContainer.appendChild(this.dropdown);\n                    }\n                    if (!this.isMobile) {\n                        var pos = this.telInput.getBoundingClientRect();\n                        // windowTop from https://stackoverflow.com/a/14384091/217866\n                        var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                        var inputTop = pos.top + windowTop;\n                        var dropdownHeight = this.countryList.offsetHeight;\n                        // dropdownFitsBelow = (dropdownBottom < windowBottom)\n                        var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n                        var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n                        // by default, the dropdown will be below the input. If we want to position it above the\n                        // input, we add the dropup class.\n                        this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n                        // if dropdownContainer is enabled, calculate postion\n                        if (this.options.dropdownContainer) {\n                            // by default the dropdown will be directly over the input because it's not in the flow.\n                            // If we want to position it below, we need to add some extra top value.\n                            var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n                            // calculate placement\n                            this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n                            this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n                            // close menu on window scroll\n                            this._handleWindowScroll = function() {\n                                return _this8._closeDropdown();\n                            };\n                            window.addEventListener(\"scroll\", this._handleWindowScroll);\n                        }\n                    }\n                }\n            }, {\n                key: \"_getClosestListItem\",\n                value: function _getClosestListItem(target) {\n                    var el = target;\n                    while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n                        el = el.parentNode;\n                    }\n                    // if we reached the countryList element, then return null\n                    return el === this.countryList ? null : el;\n                }\n            }, {\n                key: \"_bindDropdownListeners\",\n                value: function _bindDropdownListeners() {\n                    var _this9 = this;\n                    // when mouse over a list item, just highlight that one\n                    // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n                    this._handleMouseoverCountryList = function(e) {\n                        // handle event delegation, as we're listening for this event on the countryList\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._highlightListItem(listItem, false);\n                    };\n                    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    // listen for country selection\n                    this._handleClickCountryList = function(e) {\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._selectListItem(listItem);\n                    };\n                    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n                    // click off to close\n                    // (except when this initial opening click is bubbling up)\n                    // we cannot just stopPropagation as it may be needed to close another instance\n                    var isOpening = true;\n                    this._handleClickOffToClose = function() {\n                        if (!isOpening) _this9._closeDropdown();\n                        isOpening = false;\n                    };\n                    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n                    // listen for up/down scrolling, enter to select, or letters to jump to country name.\n                    // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n                    // just hit down and hold it to scroll down (no keyup event).\n                    // listen on the document because that's where key events are triggered if no input has focus\n                    var query = \"\";\n                    var queryTimer = null;\n                    this._handleKeydownOnDropdown = function(e) {\n                        // prevent down key from scrolling the whole page,\n                        // and enter key from submitting a form etc\n                        e.preventDefault();\n                        // up and down to navigate\n                        if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key); else if (e.key === \"Enter\") _this9._handleEnterKey(); else if (e.key === \"Escape\") _this9._closeDropdown(); else if (/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n                            // jump to countries that start with the query string\n                            if (queryTimer) clearTimeout(queryTimer);\n                            query += e.key.toLowerCase();\n                            _this9._searchForCountry(query);\n                            // if the timer hits 1 second, reset the query\n                            queryTimer = setTimeout(function() {\n                                query = \"\";\n                            }, 1e3);\n                        }\n                    };\n                    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                }\n            }, {\n                key: \"_handleUpDownKey\",\n                value: function _handleUpDownKey(key) {\n                    var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n                    if (next) {\n                        // skip the divider\n                        if (next.classList.contains(\"iti__divider\")) {\n                            next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n                        }\n                        this._highlightListItem(next, true);\n                    }\n                }\n            }, {\n                key: \"_handleEnterKey\",\n                value: function _handleEnterKey() {\n                    if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n                }\n            }, {\n                key: \"_searchForCountry\",\n                value: function _searchForCountry(query) {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        if (this._startsWith(this.countries[i].name, query)) {\n                            var listItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(this.countries[i].iso2));\n                            // update highlighting and scroll\n                            this._highlightListItem(listItem, false);\n                            this._scrollTo(listItem, true);\n                            break;\n                        }\n                    }\n                }\n            }, {\n                key: \"_startsWith\",\n                value: function _startsWith(a, b) {\n                    return a.substr(0, b.length).toLowerCase() === b;\n                }\n            }, {\n                key: \"_updateValFromNumber\",\n                value: function _updateValFromNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n                        var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n                        var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n                        var format = useNational ? NATIONAL : INTERNATIONAL;\n                        number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n                    }\n                    number = this._beforeSetNumber(number);\n                    this.telInput.value = number;\n                }\n            }, {\n                key: \"_updateFlagFromNumber\",\n                value: function _updateFlagFromNumber(originalNumber) {\n                    // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n                    // with a +1 so _getDialCode will be able to extract the area code\n                    // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n                    // from the number), that means we're initialising the plugin with a number that already has a\n                    // dial code, so fine to ignore this bit\n                    var number = originalNumber;\n                    var selectedDialCode = this.selectedCountryData.dialCode;\n                    var isNanp = selectedDialCode === \"1\";\n                    if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n                        if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n                        number = \"+\".concat(number);\n                    }\n                    // update flag if user types area code for another country\n                    if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n                        number = \"+\".concat(selectedDialCode).concat(number);\n                    }\n                    // try and extract valid dial code from input\n                    var dialCode = this._getDialCode(number, true);\n                    var numeric = this._getNumeric(number);\n                    var countryCode = null;\n                    if (dialCode) {\n                        var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n                        // check if the right country is already selected. this should be false if the number is\n                        // longer than the matched dial code because in this case we need to make sure that if\n                        // there are multiple country matches, that the first one is selected (note: we could\n                        // just check that here, but it requires the same loop that we already have later)\n                        var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n                        var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n                        // only update the flag if:\n                        // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n                        // AND\n                        // B) the right country is not already selected\n                        if (!isRegionlessNanpNumber && !alreadySelected) {\n                            // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n                            // non-empty index\n                            for (var j = 0; j < countryCodes.length; j++) {\n                                if (countryCodes[j]) {\n                                    countryCode = countryCodes[j];\n                                    break;\n                                }\n                            }\n                        }\n                    } else if (number.charAt(0) === \"+\" && numeric.length) {\n                        // invalid dial code, so empty\n                        // Note: use getNumeric here because the number has not been formatted yet, so could contain\n                        // bad chars\n                        countryCode = \"\";\n                    } else if (!number || number === \"+\") {\n                        // empty, or just a plus, so default\n                        countryCode = this.defaultCountry;\n                    }\n                    if (countryCode !== null) {\n                        return this._setFlag(countryCode);\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_isRegionlessNanp\",\n                value: function _isRegionlessNanp(number) {\n                    var numeric = this._getNumeric(number);\n                    if (numeric.charAt(0) === \"1\") {\n                        var areaCode = numeric.substr(1, 3);\n                        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_highlightListItem\",\n                value: function _highlightListItem(listItem, shouldFocus) {\n                    var prevItem = this.highlightedItem;\n                    if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n                    this.highlightedItem = listItem;\n                    this.highlightedItem.classList.add(\"iti__highlight\");\n                    if (shouldFocus) this.highlightedItem.focus();\n                }\n            }, {\n                key: \"_getCountryData\",\n                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n                    var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n                    for (var i = 0; i < countryList.length; i++) {\n                        if (countryList[i].iso2 === countryCode) {\n                            return countryList[i];\n                        }\n                    }\n                    if (allowFail) {\n                        return null;\n                    }\n                    throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n                }\n            }, {\n                key: \"_setFlag\",\n                value: function _setFlag(countryCode) {\n                    var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n                    // do this first as it will throw an error and stop if countryCode is invalid\n                    this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n                    // update the defaultCountry - we only need the iso2 from now on, so just store that\n                    if (this.selectedCountryData.iso2) {\n                        this.defaultCountry = this.selectedCountryData.iso2;\n                    }\n                    this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n                    // update the selected country's title attribute\n                    var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n                    this.selectedFlag.setAttribute(\"title\", title);\n                    if (this.options.separateDialCode) {\n                        var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n                        this.selectedDialCode.innerHTML = dialCode;\n                        // offsetWidth is zero if input is in a hidden container during initialisation\n                        var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n                        // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n                        this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n                    }\n                    // and the input's placeholder\n                    this._updatePlaceholder();\n                    // update the active list item\n                    if (this.options.allowDropdown) {\n                        var prevItem = this.activeItem;\n                        if (prevItem) {\n                            prevItem.classList.remove(\"iti__active\");\n                            prevItem.setAttribute(\"aria-selected\", \"false\");\n                        }\n                        if (countryCode) {\n                            // check if there is a preferred item first, else fall back to standard\n                            var nextItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode, \"-preferred\")) || this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode));\n                            nextItem.setAttribute(\"aria-selected\", \"true\");\n                            nextItem.classList.add(\"iti__active\");\n                            this.activeItem = nextItem;\n                            this.selectedFlag.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n                        }\n                    }\n                    // return if the flag has changed or not\n                    return prevCountry.iso2 !== countryCode;\n                }\n            }, {\n                key: \"_getHiddenSelectedFlagWidth\",\n                value: function _getHiddenSelectedFlagWidth() {\n                    // to get the right styling to apply, all we need is a shallow clone of the container,\n                    // and then to inject a deep clone of the selectedFlag element\n                    var containerClone = this.telInput.parentNode.cloneNode();\n                    containerClone.style.visibility = \"hidden\";\n                    document.body.appendChild(containerClone);\n                    var flagsContainerClone = this.flagsContainer.cloneNode();\n                    containerClone.appendChild(flagsContainerClone);\n                    var selectedFlagClone = this.selectedFlag.cloneNode(true);\n                    flagsContainerClone.appendChild(selectedFlagClone);\n                    var width = selectedFlagClone.offsetWidth;\n                    containerClone.parentNode.removeChild(containerClone);\n                    return width;\n                }\n            }, {\n                key: \"_updatePlaceholder\",\n                value: function _updatePlaceholder() {\n                    var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n                    if (window.intlTelInputUtils && shouldSetPlaceholder) {\n                        var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n                        var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n                        placeholder = this._beforeSetNumber(placeholder);\n                        if (typeof this.options.customPlaceholder === \"function\") {\n                            placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n                        }\n                        this.telInput.setAttribute(\"placeholder\", placeholder);\n                    }\n                }\n            }, {\n                key: \"_selectListItem\",\n                value: function _selectListItem(listItem) {\n                    // update selected flag and active list item\n                    var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n                    this._closeDropdown();\n                    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n                    // focus the input\n                    this.telInput.focus();\n                    // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n                    // inserting dial code), who try to put the cursor at the beginning the first time\n                    var len = this.telInput.value.length;\n                    this.telInput.setSelectionRange(len, len);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"_closeDropdown\",\n                value: function _closeDropdown() {\n                    this.countryList.classList.add(\"iti__hide\");\n                    this.selectedFlag.setAttribute(\"aria-expanded\", \"false\");\n                    // update the arrow\n                    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n                    // unbind key events\n                    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n                    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n                    // remove menu from container\n                    if (this.options.dropdownContainer) {\n                        if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n                        if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n                    }\n                    this._trigger(\"close:countrydropdown\");\n                }\n            }, {\n                key: \"_scrollTo\",\n                value: function _scrollTo(element, middle) {\n                    var container = this.countryList;\n                    // windowTop from https://stackoverflow.com/a/14384091/217866\n                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                    var containerHeight = container.offsetHeight;\n                    var containerTop = container.getBoundingClientRect().top + windowTop;\n                    var containerBottom = containerTop + containerHeight;\n                    var elementHeight = element.offsetHeight;\n                    var elementTop = element.getBoundingClientRect().top + windowTop;\n                    var elementBottom = elementTop + elementHeight;\n                    var newScrollTop = elementTop - containerTop + container.scrollTop;\n                    var middleOffset = containerHeight / 2 - elementHeight / 2;\n                    if (elementTop < containerTop) {\n                        // scroll up\n                        if (middle) newScrollTop -= middleOffset;\n                        container.scrollTop = newScrollTop;\n                    } else if (elementBottom > containerBottom) {\n                        // scroll down\n                        if (middle) newScrollTop += middleOffset;\n                        var heightDifference = containerHeight - elementHeight;\n                        container.scrollTop = newScrollTop - heightDifference;\n                    }\n                }\n            }, {\n                key: \"_updateDialCode\",\n                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n                    var inputVal = this.telInput.value;\n                    // save having to pass this every time\n                    var newDialCode = \"+\".concat(newDialCodeBare);\n                    var newNumber;\n                    if (inputVal.charAt(0) === \"+\") {\n                        // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n                        var prevDialCode = this._getDialCode(inputVal);\n                        if (prevDialCode) {\n                            // current number contains a valid dial code, so replace it\n                            newNumber = inputVal.replace(prevDialCode, newDialCode);\n                        } else {\n                            // current number contains an invalid dial code, so ditch it\n                            // (no way to determine where the invalid dial code ends and the rest of the number begins)\n                            newNumber = newDialCode;\n                        }\n                    } else if (this.options.nationalMode || this.options.separateDialCode) {\n                        // don't do anything\n                        return;\n                    } else {\n                        // nationalMode is disabled\n                        if (inputVal) {\n                            // there is an existing value with no dial code: prefix the new dial code\n                            newNumber = newDialCode + inputVal;\n                        } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n                            // no existing value and either they've just selected a list item, or autoHideDialCode is\n                            // disabled: insert new dial code\n                            newNumber = newDialCode;\n                        } else {\n                            return;\n                        }\n                    }\n                    this.telInput.value = newNumber;\n                }\n            }, {\n                key: \"_getDialCode\",\n                value: function _getDialCode(number, includeAreaCode) {\n                    var dialCode = \"\";\n                    // only interested in international numbers (starting with a plus)\n                    if (number.charAt(0) === \"+\") {\n                        var numericChars = \"\";\n                        // iterate over chars\n                        for (var i = 0; i < number.length; i++) {\n                            var c = number.charAt(i);\n                            // if char is number (https://stackoverflow.com/a/8935649/217866)\n                            if (!isNaN(parseInt(c, 10))) {\n                                numericChars += c;\n                                // if current numericChars make a valid dial code\n                                if (includeAreaCode) {\n                                    if (this.countryCodes[numericChars]) {\n                                        // store the actual raw string (useful for matching later)\n                                        dialCode = number.substr(0, i + 1);\n                                    }\n                                } else {\n                                    if (this.dialCodes[numericChars]) {\n                                        dialCode = number.substr(0, i + 1);\n                                        // if we're just looking for a dial code, we can break as soon as we find one\n                                        break;\n                                    }\n                                }\n                                // stop searching as soon as we can - in this case when we hit max len\n                                if (numericChars.length === this.countryCodeMaxLen) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return dialCode;\n                }\n            }, {\n                key: \"_getFullNumber\",\n                value: function _getFullNumber() {\n                    var val = this.telInput.value.trim();\n                    var dialCode = this.selectedCountryData.dialCode;\n                    var prefix;\n                    var numericVal = this._getNumeric(val);\n                    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n                        // when using separateDialCode, it is visible so is effectively part of the typed number\n                        prefix = \"+\".concat(dialCode);\n                    } else {\n                        prefix = \"\";\n                    }\n                    return prefix + val;\n                }\n            }, {\n                key: \"_beforeSetNumber\",\n                value: function _beforeSetNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.separateDialCode) {\n                        var dialCode = this._getDialCode(number);\n                        // if there is a valid dial code\n                        if (dialCode) {\n                            // in case _getDialCode returned an area code as well\n                            dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n                            // a lot of numbers will have a space separating the dial code and the main number, and\n                            // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n                            // rid of it\n                            // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n                            var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n                            number = number.substr(start);\n                        }\n                    }\n                    return this._cap(number);\n                }\n            }, {\n                key: \"_triggerCountryChange\",\n                value: function _triggerCountryChange() {\n                    this._trigger(\"countrychange\");\n                }\n            }, {\n                key: \"handleAutoCountry\",\n                value: function handleAutoCountry() {\n                    if (this.options.initialCountry === \"auto\") {\n                        // we must set this even if there is an initial val in the input: in case the initial val is\n                        // invalid and they delete it - they should see their auto country\n                        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n                        // if there's no initial value in the input, then update the flag\n                        if (!this.telInput.value) {\n                            this.setCountry(this.defaultCountry);\n                        }\n                        this.resolveAutoCountryPromise();\n                    }\n                }\n            }, {\n                key: \"handleUtils\",\n                value: function handleUtils() {\n                    // if the request was successful\n                    if (window.intlTelInputUtils) {\n                        // if there's an initial value in the input, then format it\n                        if (this.telInput.value) {\n                            this._updateValFromNumber(this.telInput.value);\n                        }\n                        this._updatePlaceholder();\n                    }\n                    this.resolveUtilsScriptPromise();\n                }\n            }, {\n                key: \"destroy\",\n                value: function destroy() {\n                    var form = this.telInput.form;\n                    if (this.options.allowDropdown) {\n                        // make sure the dropdown is closed (and unbind listeners)\n                        this._closeDropdown();\n                        this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n                        this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                        // label click hack\n                        var label = this._getClosestLabel();\n                        if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n                    }\n                    // unbind hiddenInput listeners\n                    if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n                    // unbind autoHideDialCode listeners\n                    if (this.options.autoHideDialCode) {\n                        if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                        this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                    }\n                    // unbind key events, and cut/paste events\n                    this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n                    this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n                    // remove attribute of id instance: data-intl-tel-input-id\n                    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n                    // remove markup (but leave the original input)\n                    var wrapper = this.telInput.parentNode;\n                    wrapper.parentNode.insertBefore(this.telInput, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                    delete window.intlTelInputGlobals.instances[this.id];\n                }\n            }, {\n                key: \"getExtension\",\n                value: function getExtension() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumber\",\n                value: function getNumber(format) {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumberType\",\n                value: function getNumberType() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"getSelectedCountryData\",\n                value: function getSelectedCountryData() {\n                    return this.selectedCountryData;\n                }\n            }, {\n                key: \"getValidationError\",\n                value: function getValidationError() {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"isValidNumber\",\n                value: function isValidNumber() {\n                    var val = this._getFullNumber().trim();\n                    var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n                    return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n                }\n            }, {\n                key: \"setCountry\",\n                value: function setCountry(originalCountryCode) {\n                    var countryCode = originalCountryCode.toLowerCase();\n                    // check if already selected\n                    if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n                        this._setFlag(countryCode);\n                        this._updateDialCode(this.selectedCountryData.dialCode, false);\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setNumber\",\n                value: function setNumber(number) {\n                    // we must update the flag first, which updates this.selectedCountryData, which is used for\n                    // formatting the number before displaying it\n                    var flagChanged = this._updateFlagFromNumber(number);\n                    this._updateValFromNumber(number);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setPlaceholderNumberType\",\n                value: function setPlaceholderNumberType(type) {\n                    this.options.placeholderNumberType = type;\n                    this._updatePlaceholder();\n                }\n            } ]);\n            return Iti;\n        }();\n        /********************\n *  STATIC METHODS\n ********************/\n        // get the country data object\n        intlTelInputGlobals.getCountryData = function() {\n            return allCountries;\n        };\n        // inject a <script> element to load utils.js\n        var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n            // inject a new script element into the page\n            var script = document.createElement(\"script\");\n            script.onload = function() {\n                forEachInstance(\"handleUtils\");\n                if (handleSuccess) handleSuccess();\n            };\n            script.onerror = function() {\n                forEachInstance(\"rejectUtilsScriptPromise\");\n                if (handleFailure) handleFailure();\n            };\n            script.className = \"iti-load-utils\";\n            script.async = true;\n            script.src = path;\n            document.body.appendChild(script);\n        };\n        // load the utils script\n        intlTelInputGlobals.loadUtils = function(path) {\n            // 2 options:\n            // 1) not already started loading (start)\n            // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n            // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n                // only do this once\n                window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n                // if we have promises, then return a promise\n                if (typeof Promise !== \"undefined\") {\n                    return new Promise(function(resolve, reject) {\n                        return injectScript(path, resolve, reject);\n                    });\n                }\n                injectScript(path);\n            }\n            return null;\n        };\n        // default options\n        intlTelInputGlobals.defaults = defaults;\n        // version\n        intlTelInputGlobals.version = \"17.0.19\";\n        // convenience wrapper\n        return function(input, options) {\n            var iti = new Iti(input, options);\n            iti._init();\n            input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n            window.intlTelInputGlobals.instances[iti.id] = iti;\n            return iti;\n        };\n    }();\n});","/**\n * Exposing intl-tel-input as a component\n */\nmodule.exports = require(\"./build/js/intlTelInput\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","class ReferenceWidgetAPI {\n\n  constructor(props) {\n    console.debug(\"ReferenceWidgetAPI::constructor\")\n    this.api_url = props.api_url;\n    this.on_api_error = props.on_api_error || function(response) {};\n    return this;\n  }\n\n  get_api_url(endpoint) {\n    return `${this.api_url}/${endpoint}#${location.search}`\n  }\n\n  /*\n   * Fetch Ajax API resource from the server\n   *\n   * @param {string} endpoint\n   * @param {object} options\n   * @returns {Promise}\n   */\n  get_json(endpoint, options) {\n    var data, init, method, on_api_error, request, url;\n    if (options == null) {\n      options = {};\n    }\n    method = options.method || \"POST\";\n    data = JSON.stringify(options.data) || \"{}\";\n    on_api_error = this.on_api_error;\n    url = this.get_api_url(endpoint);\n    init = {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": this.get_csrf_token()\n      },\n      body: method === \"POST\" ? data : null,\n      credentials: \"include\"\n    };\n    console.info(\"ReferenceWidgetAPI::fetch:endpoint=\" + endpoint + \" init=\", init);\n    request = new Request(url, init);\n    return fetch(request).then(function(response) {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n      return response;\n    }).then(function(response) {\n      return response.json();\n    }).catch(function(response) {\n      on_api_error(response);\n      return response;\n    });\n  }\n\n  search(catalog, query, params) {\n    params = params || {};\n    let url = `search?catalog=${catalog}`;\n    for(let [key, value] of Object.entries(query)) {\n      // handle arrays as repeating parameters\n      if (Array.isArray(value)) {\n        value.forEach( (item) => {\n          url += `&${key}=${item}`;\n        });\n        continue;\n      }\n      // workaround for path queries\n      if (key == \"path\") {\n        value = value.query || null;\n        if (value.depth !== null) {\n          url += `&depth=${value.depth}`;\n        }\n      }\n      if (value) {\n        url += `&${key}=${value}`;\n      }\n    }\n    for(let [key, value] of Object.entries(params)) {\n      url += `&${key}=${value}`;\n    }\n    console.debug(\"ReferenceWidgetAPI::search:url=\", url);\n    return this.get_json(url, {method: \"GET\"});\n  }\n\n  /*\n   * Get the plone.protect CSRF token\n   * Note: The fields won't save w/o that token set\n   */\n  get_csrf_token() {\n    return document.querySelector(\"#protect-script\").dataset.token;\n  };\n\n}\n\nexport default ReferenceWidgetAPI;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass ReferenceField extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n\n    // React reference to the input field\n    // https://reactjs.org/docs/react-api.html#reactcreateref\n    this.input_field_ref = React.createRef();\n\n    // bind event handlers\n    this.on_focus = this.on_focus.bind(this);\n    this.on_blur = this.on_blur.bind(this);\n    this.on_change = this.on_change.bind(this);\n    this.on_keydown = this.on_keydown.bind(this);\n    this.on_keypress = this.on_keypress.bind(this);\n    this.on_clear_click = this.on_clear_click.bind(this);\n    this.on_search_click = this.on_search_click.bind(this);\n  }\n\n  /*\n   * Returns the search value from the input field\n   */\n  get_search_value() {\n    return this.input_field_ref.current.value;\n  }\n\n  /*\n   * Handler when the search field get focused\n   */\n  on_focus(event) {\n    console.debug(\"ReferenceField::on_focus\");\n    if (this.props.on_focus) {\n      let value = this.get_search_value() || null;\n      this.props.on_focus(value);\n    }\n  }\n\n  /*\n   * Handler when the search field lost focus\n   */\n  on_blur(event) {\n    console.debug(\"ReferenceField::on_blur\");\n    if (this.props.on_blur) {\n      let value = this.get_search_value();\n      this.props.on_blur(value);\n    }\n  }\n\n  /*\n   * Handler when the search value changed\n   */\n  on_change(event) {\n    event.preventDefault();\n    let value = this.get_search_value();\n    console.debug(\"ReferenceField::on_change:value: \", value);\n    if (this.props.on_search) {\n      this.props.on_search(value);\n    }\n  }\n\n  /*\n   * Handler for keydown events in the search field\n   *\n   */\n  on_keydown(event) {\n    // backspace\n    if (event.which == 8) {\n      if (this.get_search_value() == \"\") {\n        this.props.on_clear();\n      }\n    }\n\n    // down arrow\n    if (event.which == 40) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"down\");\n      }\n    }\n    // up arrow\n    if (event.which == 38) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"up\");\n      }\n    }\n\n    // left arrow\n    if (event.which == 37) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"left\");\n      }\n    }\n\n    // right arrow\n    if (event.which == 39) {\n      if (this.props.on_arrow_key) {\n        this.props.on_arrow_key(\"right\");\n      }\n    }\n  }\n\n  /*\n   * Handler for keypress events in the search field\n   *\n   */\n  on_keypress(event) {\n    if (event.which == 13) {\n      console.debug(\"ReferenceField::on_keypress:ENTER\");\n      // prevent form submission when clicking ENTER\n      event.preventDefault();\n      if (this.props.on_enter) {\n        this.props.on_enter();\n      }\n\n    }\n  }\n\n  on_clear_click(event) {\n    event.preventDefault();\n    if (this.props.on_clear) {\n      let value = this.get_search_value();\n      this.props.on_clear(value);\n      // clear the input field\n      this.input_field_ref.current.value = \"\"\n    }\n  }\n\n  on_search_click(event) {\n    event.preventDefault();\n    if (this.props.on_search) {\n      let value = this.get_search_value();\n      this.props.on_search(value);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"uidreferencewidget-search-field\">\n        <div className=\"input-group\">\n          <input type=\"text\"\n                 name={this.props.name}\n                 className={this.props.className}\n                 ref={this.input_field_ref}\n                 disabled={this.props.disabled}\n                 onKeyDown={this.on_keydown}\n                 onKeyPress={this.on_keypress}\n                 onChange={this.on_change}\n                 onFocus={this.on_focus}\n                 onBlur={this.on_blur}\n                 placeholder={this.props.placeholder}\n                 style={{maxWidth: \"160px\"}}\n                 disabled={this.props.disabled}\n          />\n          <div class=\"input-group-append\">\n            <button className=\"btn btn-sm btn-outline-secondary\"\n                    disabled={this.props.disabled}\n                    onClick={this.on_clear_click}>\n              <i class=\"fas fa-times\"></i>\n            </button>\n            <button className=\"btn btn-sm btn-outline-primary\"\n                    disabled={this.props.disabled}\n                    onClick={this.on_search_click}>\n              <i class=\"fas fa-search\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReferenceField;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass ReferenceResults extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // bind event handlers\n    this.on_select = this.on_select.bind(this);\n    this.on_page = this.on_page.bind(this);\n    this.on_prev_page = this.on_prev_page.bind(this);\n    this.on_next_page = this.on_next_page.bind(this);\n    this.on_close = this.on_close.bind(this);\n  }\n\n  /*\n   * Return the header columns config\n   *\n   * @returns {Array} of column config objects\n   */\n  get_columns() {\n    return this.props.columns || [];\n  }\n\n  /*\n   * Return only the (field-)names of the columns config\n   *\n   * @returns {Array} of column names\n   */\n  get_column_names() {\n    let columns = this.get_columns();\n    return columns.map((column) => {\n      return column.name;\n    });\n  }\n\n  /*\n   * Return only the labels of the columns config\n   *\n   * @returns {Array} of column labels\n   */\n  get_column_labels() {\n    let columns = this.get_columns();\n    return columns.map((column) => { return column.label });\n  }\n\n  /*\n   * Return the search results\n   *\n   * @returns {Array} of result objects (items of `senaite.jsonapi` response)\n   */\n  get_results() {\n    return this.props.results || [];\n  }\n\n  /*\n   * Checks if results are available\n   *\n   * @returns {Boolean} true if there are results, false otherwise\n   */\n  has_results() {\n    return this.get_results().length > 0;\n  }\n\n  /*\n   * Returns the style object for the dropdown table\n   *\n   * @returns {Object} of ReactJS CSS styles\n   */\n  get_style() {\n    return {\n      minWidth: this.props.width || \"400px\",\n      backgroundColor: \"white\",\n      zIndex: 999999\n    }\n  }\n\n  /*\n   * Returns the UID of a result object\n   *\n   * @returns {String} UID of the result\n   */\n  get_result_uid(result) {\n    return result.uid || \"NO UID FOUND!\";\n  }\n\n  /*\n   * Checks wehter the UID is already in the list of selected UIDs\n   *\n   * @returns {Boolean} true if the UID is already selected, false otherwise\n   */\n  is_uid_selected(uid) {\n    return this.props.uids.indexOf(uid) > -1;\n  }\n\n  /*\n   * Build Header <th></th> columns\n   *\n   * @returns {Array} of <th>...</th> columns\n   */\n  build_header_columns() {\n    let columns = [];\n    for (let column of this.get_columns()) {\n      let label = column.label || column.title;\n      let width = column.width || \"auto\";\n      let align = column.align || \"left\";\n      columns.push(\n        <th className=\"border-top-0\" width={width} align={align}>\n          {_t(label)}\n        </th>\n      );\n    }\n    // Append additional column for usage state\n    columns.push(\n      <th className=\"border-top-0\" width=\"1\"></th>\n    )\n    return columns;\n  }\n\n  /*\n   * Build table <tr></tr> rows\n   *\n   * @returns {Array} of <tr>...</tr> rows\n   */\n  build_rows() {\n    let rows = [];\n    let results = this.get_results();\n    results.forEach((result, index) => {\n      let uid = this.get_result_uid(result);\n      rows.push(\n        <tr uid={uid}\n            className={this.props.focused == index ? \"table-active\": \"\"}\n            onClick={this.on_select}>\n          {this.build_columns(result)}\n        </tr>\n      );\n    });\n    return rows\n  }\n\n  /*\n   * Build Header <td></td> columns\n   *\n   * @returns {Array} of <td>...</td> columns\n   */\n  build_columns(result) {\n    let columns = []\n    let searchterm = this.props.searchterm || \"\";\n    for (let name of this.get_column_names()) {\n      let value = result[name];\n      let highlighted = this.highlight(value, searchterm);\n      columns.push(\n        <td dangerouslySetInnerHTML={{__html: highlighted}}></td>\n      );\n    }\n    let uid = result.uid;\n    let used = this.props.uids.indexOf(uid) > -1;\n    columns.push(\n      <td>{used && <i class=\"fas fa-link text-success\"></i>}</td>\n    );\n    return columns;\n  }\n\n  /*\n   * Highlight any found match of the searchterm in the text\n   *\n   * @returns {String} highlighted text\n   */\n  highlight(text, searchterm) {\n    if (searchterm.length == 0) return text;\n    try {\n      let rx = new RegExp(searchterm, \"gi\");\n      text = text.replaceAll(rx, (m) => {\n        return \"<span class='font-weight-bold text-info'>\"+m+\"</span>\";\n      });\n    } catch (error) {\n      // pass\n    }\n    return text\n  }\n\n  /*\n   * Build pagination <li>...</li> items\n   *\n   * @returns {Array} Pagination JSX\n   */\n  build_pages() {\n    let pages = [];\n\n    let total = this.props.pages;\n    let current = this.props.page;\n    let padding = this.props.padding;\n\n    let first_page = current - padding > 0 ? current - padding : 1;\n    let last_page = current + padding < total ? current + padding : total;\n\n    let crop_before = first_page === 1 ? false : true;\n    let crop_after = last_page < total ? true : false;\n\n    for (let page=first_page; page <= last_page; page++) {\n      let cls = [\"page-item\"];\n      if (current === page) cls.push(\"active\");\n\n      // crop before the current page\n      if (page == first_page && crop_before) {\n        // link to first page\n        pages.push(\n          <li>\n            <button className=\"page-link\" page={1} onClick={this.on_page}>1</button>\n          </li>\n        );\n        // placeholder\n        pages.push(\n          <li>\n            <div className=\"page-link\">...</div>\n          </li>\n        );\n        crop_before = false;\n      }\n\n      pages.push(\n        <li className={cls.join(\" \")}>\n          <button className=\"page-link\" page={page} onClick={this.on_page}>\n            {page}\n          </button>\n        </li>\n      );\n\n      // crop after the current page\n      if (page === last_page && crop_after) {\n        // placeholder\n        pages.push(\n          <li>\n            <div className=\"page-link\">...</div>\n          </li>\n        );\n        // link to last page\n        pages.push(\n          <li>\n            <button className=\"page-link\" page={total} onClick={this.on_page}>\n              {total}\n            </button>\n          </li>\n        );\n        crop_after = false;\n      }\n\n    }\n    return pages;\n  }\n\n  /*\n   * Build pagination next button\n   *\n   * @returns {Array} Next button JSX\n   */\n  build_next_button() {\n    let cls = [\"page-item\"]\n    if (!this.props.next_url) cls.push(\"disabled\")\n    return (\n      <li className={cls.join(\" \")}>\n        <button className=\"page-link\" onClick={this.on_next_page}>\n          Next\n        </button>\n      </li>\n    )\n  }\n\n  /*\n   * Build pagination previous button\n   *\n   * @returns {Array} Previous button JSX\n   */\n  build_prev_button() {\n    let cls = [\"page-item\"]\n    if (!this.props.prev_url) cls.push(\"disabled\")\n    return (\n      <li className={cls.join(\" \")}>\n        <button className=\"page-link\" onClick={this.on_prev_page}>\n          Previous\n        </button>\n      </li>\n    )\n  }\n\n  /*\n   * Build results dropdown close button\n   *\n   * @returns {Array} Close button JSX\n   */\n  build_close_button() {\n    return (\n      <button className=\"btn btn-sm btn-link\" onClick={this.on_close}>\n        <i class=\"fas fa-window-close\"></i>\n      </button>\n    )\n  }\n\n  /*\n   * Event handler when a result was selected\n   */\n  on_select(event) {\n    event.preventDefault();\n    let target = event.currentTarget;\n    let uid = target.getAttribute(\"uid\")\n    console.debug(\"ReferenceResults::on_select:event=\", event);\n    if (this.props.on_select) {\n      this.props.on_select(uid);\n    }\n  }\n\n  /*\n   * Event handler when a page was clicked\n   */\n  on_page(event) {\n    event.preventDefault();\n    let target = event.currentTarget;\n    let page = target.getAttribute(\"page\")\n    console.debug(\"ReferenceResults::on_page:event=\", event);\n    if (page == this.props.page) {\n      return;\n    }\n    if (this.props.on_page) {\n      this.props.on_page(page);\n    }\n  }\n\n  /*\n   * Event handler when the pagination previous button was clicked\n   */\n  on_prev_page(event) {\n    event.preventDefault();\n    console.debug(\"ReferenceResults::on_prev_page:event=\", event);\n    let page = this.props.page;\n    if (page < 2) {\n      console.warn(\"No previous pages available!\");\n      return;\n    }\n    if (this.props.on_page) {\n      this.props.on_page(page - 1);\n    }\n  }\n\n  /*\n   * Event handler when the pagination next button was clicked\n   */\n  on_next_page(event) {\n    event.preventDefault();\n    console.debug(\"ReferenceResults::on_next_page:event=\", event);\n    let page = this.props.page;\n    if (page + 1 > this.props.pages) {\n      console.warn(\"No next pages available!\");\n      return;\n    }\n    if (this.props.on_page) {\n      this.props.on_page(page + 1);\n    }\n  }\n\n  /*\n   * Event handler when the dropdown close button was clicked\n   */\n  on_close(event) {\n    event.preventDefault();\n    console.debug(\"ReferenceResults::on_close:event=\", event);\n    if (this.props.on_clear) {\n      this.props.on_clear();\n    }\n  }\n\n  /*\n   * Render the reference results selection\n   */\n  render() {\n    if (!this.has_results()) {\n      return null;\n    }\n    return (\n      <div className={this.props.className}\n           style={this.get_style()}>\n        <div style={{position: \"absolute\", top: 0, right: 0}}>\n          {this.build_close_button()}\n        </div>\n        <table className=\"table table-sm table-hover small\">\n          <thead>\n            <tr>\n              {this.build_header_columns()}\n            </tr>\n          </thead>\n          <tbody>\n            {this.build_rows()}\n          </tbody>\n        </table>\n        {this.props.pages > 1 &&\n         <nav>\n           <ul className=\"pagination pagination-sm justify-content-center\">\n             {this.build_prev_button()}\n             {this.build_pages()}\n             {this.build_next_button()}\n           </ul>\n         </nav>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ReferenceResults;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass References extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.on_deselect = this.on_deselect.bind(this);\n  }\n\n  get_selected_uids() {\n    return this.props.uids || [];\n  }\n\n  /*\n   * Simple template interpolation that replaces ${...} placeholders\n   * with any found value from the context object.\n   *\n   * https://stackoverflow.com/questions/29182244/convert-a-string-to-a-template-string\n   */\n  interpolate(template, context) {\n    for(let [key, value] of Object.entries(context)) {\n      template = template.replace(new RegExp('\\\\$\\\\{' + key + '\\\\}', 'g'), value)\n    }\n    return template;\n  }\n\n  render_display_template(uid) {\n    let template = this.props.display_template;\n    let context = this.props.records[uid];\n    if (!context) return uid;\n    return this.interpolate(template, context);\n  }\n\n  build_selected_items() {\n    let items = [];\n    let selected_uids = this.get_selected_uids();\n\n    for (let uid of selected_uids) {\n      items.push(\n        <li uid={uid}>\n          <div className=\"p-1 mb-1 mr-1 bg-light border rounded d-inline-block\">\n            <span dangerouslySetInnerHTML={{__html: this.render_display_template(uid)}}></span>\n            <button uid={uid}\n                    className=\"btn btn-sm btn-link-danger\"\n                    onClick={this.on_deselect}>\n              <i className=\"fas fa-times-circle\"></i>\n            </button>\n          </div>\n\n        </li>\n      );\n    }\n    return items\n  }\n\n  on_deselect(event) {\n    event.preventDefault();\n    let target = event.currentTarget;\n    let uid = target.getAttribute(\"uid\");\n    console.debug(\"References::on_deselect: Remove UID\", uid);\n    if (this.props.on_deselect) {\n      this.props.on_deselect(uid);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"uidreferencewidget-references\">\n        <ul className=\"list-unstyled list-group list-group-horizontal\">\n          {this.build_selected_items()}\n        </ul>\n        {/* submitted in form */}\n        <textarea\n          className=\"d-none\"\n          name={this.props.name}\n          value={this.props.uids.join(\"\\n\")}\n        />\n      </div>\n    );\n  }\n}\n\nexport default References;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport ReferenceWidgetAPI from \"./api.js\"\nimport ReferenceField from \"./components/ReferenceField.js\"\nimport ReferenceResults from \"./components/ReferenceResults.js\"\nimport References from \"./components/References.js\"\n\n\nclass UIDReferenceWidgetController extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Internal state\n    this.state = {\n      results: [],  // `items` list of search results coming from `senaite.jsonapi`\n      searchterm: \"\",  // the search term that was entered by the user\n      loading: false,  // loading flag when searching for results\n      count: 0,  // count of results (coming from `senaite.jsonapi`)\n      page: 1,  // current page (coming from `senaite.jsonapi`)\n      pages: 1,  // number of pages (coming from `senaite.jsonapi`)\n      next_url: null,  // next page API URL (coming from `senaite.jsonapi`)\n      prev_url: null,  // previous page API URL (coming from `senaite.jsonapi`)\n      b_start: 1,  // batch start for pagination (see `senaite.jsonapi.batch`)\n      focused: 0,  // current result that has the focus\n      padding: 3,  // page padding\n    }\n\n    // Root input HTML element\n    let el = props.root_el;\n\n    // Data keys located at the root element\n    // -> initial values are set from the widget class\n    const data_keys = [\n      \"id\",\n      \"name\",\n      \"uids\",\n      \"api_url\",\n      \"records\",\n      \"catalog\",\n      \"query\",\n      \"columns\",\n      \"display_template\",\n      \"limit\",\n      \"multi_valued\",\n      \"disabled\",\n      \"readonly\",\n      \"padding\",\n    ]\n\n    // Query data keys and set state with parsed JSON value\n    for (let key of data_keys) {\n      let value = el.dataset[key];\n      if (value === undefined) {\n        continue;\n      }\n      this.state[key] = this.parse_json(value);\n    }\n\n    // Initialize communication API with the API URL\n    this.api = new ReferenceWidgetAPI({\n      api_url: this.state.api_url,\n    });\n\n    // Bind callbacks to current context\n    this.search = this.search.bind(this);\n    this.goto_page = this.goto_page.bind(this);\n    this.clear_results = this.clear_results.bind(this);\n    this.select = this.select.bind(this);\n    this.select_focused = this.select_focused.bind(this);\n    this.deselect = this.deselect.bind(this);\n    this.navigate_results = this.navigate_results.bind(this);\n    this.on_keydown = this.on_keydown.bind(this);\n    this.on_click = this.on_click.bind(this);\n\n    // dev only\n    window.widget = this;\n\n    return this\n  }\n\n  componentDidMount() {\n    // Bind event listeners of the document\n    document.addEventListener(\"keydown\", this.on_keydown, false);\n    document.addEventListener(\"click\", this.on_click, false)\n  }\n\n  componentWillUnmount() {\n    // Remove event listeners of the document\n    document.removeEventListener(\"keydown\", this.on_keydown, false);\n    document.removeEventListener(\"click\", this.on_click, false);\n  }\n\n  /*\n   * JSON parse the given value\n   *\n   * @param {String} value: The JSON value to parse\n   */\n  parse_json(value) {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.error(`Could not parse \"${value}\" to JSON`);\n    }\n  }\n\n  is_disabled() {\n    if (this.state.disabled) {\n      return true;\n    }\n    if (this.state.readonly) {\n      return true;\n    }\n    if (!this.state.multi_valued && this.state.uids.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   * Create a query object for the API\n   *\n   * This method prepares a query from the current state variables,\n   * which can be used to call the `api.search` method.\n   *\n   * @param {Object} options: Additional options to add to the query\n   * @returns {Object} The query object\n   */\n  make_query(options) {\n    options = options || {};\n    return Object.assign({\n      q: this.state.searchterm,\n      limit: this.state.limit,\n      complete: 1,\n    }, options, this.state.query);\n  }\n\n  /*\n   * Execute a search query and set the results to the state\n   *\n   * @param {Object} url_params: Additional search params for the API search URL\n   * @returns {Promise}\n   */\n  fetch_results(url_params) {\n    url_params = url_params || {};\n    // prepare the server request\n    let self = this;\n    let query = this.make_query();\n    this.toggle_loading(true);\n    let promise = this.api.search(this.state.catalog, query, url_params);\n    promise.then(function(data) {\n      console.debug(\"ReferenceWidgetController::fetch_results:GOT DATA: \", data);\n      self.set_results_data(data);\n      self.toggle_loading(false);\n    });\n    return promise;\n  }\n\n  /*\n   * Execute a search for the given searchterm\n   *\n   * @param {String} searchterm: The value entered into the search field\n   * @returns {Promise}\n   */\n  search(searchterm) {\n    if (!searchterm && this.state.results.length > 0) {\n      this.state.searchterm = \"\";\n      return;\n    }\n    console.debug(\"ReferenceWidgetController::search:searchterm:\", searchterm);\n    // set the searchterm directly to avoid re-rendering\n    this.state.searchterm = searchterm || \"\";\n    return this.fetch_results();\n  }\n\n  /*\n   * Fetch results of a page\n   *\n   * @param {Integer} page: The page to fetch\n   * @returns {Promise}\n   */\n  goto_page(page) {\n    page = parseInt(page);\n    let limit = parseInt(this.state.limit)\n    // calculate the beginning of the page\n    // Note: this is the count of previous items that are excluded\n    let b_start = page * limit - limit;\n    return this.fetch_results({b_start: b_start});\n  }\n\n  /*\n   * Add the UID of a search result to the state\n   *\n   * @param {String} uid: The selected UID\n   * @returns {Array} uids: current selected UIDs\n   */\n  select(uid) {\n    console.debug(\"ReferenceWidgetController::select:uid:\", uid);\n    // create a copy of the selected UIDs\n    let uids = [].concat(this.state.uids);\n    // Add the new UID if it is not selected yet\n    if (uids.indexOf(uid) == -1) {\n      uids.push(uid);\n    }\n    this.setState({uids: uids});\n    if (uids.length > 0 && !this.state.multi_valued) {\n      this.clear_results();\n    }\n    return uids;\n  }\n\n  /*\n   * Add/remove the focused result\n   *\n   */\n  select_focused() {\n    console.debug(\"ReferenceWidgetController::select_focused\");\n    let focused = this.state.focused;\n    let result = this.state.results.at(focused);\n    if (result) {\n      let uid = result.uid;\n      if (this.state.uids.indexOf(uid) == -1) {\n        this.select(uid);\n      } else {\n        this.deselect(uid);\n      }\n    }\n  }\n\n  /*\n   * Remove the UID of a reference from the state\n   *\n   * @param {String} uid: The selected UID\n   * @returns {Array} uids: current selected UIDs\n   */\n  deselect(uid) {\n    console.debug(\"ReferenceWidgetController::deselect:uid:\", uid);\n    let uids = [].concat(this.state.uids);\n    let pos = uids.indexOf(uid);\n    if (pos > -1) {\n      uids.splice(pos, 1);\n    }\n    this.setState({uids: uids});\n    return uids;\n  }\n\n  /*\n   * Navigate the results either up or down\n   *\n   * @param {String} direction: either up or down\n   */\n  navigate_results(direction) {\n    let page = this.state.page;\n    let pages = this.state.pages;\n    let results = this.state.results;\n    let focused = this.state.focused;\n    let searchterm = this.state.searchterm;\n\n    console.debug(\"ReferenceWidgetController::navigate_results:focused:\", focused);\n\n    if (direction == \"up\") {\n      if (focused > 0) {\n        this.setState({focused: focused - 1});\n      } else {\n        this.setState({focused: 0});\n        if (page > 1) {\n          this.goto_page(page - 1);\n        }\n      }\n    }\n\n    else if (direction == \"down\") {\n      if (this.state.results.length == 0) {\n        this.search(searchterm);\n      }\n      if (focused < results.length - 1) {\n        this.setState({focused: focused + 1});\n      } else {\n        this.setState({focused: 0});\n        if (page < pages) {\n          this.goto_page(page + 1);\n        }\n      }\n    }\n\n    else if (direction == \"left\") {\n      this.setState({focused: 0});\n      if (page > 0) {\n        this.goto_page(page - 1);\n      }\n    }\n\n    else if (direction == \"right\") {\n      this.setState({focused: 0});\n      if (page < pages) {\n        this.goto_page(page + 1);\n      }\n    }\n  }\n\n  /*\n   * Toggle loading state\n   *\n   * @param {Boolean} toggle: The loading state to set\n   * @returns {Boolean} toggle: The current loading state\n   */\n  toggle_loading(toggle) {\n    if (toggle == null) {\n      toggle = false;\n    }\n    this.setState({\n      loading: toggle\n    });\n    return toggle;\n  }\n\n  /*\n   * Set results data coming from `senaite.jsonapi`\n   *\n   * @param {Object} data: JSON search result object returned from `senaite.jsonapi`\n   */\n  set_results_data(data) {\n    data = data || {};\n    let items = data.items || [];\n\n    let records = Object.assign(this.state.records, {})\n    // update state records\n    for (let item of items) {\n      let uid = item.uid;\n      records[uid] = item;\n    }\n\n    this.setState({\n      records: records,\n      results: items,\n      count: data.count || 0,\n      page: data.page || 1,\n      pages: data.pages || 1,\n      next_url: data.next || null,\n      prev_url: data.previous || null,\n    });\n  }\n\n  /*\n   * Clear results from the state\n   */\n  clear_results() {\n    this.setState({\n      results: [],\n      count: 0,\n      page: 1,\n      pages: 1,\n      next_url: null,\n      prev_url: null,\n    });\n  }\n\n  /*\n   * ReactJS event handler for keydown event\n   */\n  on_keydown(event){\n    // clear results when ESC key is pressed\n    if(event.keyCode === 27) {\n      this.clear_results();\n    }\n  }\n\n  /*\n   * ReactJS event handler for click events\n   */\n  on_click(event) {\n    // clear results when clicked outside of the widget\n    let widget = this.props.root_el;\n    let target = event.target;\n    if (!widget.contains(target)) {\n      this.clear_results();\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"uidreferencewidget\">\n          <References\n            uids={this.state.uids}\n            records={this.state.records}\n            display_template={this.state.display_template}\n            name={this.state.name}\n            on_deselect={this.deselect}\n          />\n          <ReferenceField\n            className=\"form-control\"\n            name=\"uidreference-search\"\n            disabled={this.is_disabled()}\n            on_search={this.search}\n            on_clear={this.clear_results}\n            on_focus={this.search}\n            on_arrow_key={this.navigate_results}\n            on_enter={this.select_focused}\n          />\n          <ReferenceResults\n            className=\"position-absolute shadow border rounded bg-white mt-1 p-1\"\n            columns={this.state.columns}\n            uids={this.state.uids}\n            searchterm={this.state.searchterm}\n            results={this.state.results}\n            focused={this.state.focused}\n            count={this.state.count}\n            page={this.state.page}\n            pages={this.state.pages}\n            padding={this.state.padding}\n            next_url={this.state.next_url}\n            prev_url={this.state.prev_url}\n            on_select={this.select}\n            on_page={this.goto_page}\n            on_clear={this.clear_results}\n          />\n        </div>\n    );\n  }\n}\n\nexport default UIDReferenceWidgetController;\n","class AddressWidgetAPI {\n\n  constructor(props) {\n    console.debug(\"AddressWidgetAPI::constructor\")\n    this.portal_url = props.portal_url;\n    this.on_api_error = props.on_api_error || function(response) {};\n    return this;\n  }\n\n  get_url(endpoint) {\n    return `${this.portal_url}/${endpoint}`\n  }\n\n  /*\n   * Fetch JSON resource from the server\n   *\n   * @param {string} endpoint\n   * @param {object} options\n   * @returns {Promise}\n   */\n  get_json(endpoint, options) {\n    var data, init, method, on_api_error, request, url;\n    if (options == null) {\n      options = {};\n    }\n    method = options.method || \"POST\";\n    data = JSON.stringify(options.data) || \"{}\";\n    on_api_error = this.on_api_error;\n    url = this.get_url(endpoint);\n    init = {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": this.get_csrf_token()\n      },\n      body: method === \"POST\" ? data : null,\n      credentials: \"include\"\n    };\n    console.info(\"AddressWidgetAPI::fetch:endpoint=\" + endpoint + \" init=\", init);\n    request = new Request(url, init);\n    return fetch(request).then(function(response) {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n      return response;\n    }).then(function(response) {\n      return response.json();\n    }).catch(function(response) {\n      on_api_error(response);\n      return response;\n    });\n  }\n\n  fetch_subdivisions(parent) {\n    let url = `geo_subdivisions`\n    console.debug(\"AddressWidgetAPI::fetch_subdivisions:url=\", url);\n    let options = {\n      method: \"POST\",\n      data: {\n        \"parent\": parent,\n      }\n    }\n    return this.get_json(url, options)\n  }\n\n  /*\n   * Get the plone.protect CSRF token\n   */\n  get_csrf_token() {\n    return document.querySelector(\"#protect-script\").dataset.token;\n  };\n\n}\n\nexport default AddressWidgetAPI;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nclass LocationSelector extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render_options() {\n    let options = [];\n    let locations = this.props.locations;\n    options.push(\n      <option value=''></option>\n    );\n    if (Array.isArray(locations)) {\n      for (let location of locations) {\n        options.push(\n          <option value={location}>{location}</option>\n        )\n      }\n    }\n    return options;\n  }\n\n  render() {\n    return (\n      <select\n        id={this.props.id}\n        name={this.props.name}\n        value={this.props.value}\n        onChange={this.props.onChange}>\n        {this.render_options()}\n      </select>\n    );\n  }\n}\n\nexport default LocationSelector;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LocationSelector from \"./LocationSelector.js\";\n\n\nclass AddressField extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  is_location_selector() {\n    return Array.isArray(this.props.locations);\n  }\n\n  is_visible() {\n    let visible = true;\n    if (this.is_location_selector()) {\n      visible = this.props.locations.length > 0;\n    }\n    return visible;\n  }\n\n  render_element() {\n    if (this.is_location_selector()) {\n      return (\n        <LocationSelector\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          locations={this.props.locations}\n          onChange={this.props.onChange} />\n      )\n    } else {\n      return (\n        <input type=\"text\"\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          onChange={this.props.onChange} />\n      )\n    }\n  }\n\n  render() {\n    if (!this.is_visible()) {\n      return (\n        <input type=\"hidden\"\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value} />\n      )\n    }\n    return (\n      <div class=\"form-group form-row mb-2\">\n        <div class=\"col input-group input-group-sm\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\"\n              for={this.props.id}>\n              {this.props.label}\n            </label>\n          </div>\n          {this.render_element()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddressField;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AddressField from \"./AddressField.js\";\n\n\nclass Address extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: props.country,\n      subdivision1: props.subdivision1,\n      subdivision2: props.subdivision2,\n      city: props.city,\n      zip: props.zip,\n      address: props.address,\n      address_type: props.address_type,\n    }\n\n    // Event handlers\n    this.on_country_change = this.on_country_change.bind(this);\n    this.on_subdivision1_change = this.on_subdivision1_change.bind(this);\n    this.on_subdivision2_change = this.on_subdivision2_change.bind(this);\n    this.on_city_change = this.on_city_change.bind(this);\n    this.on_zip_change = this.on_zip_change.bind(this);\n    this.on_address_change = this.on_address_change.bind(this);\n  }\n\n  force_array(value) {\n    if (!Array.isArray(value)) {\n      value = [];\n    }\n    return value;\n  }\n\n  /**\n   * Returns the list of first-level subdivisions of the current country,\n   * sorted alphabetically\n   */\n  get_subdivisions1() {\n    let country = this.state.country;\n    return this.force_array(this.props.subdivisions1[country]);\n  }\n\n  /**\n   * Returns the list of subdivisions of the current first-level subdivision,\n   * sorted sorted alphabetically\n   */\n  get_subdivisions2() {\n    let subdivision1 = this.state.subdivision1;\n    return this.force_array(this.props.subdivisions2[subdivision1]);\n  }\n\n  get_label(key) {\n    let country = this.state.country;\n    let label = this.props.labels[country];\n    if (label != null && label.constructor == Object && key in label) {\n      label = label[key];\n    } else {\n      label = this.props.labels[key];\n    }\n    return label;\n  }\n\n  /** Event triggered when the value for Country selector changes. Updates the\n   * selector of subdivisions (e.g. states) with the list of top-level\n   * subdivisions for the selected country\n   */\n  on_country_change(event) {\n    let value = event.currentTarget.value;\n    console.debug(`Address::on_country_change: ${value}`);\n    if (this.props.on_country_change) {\n      this.props.on_country_change(value);\n    }\n    this.setState({\n      country: value,\n      subdivision1: \"\",\n      subdivision2: \"\",\n    });\n  }\n\n  /** Event triggered when the value for the Country first-level subdivision\n   * (e.g. state) selector changes. Updates the selector of subdivisions (e.g.\n   * districts) for the selected subdivision and country\n   */\n  on_subdivision1_change(event) {\n    let value = event.currentTarget.value;\n    console.debug(`Address::on_subdivision1_change: ${value}`);\n    if (this.props.on_subdivision1_change) {\n      let country = this.state.country\n      this.props.on_subdivision1_change(country, value);\n    }\n    this.setState({\n      subdivision1: value,\n      subdivision2: \"\",\n    });\n  }\n\n  /** Event triggered when the value for the second-level subdivision (e.g.\n   * district) selector changes\n   */\n  on_subdivision2_change(event) {\n    let value = event.currentTarget.value;\n    console.debug(`Address::on_subdivision2_change: ${value}`);\n    if (this.props.on_subdivision2_change) {\n      this.props.on_subdivision2_change(value);\n    }\n    this.setState({subdivision2: value});\n  }\n\n  /** Event triggered when the value for the address field changes\n   */\n  on_address_change(event) {\n    let value = event.currentTarget.value;\n    this.setState({address: value});\n  }\n\n  /** Event triggered when the value for the zip field changes\n   */\n  on_zip_change(event) {\n    let value = event.currentTarget.value;\n    this.setState({zip: value});\n  }\n\n  /** Event triggered when the value for the city field changes\n   */\n  on_city_change(event) {\n    let value = event.currentTarget.value;\n    this.setState({city: value});\n  }\n\n  get_input_id(subfield) {\n    let id = this.props.id;\n    let index = this.props.index;\n    return `${id}-${index}-${subfield}`\n  }\n\n  get_input_name(subfield) {\n    let name = this.props.name;\n    let index = this.props.index;\n    return `${name}.${index}.${subfield}`\n  }\n\n  render() {\n    return (\n      <div>\n          <AddressField\n            id={this.get_input_id(\"country\")}\n            name={this.get_input_name(\"country\")}\n            label={this.props.labels.country}\n            value={this.state.country}\n            locations={this.props.countries}\n            onChange={this.on_country_change} />\n\n          <AddressField\n            id={this.get_input_id(\"subdivision1\")}\n            name={this.get_input_name(\"subdivision1\")}\n            label={this.get_label(\"subdivision1\")}\n            value={this.state.subdivision1}\n            locations={this.get_subdivisions1()}\n            onChange={this.on_subdivision1_change} />\n\n          <AddressField\n            id={this.get_input_id(\"subdivision2\")}\n            name={this.get_input_name(\"subdivision2\")}\n            label={this.get_label(\"subdivision2\")}\n            value={this.state.subdivision2}\n            locations={this.get_subdivisions2()}\n            onChange={this.on_subdivision2_change} />\n\n          <AddressField\n            id={this.get_input_id(\"city\")}\n            name={this.get_input_name(\"city\")}\n            label={this.props.labels.city}\n            value={this.state.city}\n            onChange={this.on_city_change} />\n\n          <AddressField\n            id={this.get_input_id(\"zip\")}\n            name={this.get_input_name(\"zip\")}\n            label={this.props.labels.zip}\n            value={this.state.zip}\n            onChange={this.on_zip_change} />\n\n          <AddressField\n            id={this.get_input_id(\"address\")}\n            name={this.get_input_name(\"address\")}\n            label={this.props.labels.address}\n            value={this.state.address}\n            onChange={this.on_address_change} />\n\n          <input type=\"hidden\"\n            id={this.get_input_id(\"type\")}\n            name={this.get_input_name(\"type\")}\n            value={this.state.address_type} />\n\n      </div>\n    );\n  }\n\n}\n\nexport default Address;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport AddressWidgetAPI from \"./api.js\"\nimport Address from \"./components/Address.js\"\n\n\nclass AddressWidgetController extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Root input HTML element\n    let el = props.root_el;\n\n    this.state = {};\n\n    // Data keys located at the root element\n    // -> initial values are set from the widget class\n    const data_keys = [\n      \"id\",\n      \"name\",\n      \"items\",\n      \"portal_url\",\n      \"labels\",\n      \"countries\",\n      \"subdivisions1\",\n      \"subdivisions2\",\n    ];\n\n    // Query data keys and set state with parsed JSON value\n    for (let key of data_keys) {\n      let value = el.dataset[key];\n      this.state[key] = this.parse_json(value);\n    }\n\n    // Initialize communication API with the API URL\n    this.api = new AddressWidgetAPI({\n      portal_url: this.state.portal_url,\n    });\n\n    // Bind callbacks to current context\n    this.on_country_change = this.on_country_change.bind(this);\n    this.on_subdivision1_change = this.on_subdivision1_change.bind(this);\n\n    return this;\n  }\n\n  parse_json(value) {\n    try {\n      return JSON.parse(value);\n    } catch (error) {\n      console.error(`Could not parse \"${value}\" to JSON`);\n    }\n  }\n\n  /**\n   * Event triggered when the user selects a country. Function fetches and\n   * updates the geo mapping with the first level subdivisions for the selected\n   * country if are not up-to-date yet. It also updates the label for the first\n   * level subdivision in accordance.\n   */\n  on_country_change(country) {\n    console.debug(`widget::on_country_change: ${country}`);\n    let self = this;\n    let promise = this.api.fetch_subdivisions(country);\n    promise.then(function(data){\n\n      // Update the label with the type of 1st-level subdivisions\n      let labels = {...self.state.labels};\n      if (data.length > 0) {\n        labels[country][\"subdivision1\"] = data[0].type;\n      }\n\n      // Create a copy instead of modifying the existing dict from state var\n      let subdivisions = {...self.state.subdivisions1};\n\n      // Only interested in names, sorted alphabetically\n      subdivisions[country] = data.map((x) => x.name).sort();\n\n      // Update current state with the changes\n      self.setState({\n        subdivisions1: subdivisions,\n        labels: labels,\n      });\n    });\n    return promise;\n  }\n\n  /**\n   * Event triggered when the user selects a first-level subdivision of a\n   * country. Function fetches and updates the geo mapping with the second level\n   * subdivisions for the selected subdivision if are not up-to-date. It also\n   * updates the label for the second level subdivision in accordance.\n   */\n  on_subdivision1_change(country, subdivision) {\n    console.debug(`widget::on_subdivision1_change: ${country}, ${subdivision}`);\n    let self = this;\n    let promise = this.api.fetch_subdivisions(subdivision);\n    promise.then(function(data){\n\n      // Update the label with the type of 1st-level subdivisions\n      let labels = {...self.state.labels};\n      if (data.length > 0) {\n        labels[country][\"subdivision2\"] = data[0].type;\n      }\n\n      // Create a copy instead of modifying the existing dict from state var\n      let subdivisions = {...self.state.subdivisions2};\n\n      // Only interested in names, sorted alphabetically\n      subdivisions[subdivision] = data.map((x) => x.name).sort();\n\n      // Update current state with the changes\n      self.setState({\n        subdivisions2: subdivisions,\n        labels: labels,\n      });\n    });\n    return promise;\n  }\n\n  render_items() {\n    let html_items = [];\n    let items = this.state.items;\n    for (const [index, item] of items.entries()) {\n      let section_title = \"\";\n      if (items.length > 1) {\n        // Only render the title if more than one address\n        section_title = (\n          <strong>{this.state.labels[item.type]}</strong>\n        )\n      }\n\n      html_items.push(\n        <div class=\"mb-2 pt-2\">\n          {section_title}\n          <Address\n            id={this.state.id}\n            name={this.state.name}\n            index={index}\n            address_type={item.type}\n            country={item.country}\n            subdivision1={item.subdivision1}\n            subdivision2={item.subdivision2}\n            city={item.city}\n            zip={item.zip}\n            address={item.address}\n            labels={this.state.labels}\n            countries={this.state.countries}\n            subdivisions1={this.state.subdivisions1}\n            subdivisions2={this.state.subdivisions2}\n            on_country_change={this.on_country_change}\n            on_subdivision1_change={this.on_subdivision1_change}\n          />\n        </div>\n      );\n    }\n    return html_items;\n  }\n\n  render() {\n    return (\n        <div className=\"addresswidget\">\n          {this.render_items()}\n        </div>\n    );\n  }\n}\n\nexport default AddressWidgetController;\n","import UIDReferenceWidgetController from \"./widgets/uidreferencewidget/widget.js\"\nimport AddressWidgetController from \"./widgets/addresswidget/widget.js\"\nimport intlTelInput from \"intl-tel-input\";\nimport \"intl-tel-input/build/css/intlTelInput.css\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.info(\"*** SENAITE CORE WIDGETS JS LOADED ***\");\n\n  // Widgets\n  window.widgets = {};\n\n  // TinyMCE\n  let wysiwig_elements = [\n    \"textarea.mce_editable\",\n    \"div.ArchetypesRichWidget textarea\",\n    \"textarea[name='form.widgets.IRichTextBehavior.text']\",\n    \"textarea.richTextWidget\",\n  ]\n  tinymce.init({\n    height: 300,\n    paste_data_images: true,\n    selector: wysiwig_elements.join(\",\"),\n    plugins: [\"paste\", \"link\", \"fullscreen\", \"table\", \"code\"],\n    // NOTE: CSS file must match configuration of entry point in webpack.config.js\n    content_css : \"/++plone++senaite.core.static/bundles/senaite.core.css\",\n  })\n\n  // Referencewidget\n  var ref_widgets = document.getElementsByClassName(\"senaite-uidreference-widget-input\");\n  for (let widget of ref_widgets) {\n    let id = widget.dataset.id;\n    let controller = ReactDOM.render(<UIDReferenceWidgetController root_el={widget} />, widget);\n    window.widgets[id] = controller;\n  }\n\n  // AddressWidget\n  var address_widgets = document.getElementsByClassName(\"senaite-address-widget-input\");\n  for (let widget of address_widgets) {\n    let id = widget.dataset.id;\n    let controller = ReactDOM.render(<AddressWidgetController root_el={widget} />, widget);\n    window.widgets[id] = controller;\n  }\n\n  // PhoneWidget\n  // https://github.com/jackocnr/intl-tel-input#readme\n  let phone_widgets = document.getElementsByClassName(\"senaite-phone-widget-input\");\n  let error_codes = [\"Invalid number\", \"Invalid country code\", \"Too short\", \"Too long\", \"Invalid number\"];\n  let init_phone_input = (el) => {\n    let id = el.dataset.intlTelInputId;\n    let iti = intlTelInput(el, {\n      // avoid that the dropdown is cropped in records widget\n      dropdownContainer: document.body,\n      // https://github.com/jackocnr/intl-tel-input#utilities-script\n      utilsScript: \"++plone++senaite.core.static/modules/intl-tel-input/js/utils.js\"\n    });\n    // add event handler only once\n    if (id === undefined) {\n      el.addEventListener(\"blur\", () => {\n        // validation\n        let valid = iti.isValidNumber();\n        let number = iti.getNumber();\n        let field = el.closest(\".field\");\n        if (valid) {\n          field.classList.remove(\"error\");\n          field.title = \"\";\n        } else {\n          field.classList.add(\"error\");\n          let error_code = iti.getValidationError();\n          let error_msg = error_codes[error_code];\n          field.title = error_msg;\n        }\n        // always set the number (even if validation failed!)\n        let name = el.dataset.name;\n        let hidden = document.querySelector(\"input[name='\" + name + \"']\");\n        hidden.value = number;\n      });\n    }\n  }\n  // initialize all phone widgets\n  for (let widget of phone_widgets) {\n    init_phone_input(widget);\n  }\n  // dynamically initialize new phone widgets when used in datagrid fields\n  document.body.addEventListener(\"datagrid:row_added\", (event) => {\n    let row = event.detail.row;\n    let input = row.querySelector(\".senaite-phone-widget-input\");\n    if(input) {\n      init_phone_input(input);\n    }\n  });\n\n});\n"],"names":["factory","undefined","allCountries","i","length","c","name","iso2","dialCode","priority","areaCodes","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","intlTelInputGlobals","getInstance","input","id","getAttribute","window","instances","documentReady","document","readyState","defaults","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","initialCountry","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","separateDialCode","utilsScript","regionlessNanpNumbers","forEachProp","obj","callback","keys","forEachInstance","method","Iti","options","_this","this","instance","Constructor","TypeError","_classCallCheck","telInput","activeItem","highlightedItem","customOptions","value","hasOwnProperty","hadInitialPlaceholder","Boolean","protoProps","_this2","isMobile","test","navigator","userAgent","body","classList","add","Promise","autoCountryPromise","resolve","reject","resolveAutoCountryPromise","rejectAutoCountryPromise","utilsScriptPromise","resolveUtilsScriptPromise","rejectUtilsScriptPromise","promise","all","selectedCountryData","_processCountryData","_generateMarkup","_setInitialState","_initListeners","_initRequests","_processAllCountries","_processCountryCodes","_processPreferredCountries","_translateCountriesByLocale","countries","sort","_countryNameSort","countryCode","countryCodeMaxLen","countryCodes","index","lowerCaseOnlyCountries","map","country","toLowerCase","filter","indexOf","lowerCaseExcludeCountries","iso","a","b","localeCompare","dialCodes","_addCountryCode","_i","_c","rootCountryCode","j","areaCode","k","partialDialCode","substr","countryData","_getCountryData","push","attrs","container","el","createElement","setAttribute","appendChild","hasAttribute","form","parentClass","wrapper","_createEl","parentNode","insertBefore","flagsContainer","selectedFlag","role","concat","selectedFlagInner","selectedDialCode","dropdownArrow","countryList","_appendListItems","dropdown","hiddenInputName","lastIndexOf","type","className","preferred","tmp","idSuffix","insertAdjacentHTML","attributeValue","inputValue","val","charAt","_getDialCode","isRegionlessNanp","_isRegionlessNanp","_this$options","_updateFlagFromNumber","_setFlag","defaultCountry","_updateValFromNumber","_initKeyListeners","_initBlurListeners","_initDropdownListeners","_initHiddenInputListener","_this3","_handleHiddenInputSubmit","getNumber","addEventListener","tagName","_this4","_handleLabelClick","e","contains","focus","preventDefault","label","_getClosestLabel","_handleClickSelectedFlag","disabled","readOnly","_showDropdown","_handleFlagsContainerKeydown","stopPropagation","_closeDropdown","_this5","intlTelInputUtils","loadUtils","_loadAutoCountry","autoCountry","handleAutoCountry","startedLoadingAutoCountry","setTimeout","_this6","_handleKeyupEvent","_triggerCountryChange","_handleClipboardEvent","number","max","_this7","_handleSubmitOrBlurEvent","_removeEmptyDialCode","numeric","_getNumeric","s","replace","createEvent","initEvent","dispatchEvent","remove","_setDropdownPosition","_highlightListItem","_scrollTo","_bindDropdownListeners","_trigger","shouldHaveClass","_this8","pos","getBoundingClientRect","windowTop","pageYOffset","documentElement","scrollTop","inputTop","top","dropdownHeight","offsetHeight","dropdownFitsBelow","innerHeight","dropdownFitsAbove","_toggleClass","extraTop","style","left","scrollLeft","_handleWindowScroll","_this9","_handleMouseoverCountryList","listItem","_getClosestListItem","_handleClickCountryList","_selectListItem","isOpening","_handleClickOffToClose","query","queryTimer","_handleKeydownOnDropdown","_handleUpDownKey","_handleEnterKey","clearTimeout","_searchForCountry","next","previousElementSibling","nextElementSibling","_startsWith","querySelector","originalNumber","useNational","_intlTelInputUtils$nu","numberFormat","NATIONAL","INTERNATIONAL","format","formatNumber","_beforeSetNumber","isNanp","alreadySelected","shouldFocus","prevItem","ignoreOnlyCountriesOption","allowFail","Error","prevCountry","title","innerHTML","selectedFlagWidth","offsetWidth","_getHiddenSelectedFlagWidth","paddingLeft","_updatePlaceholder","nextItem","containerClone","cloneNode","visibility","flagsContainerClone","selectedFlagClone","width","removeChild","shouldSetPlaceholder","numberType","placeholder","getExampleNumber","flagChanged","_updateDialCode","len","setSelectionRange","removeEventListener","element","middle","containerHeight","containerTop","containerBottom","elementHeight","elementTop","elementBottom","newScrollTop","middleOffset","heightDifference","newDialCodeBare","hasSelectedListItem","newNumber","inputVal","newDialCode","prevDialCode","includeAreaCode","numericChars","isNaN","parseInt","trim","numericVal","start","_cap","setCountry","removeAttribute","getExtension","_getFullNumber","getNumberType","getValidationError","isValidNumber","originalCountryCode","prototype","getCountryData","injectScript","path","handleSuccess","handleFailure","script","onload","onerror","async","src","startedLoadingUtilsScript","version","iti","_init","module","exports","intlTelInput","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","get","prop","call","React","ReactDOM","ReferenceWidgetAPI","api_url","on_api_error","response","endpoint","location","search","data","init","request","url","JSON","stringify","get_api_url","headers","get_csrf_token","credentials","Request","fetch","then","ok","json","catalog","params","Array","isArray","forEach","item","depth","entries","get_json","dataset","token","ReferenceField","state","input_field_ref","on_focus","bind","on_blur","on_change","on_keydown","on_keypress","on_clear_click","on_search_click","current","event","get_search_value","on_search","which","on_clear","on_arrow_key","on_enter","ref","onKeyDown","onKeyPress","onChange","onFocus","onBlur","maxWidth","class","onClick","ReferenceResults","on_select","on_page","on_prev_page","on_next_page","on_close","columns","get_columns","column","results","get_results","minWidth","backgroundColor","zIndex","result","uid","uids","align","_t","rows","get_result_uid","focused","build_columns","searchterm","get_column_names","highlighted","highlight","dangerouslySetInnerHTML","__html","used","text","rx","RegExp","replaceAll","m","error","pages","total","page","padding","first_page","last_page","crop_before","crop_after","cls","join","next_url","prev_url","currentTarget","has_results","get_style","position","right","build_close_button","build_header_columns","build_rows","build_prev_button","build_pages","build_next_button","References","on_deselect","template","context","display_template","records","interpolate","items","get_selected_uids","render_display_template","build_selected_items","UIDReferenceWidgetController","loading","count","b_start","root_el","parse_json","api","goto_page","clear_results","select","select_focused","deselect","navigate_results","on_click","widget","parse","readonly","multi_valued","assign","q","limit","complete","url_params","self","make_query","toggle_loading","set_results_data","fetch_results","setState","at","splice","direction","toggle","previous","keyCode","is_disabled","AddressWidgetAPI","portal_url","get_url","parent","LocationSelector","locations","render_options","AddressField","visible","is_location_selector","is_visible","for","render_element","Address","subdivision1","subdivision2","city","zip","address","address_type","on_country_change","on_subdivision1_change","on_subdivision2_change","on_city_change","on_zip_change","on_address_change","force_array","subdivisions1","subdivisions2","labels","constructor","subfield","get_input_id","get_input_name","get_label","get_subdivisions1","get_subdivisions2","AddressWidgetController","fetch_subdivisions","subdivisions","x","subdivision","html_items","section_title","render_items","widgets","tinymce","height","paste_data_images","selector","plugins","content_css","getElementsByClassName","controller","render","phone_widgets","error_codes","init_phone_input","intlTelInputId","valid","field","closest","error_code","error_msg","detail","row"],"sourceRoot":""}