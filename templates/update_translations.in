#!/bin/bash

BASE=${buildout:directory}
I18N=$BASE/bin/i18ndude
LOCALES=$BASE/src/senaite/core/locales
EXCLUDE="build *.html"

function die() {
    echo "ERROR: $1"
}

# Check if we have i18n in place
if test ! -x $I18N; then
    echo "You must install i18ndude in your buildout: https://pypi.python.org/pypi/i18ndude"
    echo "See https://github.com/collective/collective.developermanual/blob/master/source/i18n/localization.txt"
    die "i18ndude not installed"
fi

# Check Transifex Installed
function has_tx() {
  TX=$(which tx)
  if test ! -x $TX || test -z $TX; then
     return -1
  else
      return 0
  fi
}

# Transifex Pull Function
function tx_pull() {
    if has_tx; then
        cd $LOCALES
        echo "Transifex Pull"
        tx pull -a -f
    else
        die "Please install the Transifex Client first: $ pip install transifex-client"
    fi
    cd $BASE
}

# Transifex Push Function
function tx_push() {
    if has_tx; then
        cd $LOCALES
        echo "Transifex Push"
        tx push -s -t --skip
    else
        die "Please install the Transifex Client first: $ pip install transifex-client"
    fi
    cd $BASE
}

# Clean all generated .mo files
find $LOCALES -name "*.mo" -delete

# Pull Transifex
tx_pull

# Generate the senaite.core Domain
echo "Processing domain: senaite.core"
# Flush the english (transifex source language) po files
# If we don't do this, new senaite.core-manual.pot translations won't be synced.
echo -n "" > $LOCALES/en/LC_MESSAGES/senaite.core.po
# Re-scan the source code for new strings and create a temporary senaite.core-tmp.pot
$I18N rebuild-pot --pot $LOCALES/senaite.core-tmp.pot --exclude "$EXCLUDE" --create senaite.core src
# Merge the manual translations of senaite.core-manual.pot into the temporary senaite.core-tmp.pot
$I18N merge --pot $LOCALES/senaite.core-tmp.pot --merge $LOCALES/senaite.core-manual.pot
# Overwrite the existing senaite.core.pot
mv $LOCALES/senaite.core-tmp.pot $LOCALES/senaite.core.pot
# Synchronize all .po files with the new senaite.core.pot
$I18N sync --pot $LOCALES/senaite.core.pot $LOCALES/*/LC_MESSAGES/senaite.core.po
echo "Processing domain: senaite.core [DONE]"
echo ""

# Generate Plone Domain
echo "Processing domain: plone"
# Flush the english (transifex source language) po files
# If we don't do this, new plone-manual.pot translations won't be synced.
echo -n "" > $LOCALES/en/LC_MESSAGES/plone.po
# Re-scan the source code for new strings and create a temporary plone-tmp.pot
$I18N rebuild-pot --pot $LOCALES/plone-tmp.pot --exclude "$EXCLUDE" --create plone src
# Remove those resources that already exists in senaite.core domain
# We need this because in Python files, i18ndude simply looks for text within an
# underscore method: _("...") without known the domain. Therefore, resources
# from senaite.core domain are also grabbed inside plone-tmp.pot
# Store the difference to plone.pot
$I18N filter $LOCALES/plone-tmp.pot $LOCALES/senaite.core.pot > $LOCALES/plone.pot
# Remove plone-tmp.pot
rm $LOCALES/plone-tmp.pot
# Synchronize all .po files with the new plone.pot
$I18N sync --pot $LOCALES/plone.pot $LOCALES/*/LC_MESSAGES/plone.po
echo "Processing domain: plone [DONE]"

# Push Transifex
tx_push
